<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Helios&#39;blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-01-07T08:31:40.517Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Helios</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>断言及数据驱动测试</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium10/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium10/</id>
    <published>2025-01-07T08:28:15.369Z</published>
    <updated>2025-01-07T08:31:40.517Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="断言及数据驱动测试"><a href="#断言及数据驱动测试" class="headerlink" title="断言及数据驱动测试*"></a><strong>断言及数据驱动测试</strong>*</h2><p><strong>实验目的：</strong>了解XPath表达式的含义，掌握XPath绝对路径和相对路径的表达方法，能够熟练使用XPath表达式进行元素选择；了解Selenium应用execute_script()函数执行JS的原理，能够在自动化测试过程中完成JS常用操作的执行。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>每个自动化测试过程都要检查测试结果与预期是否一致，以判断测试用例是否通过。</p><p>如果自动化脚本缺少断言，就无法准确获得脚本的运行过程中是否存在非预期的情况，整个测试就不完整。前面的学习中，其实我们使用过if进行断言判断，也应用过try抛出异常进行断言判断，现在来学习通过Assert断言进行判断。</p><p>一、 Assert断言的使用：</p><p>应用Assert断言时，如果测试失败，将终止该测试。</p><ol><li>页面属性断言：</li></ol><p>这是最常用的断言方式，可以用来断言页面是否正常打开，是否在指定的窗口及页面上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开百度网站</span></span><br><span class="line">wd.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line">wd.maximize_window()</span><br><span class="line"><span class="comment"># 点击菜单中&#x27;新闻&#x27;超链接</span></span><br><span class="line">wd.find_element(By.LINK_TEXT, <span class="string">&#x27;新闻&#x27;</span>).click()</span><br><span class="line"><span class="comment"># 切换到最后一个窗口</span></span><br><span class="line">wd.switch_to.window(wd.window_handles[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 断言标题包含&#x27;百度新闻&#x27;</span></span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;百度新闻&#x27;</span> <span class="keyword">in</span> wd.title</span><br><span class="line"><span class="comment"># 断言为指定url</span></span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;https://news.baidu.com/&#x27;</span> == wd.current_url</span><br><span class="line"><span class="comment"># 断言页面源码不包含not found(一般Nginx找不到页面时返回404页面， 显示Not Found)</span></span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;not found&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> wd.page_source</span><br><span class="line"></span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure><ol start="2"><li>图片及链接断言：</li></ol><p>图片是否显示以及链接是否能正常打开，我们可以通过driver.get(‘图片或链接地址’)，看是否返回404页面来判断图片是否能正常打开。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开百度网站</span></span><br><span class="line">wd.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line">wd.maximize_window()</span><br><span class="line"></span><br><span class="line">baidu_logo_url = wd.find_element(By.ID, <span class="string">&#x27;s_lg_img&#x27;</span>).get_attribute(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;百度Logo图片链接&#x27;</span>，baidu_logo_url)</span><br><span class="line"><span class="comment"># 尝试打开图片</span></span><br><span class="line">wd.get(baidu_logo_url)</span><br><span class="line"><span class="comment"># 假设不存在报错页面包含Not Found字样</span></span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;Not Found&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> wd.page_source</span><br><span class="line">wd.back()</span><br><span class="line">hao123_link_url = wd.find_element(By.LINK_TEXT, <span class="string">&#x27;hao123&#x27;</span>).get_attribute(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hao123链接&#x27;</span>， hao123_link_url)</span><br><span class="line"><span class="comment"># 尝试打开页面</span></span><br><span class="line">wd.get(hao123_link_url)</span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;Not Found&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> wd.page_source</span><br><span class="line">wd.back()</span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure><p>另一个问题：当我们成功的调试并运行了一个测试用例脚本时，就更想看看使用多组数据运行同样的测试时结果怎样。</p><p>这就需要我们将一个测试转化为数据驱动的测试，转化的过程就是将测试数据从测试代码里分离出来，并为要进行测试的多组数据创建一个保存在测试代码外部的数据表文件。执行测试时，依次读取表文件中数据，代替测试脚本中相应的常量值（此为参数化过程），实现不同数据运行同一份代码的操作。</p><p>可见，数据驱动测试能够避免编写重复代码，方便验证多组数据测试场景，它很好地体现了自动化测试的优势，使测试运行效率更高。</p><p>由于Python有直接操作CSV文件的类库，所以我们以读取CSV文件为例介绍selenium的数据驱动自动化测试。</p><p>CSV（ Comma Separated Values ）逗号分隔值文件：以纯文本形式存储表格数据，由任意数目的记录组成，每条记录由字段组成，字段间的分隔符最常见的是逗号或制表符。看一个实际集图用的CSV 文件中的部分内容，这个文件的格式中逗号隔开的是文件名，文件大小 (以字节为单位)，CRC 校验值。</p><p>Python要操作CSV文件，需要先打开文件，再执行读取或写入过程。此过程中会用到codecs，这是Python标准的模块编码和解码器，通过codecs提供的open()方法，在打开文件时可以指定编码类型，如utf_8_sig可以解决中文乱码问题。，这要导入codecs库及。CSV库，然后才能使用它。CSV库中有2个最常用的对象：csv.reader：以列表的形式返回读取的数据；csv.writer：以列表的形式写入数据。下面我们来看具体示例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sj_mino1001.jpg, 715282, 4FB55FE8</span><br><span class="line">sj_mino1002.jpg, 471289, 93203C5C</span><br><span class="line">sj_mino1003.jpg, 451929, C4E80467</span><br></pre></td></tr></table></figure><p>二、 Python中获取CSV文件数据的方法：</p><ol><li>以只读方式读取CSV文件：</li></ol><p>假设现在要读取的csv文件内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名，密码</span><br><span class="line">byhy,86666666</span><br><span class="line">bbyy,88888888</span><br></pre></td></tr></table></figure><p>以只读方式打开CSV文件，得到列表形式的返回数据，然后输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># codecs 是 Python 标准的模块编码和解码器</span></span><br><span class="line"><span class="comment"># 通过 codecs 提供的open()方法， 在打开文件时可以指定编码类型，如utf_8_sig可以解决中文乱码问题</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="comment"># 引入CSV包</span></span><br><span class="line"><span class="comment"># 以只读的方式打开CSV文件并读取CSV文件</span></span><br><span class="line">data = csv.reader(codecs.<span class="built_in">open</span>(<span class="string">&#x27;D:\\file\\login,csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;utf_8_sig&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line"><span class="comment"># line[0]即读取line中的第一列元素</span></span><br><span class="line"><span class="built_in">print</span>(line[<span class="number">0</span>], line[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名 密码</span><br><span class="line">byhy 86666666</span><br><span class="line">bbyy 88888888</span><br></pre></td></tr></table></figure><ol start="2"><li>以自动关闭文件的方式打开CSV文件进行写入：（一维列表）</li></ol><p>具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="comment"># 引入CSV包</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment"># 新建列表存储要写入的信息</span></span><br><span class="line">list_1 = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;height&#x27;</span>]</span><br><span class="line">list_2 = [<span class="string">&#x27;Mike&#x27;</span>, <span class="string">&#x27;180&#x27;</span>]</span><br><span class="line">list_3 = [<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;175&#x27;</span>]</span><br><span class="line">list_4 = [<span class="string">&#x27;Andy&#x27;</span>, <span class="string">&#x27;170&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以自动关闭文件的方式打开CSV文件进行写入</span></span><br><span class="line"><span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;D:\\file\\health.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;utf_8&#x27;</span>) <span class="keyword">as</span> f：</span><br><span class="line">data_writer = csv.writer(f)</span><br><span class="line">    data_writer.writerow(list_1)</span><br><span class="line">    data_writer.writerow(list_2)</span><br><span class="line">    data_writer.writerow([list_3, list_4])</span><br><span class="line">data = csv.reader(codecs.<span class="built_in">open</span>(<span class="string">&#x27;D:\\file\\health.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;utf_8&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">    <span class="comment"># line[0]即读取line中的第一列元素</span></span><br><span class="line">    <span class="built_in">print</span>(line[<span class="number">0</span>], line[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name height</span><br><span class="line">Mike 180</span><br><span class="line">Bob 175</span><br><span class="line">Andy 170</span><br></pre></td></tr></table></figure><p>得到一个新文件：</p><p><img src="D:\桌面\wps9.jpg" alt="wps9"></p><ol start="3"><li>以自动关闭文件的方式打开CSV文件进行写入：（二维列表）</li></ol><p>具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="comment"># 引入CSV包</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建列表存储要写入的信息</span></span><br><span class="line"><span class="comment"># 创建列表， 保存header内容</span></span><br><span class="line">header_list = [<span class="string">&quot;设备编号&quot;</span>, <span class="string">&quot;温度&quot;</span>, <span class="string">&quot;湿度&quot;</span>, <span class="string">&quot;转速&quot;</span>]</span><br><span class="line"><span class="comment"># 创建列表， 保存数据</span></span><br><span class="line">data_list = [</span><br><span class="line">[<span class="number">0</span>, <span class="number">31</span>, <span class="number">20</span>, <span class="number">1000</span>],</span><br><span class="line">[<span class="number">1</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">998</span>],</span><br><span class="line">[<span class="number">2</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">1005</span>]</span><br><span class="line">]</span><br><span class="line"><span class="comment"># 以自动关闭文件的方式打开CSV文件进行写入</span></span><br><span class="line"><span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;D:\\file\\equipment.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;utf_8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">data_writer = csv.writer(f)</span><br><span class="line"><span class="comment"># 一次只能写入一行</span></span><br><span class="line">data_writer.writerow(header_list)</span><br><span class="line"><span class="comment"># 一次写入多行</span></span><br><span class="line">data_writer.writerows(data_list)</span><br><span class="line">data = csv.reader(codecs.<span class="built_in">open</span>(<span class="string">&#x27;D:\\file\\equipment.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;utf_8&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line"><span class="comment"># line[0] 即读取line中的第一列元素</span></span><br><span class="line"><span class="built_in">print</span>(line[<span class="number">0</span>], line[<span class="number">1</span>], line[<span class="number">2</span>], line[<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设备编号 温度 湿度 转速</span><br><span class="line">0 31 20 1000</span><br><span class="line">1 30 22 998</span><br><span class="line">2 32 33 1005</span><br></pre></td></tr></table></figure><p>得到一个新文件：</p><p><img src="D:\桌面\wps12.jpg" alt="wps12"></p><p><strong>4.</strong> 将CSV文件中的数据应用到测试脚本中：</p><p><img src="D:\桌面\wps13.jpg" alt="wps13"></p><p>例如，要读取如下的CSV文件，完成在百度首页进行的多数据搜索。</p><p>具体代码如下： </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="comment"># 读取CSV文件并以只读的方式打开CSV文件</span></span><br><span class="line">keys = csv.reader(codecs.<span class="built_in">open</span>(<span class="string">&#x27;D:\\file\\search.csv&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;utf_8_sig&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="comment"># text即读取keys中的第一列元素</span></span><br><span class="line">    <span class="built_in">print</span>(text)</span><br><span class="line">    wd.find_element(By.XPATH, <span class="string">&#x27;//input[@id=&quot;kw&quot;]&#x27;</span>).clear()</span><br><span class="line">    wd.find_element(By.XPATH, <span class="string">&#x27;//input[@id=&quot;kw&quot;]&#x27;</span>).send_keys(text)</span><br><span class="line">    wd.find_element(By.ID, <span class="string">&#x27;su&#x27;</span>).click()</span><br><span class="line">    sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(wd.title)</span><br><span class="line">    </span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure><p>执行结果：经过四次搜索，会得到四个查询结果，输出内容中显示了要搜索的内容及查询后网页的标题。</p><p><img src="D:\桌面\wps15.jpg" alt="wps15"></p><p>练习1：在医疗销售管理系统 <a href="http://127.0.0.1:8047/mgr/sign.html">http://127.0.0.1:8047/mgr/sign.html</a> 中对异常登录进行测试。要求：分别设计5个测试用例，包括：用户名为空、密码为空、用户名错误、密码错误、用户名和密码都错。在excel文件中编写自己设计的测试用例（注意：测试用例要完整，既有测试数据，也要有预期结果），将其另存为csv格式的文档。测试程序读取该文件，根据文件中的预期结果进行断言判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs, csv</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> dirname, join <span class="keyword">as</span> path_join</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    browser = webdriver.Chrome()</span><br><span class="line">    <span class="keyword">return</span> browser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_and_close</span>(<span class="params">fun</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        fun_data = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            browser = login()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;创建句柄出错了&quot;</span>, e)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                browser.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">                fun_data = fun(browser, *args, **kwargs)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;出错了&quot;</span>, e)</span><br><span class="line">                traceback.print_exc()</span><br><span class="line">            browser.close()</span><br><span class="line">        <span class="keyword">return</span> fun_data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@open_and_close</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>(<span class="params">browser</span>):</span><br><span class="line">    browser.get(<span class="string">&#x27;http://127.0.0.1:8047/mgr/sign.html/&#x27;</span>)</span><br><span class="line">    reader = csv.reader(codecs.<span class="built_in">open</span>(path_join(dirname(__file__), <span class="string">&quot;login_test.csv&quot;</span>), <span class="string">&quot;r&quot;</span>, <span class="string">&quot;gbk&quot;</span>))</span><br><span class="line">    <span class="built_in">next</span>(reader)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> reader:</span><br><span class="line">        account = line[<span class="number">0</span>]</span><br><span class="line">        password = line[<span class="number">1</span>]</span><br><span class="line">        browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;[placeholder=&#x27;用户名&#x27;]&quot;</span>).clear()</span><br><span class="line">        browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;[placeholder=&#x27;密码&#x27;]&quot;</span>).clear()</span><br><span class="line">        browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;[placeholder=&#x27;用户名&#x27;]&quot;</span>).send_keys(account)</span><br><span class="line">        browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;[placeholder=&#x27;密码&#x27;]&quot;</span>).send_keys(password)</span><br><span class="line">        browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;.row div button&quot;</span>).click()</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">assert</span> <span class="keyword">not</span> EC.alert_is_present()(browser), <span class="string">&quot;登录错误&quot;</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            EC.alert_is_present()(browser).accept()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> account:</span><br><span class="line">                <span class="built_in">print</span>(line[<span class="number">2</span>])</span><br><span class="line">            <span class="keyword">elif</span> <span class="keyword">not</span> password:</span><br><span class="line">                <span class="built_in">print</span>(line[<span class="number">2</span>])</span><br><span class="line">            <span class="keyword">elif</span> account != <span class="string">&quot;byhy&quot;</span> <span class="keyword">and</span> password != <span class="string">&quot;88888888&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(line[<span class="number">2</span>])</span><br><span class="line">            <span class="keyword">elif</span> account != <span class="string">&quot;byhy&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(line[<span class="number">2</span>])</span><br><span class="line">            <span class="keyword">elif</span> password != <span class="string">&quot;88888888&quot;</span>:</span><br><span class="line">                <span class="built_in">print</span>(line[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    fun1()</span><br></pre></td></tr></table></figure><p>练习2：在医疗销售管理系统中先运行学号+UI_8测试用例，保证系统中有数据。再完成以下测试过程的编写：正常登录<a href="http://127.0.0.1:8047/mgr/sign.html">http://127.0.0.1:8047/mgr/sign.html</a> 后，点击药品按钮，依次获取已有药品信息，将药品名称中的“头孢”替换为“阿奇霉素”；编号改为“H20010556 ”（另外两个末位为5和4），描述信息改为“阿奇霉素注射液，每支2ml，10支装” （另外两个为20支和30支装）。改好的信息保存至medicine.csv文件中，再从文件中读取信息完成新药品的添加操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> isfile, dirname, join <span class="keyword">as</span> path_join</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> codecs, csv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    browser = webdriver.Chrome()</span><br><span class="line">    <span class="keyword">return</span> browser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_and_close</span>(<span class="params">fun</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        fun_data = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            browser = login()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;创建句柄出错了&quot;</span>, e)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                browser.implicitly_wait(<span class="number">1</span>)</span><br><span class="line">                fun_data = fun(browser, *args, **kwargs)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;出错了&quot;</span>, e)</span><br><span class="line">                traceback.print_exc()</span><br><span class="line">            browser.close()</span><br><span class="line">        <span class="keyword">return</span> fun_data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@open_and_close</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>(<span class="params">browser</span>):</span><br><span class="line">    browser.get(<span class="string">&#x27;http://127.0.0.1:8047/mgr/sign.html/&#x27;</span>)</span><br><span class="line">    account = <span class="string">&#x27;byhy&#x27;</span></span><br><span class="line">    password = <span class="string">&#x27;88888888&#x27;</span></span><br><span class="line">    drug_list = [</span><br><span class="line">        [<span class="string">&#x27;头孢盒装1&#x27;</span>, <span class="string">&#x27;YP-20023524&#x27;</span>, <span class="string">&#x27;头孢他啶注射液，每支15ml，10支装&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;头孢盒装2&#x27;</span>, <span class="string">&#x27;YP-20023525&#x27;</span>, <span class="string">&#x27;头孢他啶注射液，每支15ml，20支装&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;头孢盒装3&#x27;</span>, <span class="string">&#x27;YP-20023526&#x27;</span>, <span class="string">&#x27;头孢他啶注射液，每支15ml，30支装&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    client_list = [</span><br><span class="line">        [<span class="string">&#x27;南京鼓楼区中医院1&#x27;</span>, <span class="string">&#x27;2583426507&#x27;</span>, <span class="string">&#x27;江苏省-南京市-鼓楼区-中山北路-253&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;南京鼓楼区中医院2&#x27;</span>, <span class="string">&#x27;2583426508&#x27;</span>, <span class="string">&#x27;江苏省-南京市-鼓楼区-中山北路-254&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;南京鼓楼区中医院3&#x27;</span>, <span class="string">&#x27;2583426509&#x27;</span>, <span class="string">&#x27;江苏省-南京市-鼓楼区-中山北路-255&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    li_list = [[<span class="string">&quot;订单&quot;</span>, <span class="number">2</span>], [<span class="string">&quot;客户&quot;</span>, <span class="number">0</span>], [<span class="string">&quot;药品&quot;</span>, <span class="number">1</span>]]</span><br><span class="line">    browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;[placeholder=&#x27;用户名&#x27;]&quot;</span>).send_keys(account)</span><br><span class="line">    browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;[placeholder=&#x27;密码&#x27;]&quot;</span>).send_keys(password)</span><br><span class="line">    browser.find_element(By.CSS_SELECTOR, <span class="string">&quot;.row div button&quot;</span>).click()</span><br><span class="line">    sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">assert</span> browser.title == <span class="string">&quot;白月销售管理系统&quot;</span>, <span class="string">&quot;没有登录成功&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> li_list:</span><br><span class="line">        browser.find_element(By.XPATH, <span class="string">f&quot;/html/body/div/aside/section/ul/li[<span class="subst">&#123;<span class="number">2</span> + i[<span class="number">1</span>]&#125;</span>]/a&quot;</span>).click()</span><br><span class="line">        <span class="keyword">while</span> browser.find_elements(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[3]//label[last()]&quot;</span>):</span><br><span class="line">            <span class="comment"># 每次删除前判断</span></span><br><span class="line">            <span class="keyword">assert</span> browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[1]/button&quot;</span>).text[-<span class="number">2</span>:] == i[</span><br><span class="line">                <span class="number">0</span>], <span class="string">&quot;菜单项出错&quot;</span></span><br><span class="line">            <span class="comment"># print(i,browser.find_elements(By.XPATH,&quot;/html/body/div/div/section[2]/div[3]//label[last()]&quot;))</span></span><br><span class="line">            browser.find_elements(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[3]//label[last()]&quot;</span>)[<span class="number">0</span>].click()</span><br><span class="line">            <span class="keyword">assert</span> EC.alert_is_present()(browser), <span class="string">&quot;不存在删除弹出框&quot;</span></span><br><span class="line">            <span class="keyword">if</span> EC.alert_is_present()(browser):</span><br><span class="line">                EC.alert_is_present()(browser).accept()</span><br><span class="line">            sleep(<span class="number">0.3</span>)</span><br><span class="line">            <span class="keyword">if</span> EC.alert_is_present()(browser):</span><br><span class="line">                <span class="comment"># 防止出现服务器500错误的提示</span></span><br><span class="line">                EC.alert_is_present()(browser).accept()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># return</span></span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> [client_list, drug_list]:</span><br><span class="line">        browser.find_element(By.XPATH, <span class="string">f&quot;/html/body/div/aside/section/ul/li[<span class="subst">&#123;<span class="number">2</span> + num&#125;</span>]/a&quot;</span>).click()</span><br><span class="line">        browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[1]/button&quot;</span>).click()</span><br><span class="line">        input_div = browser.find_element(By.XPATH, <span class="string">&#x27;/html/body/div/div/section[2]/div[1]&#x27;</span>)</span><br><span class="line">        input_list = input_div.find_elements(By.XPATH, <span class="string">&quot;//input&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> temp:</span><br><span class="line">            input_list[<span class="number">0</span>].send_keys(i[<span class="number">0</span>])</span><br><span class="line">            input_list[<span class="number">1</span>].send_keys(i[<span class="number">1</span>])</span><br><span class="line">            input_div.find_element(By.XPATH, <span class="string">&#x27;//textarea&#x27;</span>).send_keys(i[<span class="number">2</span>])</span><br><span class="line">            input_div.find_elements(By.XPATH, <span class="string">&quot;//button&quot;</span>)[<span class="number">1</span>].click()</span><br><span class="line">            sleep(<span class="number">0.5</span>)</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 判断是否正确添加客户 药品新对象</span></span><br><span class="line">        <span class="keyword">assert</span> browser.find_elements(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[3]&quot;</span>), <span class="string">&quot;没有正确添加客户 药品新对象&quot;</span></span><br><span class="line">    browser.find_element(By.XPATH, <span class="string">f&quot;/html/body/div/aside/section/ul/li[<span class="subst">&#123;<span class="number">2</span> + num&#125;</span>]/a&quot;</span>).click()</span><br><span class="line">    browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[1]/button&quot;</span>).click()</span><br><span class="line">    input_div = browser.find_element(By.XPATH, <span class="string">&#x27;/html/body/div/div/section[2]/div[1]&#x27;</span>)</span><br><span class="line">    input_list = input_div.find_elements(By.XPATH, <span class="string">&quot;//input&quot;</span>)</span><br><span class="line">    input_list[<span class="number">0</span>].send_keys(<span class="string">&#x27;南京鼓楼中院头孢&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    temp_select = Select(browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div[1]/div/section[2]/div[1]/div[1]/div[2]/select&quot;</span>))</span><br><span class="line">    temp_select.select_by_visible_text(<span class="string">&quot;南京鼓楼区中医院2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    temp_select = Select(browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div[1]/div/section[2]/div[1]/div[1]/div[3]/select&quot;</span>))</span><br><span class="line">    temp_select.select_by_visible_text(<span class="string">&quot;头孢盒装1&quot;</span>)</span><br><span class="line">    temp_select.select_by_visible_text(<span class="string">&quot;头孢盒装2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    input_list = browser.find_elements(By.XPATH, <span class="string">&quot;/html/body/div[1]/div/section[2]/div[1]/div[1]/div[3]//input&quot;</span>)</span><br><span class="line">    input_list[<span class="number">0</span>].send_keys(<span class="number">100</span>)</span><br><span class="line">    input_list[<span class="number">1</span>].send_keys(<span class="number">100</span>)</span><br><span class="line">    input_div.find_elements(By.XPATH, <span class="string">&quot;//button&quot;</span>)[<span class="number">1</span>].click()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否正确添加订单新对象</span></span><br><span class="line">    <span class="keyword">assert</span> browser.find_elements(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[3]&quot;</span>), <span class="string">&quot;没有正确添加订单新对象&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取信息保存修改信息到csv</span></span><br><span class="line">    browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div/aside/section/ul/li[3]/a&quot;</span>).click()</span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> codecs.<span class="built_in">open</span>(path_join(dirname(__file__), <span class="string">&quot;medicine.csv&quot;</span>), <span class="string">&quot;w&quot;</span>, <span class="string">&quot;utf_8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data_writer = csv.writer(f)</span><br><span class="line">        <span class="keyword">while</span> browser.find_elements(By.XPATH, <span class="string">f&quot;/html/body/div/div/section[2]/div[<span class="subst">&#123;<span class="number">3</span> + num&#125;</span>]&quot;</span>):</span><br><span class="line">            div = browser.find_element(By.XPATH, <span class="string">f&quot;/html/body/div/div/section[2]/div[<span class="subst">&#123;<span class="number">3</span> + num&#125;</span>]&quot;</span>)</span><br><span class="line">            drug = div.find_element(By.CSS_SELECTOR, <span class="string">&quot;div:nth-child(1) &gt; span:nth-child(2)&quot;</span>).text</span><br><span class="line">            drug_code = <span class="string">f&quot;H2001055<span class="subst">&#123;<span class="number">6</span> - num&#125;</span>&quot;</span></span><br><span class="line">            drug_text = div.find_element(By.CSS_SELECTOR, <span class="string">&quot;div:nth-child(3) &gt; span:nth-child(2)&quot;</span>).text</span><br><span class="line">            drug = <span class="string">&quot;阿奇霉素&quot;</span> + drug[<span class="number">2</span>:]</span><br><span class="line">            drug_text = <span class="string">&quot;阿奇霉素&quot;</span> + drug_text[<span class="number">4</span>:<span class="number">10</span>]+<span class="string">&quot;2&quot;</span>+drug_text[<span class="number">12</span>:]</span><br><span class="line">            <span class="built_in">print</span>(drug_text)</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            data_writer.writerow([drug, drug_code, drug_text])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取信息完成药品添加操作</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> csv.reader(codecs.<span class="built_in">open</span>(path_join(dirname(__file__), <span class="string">&quot;medicine.csv&quot;</span>), <span class="string">&quot;r&quot;</span>, <span class="string">&quot;utf_8_sig&quot;</span>)):</span><br><span class="line">        browser.find_element(By.XPATH, <span class="string">&quot;/html/body/div/div/section[2]/div[1]/button&quot;</span>).click()</span><br><span class="line">        input_div = browser.find_element(By.XPATH, <span class="string">&#x27;/html/body/div/div/section[2]/div[1]&#x27;</span>)</span><br><span class="line">        input_list = input_div.find_elements(By.XPATH, <span class="string">&quot;//input&quot;</span>)</span><br><span class="line">        input_list[<span class="number">0</span>].send_keys(line[<span class="number">0</span>])</span><br><span class="line">        input_list[<span class="number">1</span>].send_keys(line[<span class="number">1</span>])</span><br><span class="line">        input_div.find_element(By.XPATH, <span class="string">&#x27;//textarea&#x27;</span>).send_keys(line[<span class="number">2</span>])</span><br><span class="line">        input_div.find_elements(By.XPATH, <span class="string">&quot;//button&quot;</span>)[<span class="number">1</span>].click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    fun1()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;测试通过&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>Xpath 表达式选择元素及JS执行</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium09/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium09/</id>
    <published>2025-01-07T07:51:28.208Z</published>
    <updated>2025-01-07T08:29:47.243Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Xpath-表达式选择元素及JS执行"><a href="#Xpath-表达式选择元素及JS执行" class="headerlink" title="Xpath 表达式选择元素及JS执行"></a><strong>Xpath</strong> <strong>表达式选择元素及JS执行</strong></h2><p><strong>实验目的：</strong>了解XPath表达式的含义，掌握XPath绝对路径和相对路径的表达方法，能够熟练使用XPath表达式进行元素选择；了解Selenium应用execute_script()函数执行JS的原理，能够在自动化测试过程中完成JS常用操作的执行。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>XPath (XML Path Language) 是由国际标准化组织W3C指定的，用来在 XML 和 HTML 文档中选择节点的语言。目前主流浏览器 (chrome、firefox，edge，safari) 都支持XPath语法。因此，在做Web自动化测试时，可以使用XPath表达式进行元素选择。</p><p>在 <a href="https://cdn2.byhy.net/files/selenium/test1.html">https://cdn2.byhy.net/files/selenium/test1.html</a> 网页中验证下列内容。</p><p>一、 XPath中绝对路径的表达：</p><p>从HTML文档根节点开始，到某个节点，每层都依次写下来，每层之间用 <code>/</code> 分隔的表达式，就是某元素的绝对路径。可见， <code>/</code> 有点像 CSS中的 <code>&gt;</code> , 表示直接子节点关系。</p><p>使用Xpath来选择web元素，应该调用 WebDriver对象的 <code>find_element()</code> 或者 <code>find_elements()</code>方法，其中参数要使用 By.XPATH。</p><p>例如：<code>elements = driver.find_elements(By.XPATH, &quot;/html/body/div&quot;)</code></p><p>二、 XPath中相对路径的表达：</p><p>在xpath语法中， <code>//</code> 表示从当前节点往下寻找所有的后代元素，不管这个元素在什么位置。这种表示方法就是相对路径。</p><p>比如想要选择网页中某一类元素，如：选择所有标签名为 div 的元素，语法为： <code>//div</code> 。</p><p><code>&#39;//&#39;</code> 符号也可以继续加在后面。比如，要选择所有的 div 元素里面的所有的 p 元素 ，不管div在什么位置，也不管p元素在div下面的什么位置，则可以这样写 <code>//div//p</code> 。</p><p>具体代码为：<code>elements = driver.find_elements(By.XPATH, &quot;//div//p&quot;)</code></p><p>相当于CSS选择器的：<code>elements = driver.find_elements(By.CSS_SELECTOR, &quot;div  p&quot;)</code></p><p>注意，如果要选择 所有的 div 元素里面的 直接子节点 p：</p><p>Xpath表示为：<code>elements = driver.find_elements(By.XPATH, &quot;//div/p&quot;)</code></p><p>CSS表示为：<code>elements = driver.find_elements(By.CSS_SELECTOR, &quot;div &gt; p&quot;)</code></p><p>三、 XPath中通配符的使用：</p><p><code>*</code> 是一个通配符，对应任意节点名的元素。</p><p>如果要选择所有div节点的所有直接子节点，可以使用表达式 <code>//div/*</code></p><p>四、 XPath根据属性选择元素：</p><p>语法为： <code>[@属性名=&#39;属性值&#39;]</code></p><ol><li>根据id属性选择：</li></ol><p>例如：选择 id 为 west 的元素，写成： <code>//*[@id=&#39;west&#39;]</code></p><ol start="2"><li>根据class属性选择：</li></ol><p>例如：选择所有 select 元素中 class为 single_choice 的元素，写成：<code>//select[@class=&#39;single_choice&#39;]</code></p><p>注意：对于一个元素class 有多个值时要写完整，如：<code>//p[@class=&#39;capital huge-city&#39;]</code></p><ol start="3"><li>根据其它属性选择：</li></ol><p>例如：选择具有 multiple 属性的所有页面元素，写成：<code>//*[@multiple]</code></p><ol start="4"><li>根据属性值包含的字符串选择：</li></ol><p>a. 要选择 style属性值 包含 color 字符串的页面元素，写成：<code>//*[contains(@style,&#39;color&#39;)]</code></p><p>b. 要选择 style属性值 以 color 字符串 开头的页面元素，写成：<code>//*[starts-with(@style,&#39;color&#39;)]</code></p><p>c. 要选择 style属性值 以 color 字符串 结尾的页面元素，应写成： <code>//*[ends-with(@style,&#39;color&#39;)]</code>，但这是xpath 2.0 的语法，目前浏览器都不支持。</p><p>五、 XPath根据元素在父节点中的次序进行选择：</p><p>其语法为：直接在方括号中使用数字表示次序。</p><ol><li>根据某类型第几个子元素选择：</li></ol><p>例如：要选择 p类型第2个的子元素，写成： <code>//p[2]</code>  </p><p>注意，这里表示的是p类型的第2个子元素，不是指“第2个子元素，并且是p类型”。</p><p>又如： <code>//div/p[2]</code>  表示要选取父元素为div 中的 p类型下第2个子元素</p><ol start="2"><li>根据某类型倒数第几个子元素选择：倒数使用last()</li></ol><p>例如：<code>//p[last()]</code>  表示选取p类型中倒数第1个子元素；</p><p>​ <code>//p[last()-1]</code>  则表示选取p类型中倒数第2个子元素</p><p>又如：<code>//div/p[last()-2]</code>  表示选择父元素为div中p类型倒数第3个子元素</p><ol start="3"><li>根据次序范围选择：</li></ol><p>例如：要选取option类型第1到2个子元素，写成： <code>//option[position()&lt;=2]</code> 或 <code>//option[position()&lt;3]</code></p><p>又如：要选择class属性为multi_choice的前3个子元素，写成： <code>//*[@class=&#39;multi_choice&#39;]/*[position()&lt;=3]</code></p><p>而选择class属性为multi_choice的后3个子元素，要写成：<code>//*[@class=&#39;multi_choice&#39;]/*[position()&gt;=last()-2]</code></p><p>注意：在选择元素过程中，如果分两步完成：先定位到一个元素，再要在此元素内部使用XPath选择元素， 必须在XPath表达式最前面加个点，否则表示的范围是整个页面。\</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先寻找id是china的元素</span></span><br><span class="line">china = wd.find_element(By.ID, <span class="string">&#x27;china&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再选择该元素内部的p元素</span></span><br><span class="line">elements = china.find_elements(By.XPATH, <span class="string">&#x27;.//p&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;---------------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>六、 XPath中的组选择：</p><p>在选择满足多个表达式要求的所有元素时，XPath的表达式多个表达式间是用 竖线 隔开。</p><p>例如：要选所有的option元素和所有的 h4 元素，写成：<code>//option | //h4</code></p><p>等同于CSS选择器的：<code>option</code> , <code>h4</code></p><p>又如：要选所有的 class 为 single_choice 和 class 为 multi_choice 的元素，写成： <code>//*[@class=&#39;single_choice&#39;] | //*[@class=&#39;multi_choice&#39;]</code></p><p>等同于CSS选择器的： <code>.single_choice</code> , <code>.multi_choice</code></p><p>七、 XPath中向上选择父节点：</p><p>XPath中不仅可以根据元素在父节点中的次序进行选择，还可以选择某个元素的父节点，我们用 &#x2F;.. 表示。当某个元素没有特征可以直接选择，但是它的某个子节点有特征， 就可以采用这种方法，先选择子节点，再指定父节点。</p><p>例如：要选择 id 为 china 的节点的父节点，写成： <code>//*[@id=&#39;china&#39;]/..</code></p><p>还可以继续找上层父节点，比如：  <code>//*[@id=&#39;china&#39;]/../../..</code></p><p>八、 XPath中兄弟节点的选择：</p><ol><li>选择后续兄弟节点：</li></ol><p>这与 CSS选择器要选择某个节点的后续兄弟节点时，用波浪线是不同的。其语法为： <code>following-sibling::</code></p><p>例如，要选择 class 为 single_choice 的元素的所有后续兄弟节点，写成： <code>//*[@class=&#39;single_choice&#39;]/following-sibling::*</code> ，等同于CSS选择器 .single_choice ~ *</p><p>不选择所有后续兄弟节点，而要选择后续节点中的div节点，就要写成 <code>//*[@class=&#39;single_choice&#39;]/following-sibling::div</code></p><ol start="2"><li>选择前面的兄弟节点：</li></ol><p>CSS选择器目前没有方法选择前面的兄弟节点，而XPath表达式可以，其语法为： <code>preceding-sibling::</code></p><p>例如，要选择 class 为 single_choice 的元素的所有前面的兄弟节点，写成： <code>//*[@class=&#39;single_choice&#39;]/preceding-sibling::*</code></p><p>Selenium能够处理JS ，这使selenium拥有更为强大的能力。既然能够执行JS ，那么JS能做的事情，selenium大部分也能做。</p><p>Selenium可以在当前窗口&#x2F;框架中同步执行JavaScript。应用的函数是：<code>execute_script(script, *args)</code>，其中：script是被执行的js代码（代码中加入 return可以直接返回我们需要的数据），*args是被执行的JS脚本中使用的参数。</p><p>实际执行JS时有两种场景：一种是在页面上直接执行JS，另一种是在某个已经定位的元素上执行JS（也就是可以先使用WebDriver获取想要操作的元素，然后使用JavaScript执行操作）。</p><p>九、 调用JS时常用的操作：</p><ol><li>获取页面标题：</li></ol><p>JS代码很简单，就是：<code>document.title</code></p><p>调用代码：<code>text = driver.execute_script(&quot;return document.title&quot;)</code></p><p>由于使用了return，则 text中写入了具体的页面标题。</p><ol start="2"><li>弹出alert弹窗：</li></ol><p>JS代码为：<code>window.alert(&quot;hello selenium&quot;)</code></p><p>调用代码：<code>driver.execute_script(&quot;window.alert(&#39;hello selenium&#39;)&quot;)</code></p><ol start="3"><li>获取元素：</li></ol><p>a. 根据元素的id获取元素：</p><p>​JS代码为： <code>js_code = document.getElementById(元素id值)</code></p><p>b. 根据元素的class属性获取元素：</p><p>​JS代码为： <code>js_code = document.getElementsByClassName (元素class值)</code></p><p>c. 根据元素的TagName属性获取元素：</p><p>​JS代码为： <code>js_code = document.getElementsByTagName (标签名)</code></p><p>d. 根据元素的css属性获取元素：</p><p>​JS代码为： </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">js_code = <span class="variable language_">document</span>. <span class="title function_">querySelector</span>(css表达式)   （选择一个元素）</span><br><span class="line"></span><br><span class="line">js_code = <span class="variable language_">document</span>. <span class="title function_">querySelectorAll</span>(css表达式)   （选择多个元素）</span><br></pre></td></tr></table></figure><p>​调用代码： <code>driver.execute_script(js_code)</code></p><ol start="4"><li>拉动滚动条方法：</li></ol><p>JS代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">js_code = <span class="string">&quot;document.documentElement.scrollTop=10000&quot;</span>（给一个非常大的值就可以将页面滑动至底部）</span><br><span class="line"></span><br><span class="line">js_code = <span class="string">&quot;document.documentElement.scrollTop=0&quot;</span> （给一个非常小的值就可以滑动到页面顶部）</span><br><span class="line"></span><br><span class="line">js_code = <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>,<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span>)  模拟鼠标滚轮向右向下滑动（负值反向），到可视窗口的最底部</span><br></pre></td></tr></table></figure><p>调用代码：<code>driver.execute_script(js_code)</code></p><ol start="5"><li>对某个已选择元素element执行基本操作：（使用带参数的调用）</li></ol><p>调用代码： <code>driver.execute_script(&quot;arguments[0].click();&quot;, element)</code></p><p>又如： <code>driver.execute_script(&quot;arguments[0].scrollIntoView();&quot;, element)</code></p><ol start="6"><li>修改元素属性：</li></ol><p>使用JS可以对已获取到的元素的属性进行修改。</p><p>例如：要修改“百度一下”按钮的value属性为“你猜一下”；修改“换一换”的样式为“18px的字号，红色，加粗”；修改搜索框的可见属性为“隐藏”。</p><p>JS代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">js_code = <span class="string">&quot;document.getElementById(&#x27;su&#x27;).value=&#x27;你猜一下&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">js_code = <span class="string">&quot; document.querySelector(&#x27;#hotsearch-refresh-btn&gt;span&#x27;).style=&#x27;color: red; font-size:18px; font-Weight:bolder;&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line">js_code = <span class="string">&quot;document.getElementById(&#x27;kw&#x27;).style. visibility=&#x27;hidden&#x27;&quot;</span></span><br></pre></td></tr></table></figure><p>依次调用三次，调用代码为：<code>driver.execute_script(js_code)</code></p><p>为了减少多次调用代码造成的冗余，可将JS语句通过英文分号连接，作为execute_script()的script参数进行传参。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">driver.execute_script(</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">document.getElementById(&#x27;su&#x27;).value=&#x27;你猜一下&#x27;;</span></span><br><span class="line"><span class="string">document.querySelector(&#x27;#hostsearch-refresh-btn &gt; span&#x27;).style=&#x27;color: red; font-size:18px; font-Weight:bolder;&#x27;;</span></span><br><span class="line"><span class="string">document.getElementById(&#x27;kw&#x27;).style. visibilty=&#x27;hidden&#x27;;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>练习1：修改UI_7程序，要求在执行所有操作前，先确定系统中没有订单、客户和药品，如果有，点击删除按钮删除掉。注意：订单数据依赖于客户和药品，必须先删除订单，然后方可删除客户和药品。修改部分的元素选择过程用XPath方法实现。预期结果仍为：成功登录后，添加订单成功。 python测试用例程序命名为：学号+UI_8.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;http://127.0.0.1:8047/mgr/sign.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#username&#x27;</span>).send_keys(<span class="string">&quot;byhy&quot;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#password&#x27;</span>).send_keys(<span class="string">&quot;88888888&quot;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-xs-12&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断是否存在客户，药品，订单；若长度大于0则存在</span></span><br><span class="line">js_code = <span class="string">&quot;return document.getElementsByClassName(&#x27;search-result-item&#x27;).length&quot;</span></span><br><span class="line"><span class="comment"># 先删订单</span></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[4]/a&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span> driver.execute_script(js_code) &gt; <span class="number">0</span>:</span><br><span class="line">        ele1 = driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[5]/div/label&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> ele1:</span><br><span class="line">            ele1.click()</span><br><span class="line">            driver.switch_to.alert.accept()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[3]/a&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span> driver.execute_script(js_code) &gt; <span class="number">0</span>:</span><br><span class="line">        ele1 = driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[4]/div/label[2]&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> ele1:</span><br><span class="line">            ele1.click()</span><br><span class="line">            driver.switch_to.alert.accept()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[2]/a&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span> driver.execute_script(js_code) &gt; <span class="number">0</span>:</span><br><span class="line">        ele1 = driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[4]/div/label[2]&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> ele1:</span><br><span class="line">            ele1.click()</span><br><span class="line">            driver.switch_to.alert.accept()</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[3]/a&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/button&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">name1 = [<span class="string">&quot;头孢盒装1&quot;</span>, <span class="string">&quot;头孢盒装2&quot;</span>, <span class="string">&quot;头孢盒装3&quot;</span>]</span><br><span class="line">model1 = [<span class="string">&quot;YP-20023524&quot;</span>, <span class="string">&quot;YP-20023525&quot;</span>, <span class="string">&quot;YP-20023526&quot;</span>]</span><br><span class="line">text1 = [<span class="string">&quot;头孢他啶注射液，每支15ml，10支装&quot;</span>, <span class="string">&quot;头孢他啶注射液，每支15ml，20支装’； ‘头孢盒装3&quot;</span>, <span class="string">&quot;头孢他啶注射液，每支15ml，30支装&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[1]/input&#x27;</span>).send_keys(name1[i])</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[2]/input&#x27;</span>).send_keys(model1[i])</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/textarea&#x27;</span>).send_keys(text1[i])</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[2]/button[1]&#x27;</span>).click()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[2]/a&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/button&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">name2 = [<span class="string">&quot;南京鼓楼区中医院1&quot;</span>, <span class="string">&quot;南京鼓楼区中医院2&quot;</span>, <span class="string">&quot;南京鼓楼区中医院3&quot;</span>]</span><br><span class="line">tele1 = [<span class="string">&quot;2583426507&quot;</span>, <span class="string">&quot;2583426508&quot;</span>, <span class="string">&quot;2583426509&quot;</span>]</span><br><span class="line">addr1 = [<span class="string">&quot;江苏省-南京市-鼓楼区-中山北路-253&quot;</span>, <span class="string">&quot;江苏省-南京市-鼓楼区-中山北路-254&quot;</span>, <span class="string">&quot;江苏省-南京市-鼓楼区-中山北路-255&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[1]/input&#x27;</span>).send_keys(name2[i])</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[2]/input&#x27;</span>).send_keys(tele1[i])</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/textarea&#x27;</span>).send_keys(addr1[i])</span><br><span class="line">    driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[2]/button[1]&#x27;</span>).click()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[4]/a/span&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/button&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[1]/input&#x27;</span>).send_keys(<span class="string">&quot;南京鼓楼中院头孢&quot;</span>)</span><br><span class="line"></span><br><span class="line">select1 = Select(driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[2]/select&#x27;</span>))</span><br><span class="line">select1.select_by_visible_text(<span class="string">&quot;南京鼓楼区中医院2&quot;</span>)</span><br><span class="line">select2 = Select(driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/select&#x27;</span>))</span><br><span class="line">select2.select_by_visible_text(<span class="string">&quot;头孢盒装1&quot;</span>)</span><br><span class="line">select2.select_by_visible_text(<span class="string">&quot;头孢盒装2&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/div[1]/input&#x27;</span>).send_keys(<span class="string">&quot;100&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/div[2]/input&#x27;</span>).send_keys(<span class="string">&quot;100&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[2]/button[1]&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[4]/a&#x27;</span>).click()</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;南京鼓楼中院头孢&#x27;</span> == driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[1]/span[2]&#x27;</span>).text:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;添加订单成功&quot;</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>练习2：在<a href="https://www.byhy.net/_files/stock1.html">https://www.byhy.net/_files/stock1.html</a> 网页中修改“股票名称”输入框的边框为“3px solid red”，删除输入框的提示输入内容placeholder属性；“一句话建议”输入框的提示输入内容placeholder属性改为“说说哪个股票最优”，输入文本颜色为“绿色”、14px、加粗且居中；查询结果第一条的背景色为黄色。在“一句话建议”输入框中输入“不好说”。python测试用例程序命名为：学号+LX10-1.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">wd = webdriver.Chrome()</span><br><span class="line">wd.get(<span class="string">&quot;https://www.byhy.net/_files/stock1.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">js_code01 = <span class="string">&quot;document.querySelector(&#x27;#kw&#x27;).style=&#x27;border-color: 3px solid red;&#x27;&quot;</span></span><br><span class="line">js_code02 = <span class="string">&quot;document.querySelector(&#x27;#kw&#x27;).removeAttribute(&#x27;placeholder&#x27;)&quot;</span></span><br><span class="line">js_code03 = <span class="string">&quot;document.querySelector(&#x27;#suggestion&#x27;).placeholder=&#x27;说说哪个股票最优&#x27;&quot;</span></span><br><span class="line">js_code04 = <span class="string">&quot;document.querySelector(&#x27;#suggestion&#x27;).style=&#x27;color: green;font-size: 14px;font-weight: bold;text-align: center;&#x27;&quot;</span></span><br><span class="line">js_code05 = <span class="string">&quot;document.querySelector(&#x27;.search-result&#x27;).children[0].style=&#x27;background-color: yellow;&#x27;&quot;</span></span><br><span class="line">js_code06 = <span class="string">&quot;document.querySelector(&#x27;#suggestion&#x27;).value=&#x27;不好说&#x27;&quot;</span></span><br><span class="line">wd.execute_script(js_code01)</span><br><span class="line">wd.execute_script(js_code02)</span><br><span class="line">wd.execute_script(js_code03)</span><br><span class="line">wd.execute_script(js_code04)</span><br><span class="line">wd.execute_script(js_code05)</span><br><span class="line">wd.execute_script(js_code06)</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure><p>练习3：调用JS完成以下操作：在浏览器中访问百度网站，获取并输出当前网页的标题和地址；弹出alert弹窗显示“你好！”再点击确定关闭；设置搜索框输入字体颜色为蓝色加粗，value值为“selenium”，边框为绿色，删除搜索框元素的autocomplete属性；执行搜索查询；在网页中拉动滚动条至右下角，再滑动到顶部。关闭浏览器。整个过程适当添加等待时间，使相关步骤的操作可见。python测试用例程序命名为：学号+LX10-2.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">wd = webdriver.Chrome()</span><br><span class="line">wd.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">js_code01 = <span class="string">&quot;return document.title&quot;</span></span><br><span class="line">js_code02 = <span class="string">&quot;return window.location.href&quot;</span></span><br><span class="line">js_code03 = <span class="string">&quot;window.alert(&#x27;你好！&#x27;)&quot;</span></span><br><span class="line">js_code04 = <span class="string">&quot;document.querySelector(&#x27;#kw&#x27;).style=&#x27;color: blue;font-weight: bold;border-color: green;&#x27;&quot;</span></span><br><span class="line">js_code05 = <span class="string">&quot;document.querySelector(&#x27;#kw&#x27;).value=&#x27;selenium&#x27;&quot;</span></span><br><span class="line">js_code06 = <span class="string">&quot;document.querySelector(&#x27;#kw&#x27;).removeAttribute(&#x27;autocomplete&#x27;)&quot;</span></span><br><span class="line">js_code07 = <span class="string">&quot;document.documentElement.scrollTop=10000&quot;</span></span><br><span class="line">js_code08 = <span class="string">&quot;document.documentElement.scrollTop=0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(wd.execute_script(js_code01))</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(wd.execute_script(js_code02))</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.execute_script(js_code03)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.switch_to.alert.accept()</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.execute_script(js_code04)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.execute_script(js_code05)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.execute_script(js_code06)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#su&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.execute_script(js_code07)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">wd.execute_script(js_code08)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">wd.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>弹出对话框、文件上传及页面截图的操作处理</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium08/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium08/</id>
    <published>2025-01-07T07:44:46.580Z</published>
    <updated>2025-01-07T08:27:53.043Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="弹出对话框、文件上传及页面截图的操作处理"><a href="#弹出对话框、文件上传及页面截图的操作处理" class="headerlink" title="弹出对话框、文件上传及页面截图的操作处理"></a><strong>弹出对话框、文件上传及页面截图的操作处理</strong></h2><p><strong>实验目的：</strong>了解原生对话框的概念及类型，掌握Alert（警告信息）、confirm（确认信息）和prompt（提示输入）的操作方法；学习使用标准控件和非标准控件进行文件上传的操作命令；掌握截取浏览器屏幕内容保存为图片文件的方法。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>在web前端自动化测试过程种，经常会遇到对浏览器弹出的各种原生对话框的处理。</p><p>这种弹窗不是HTML的元素，它是属于浏览器自带的弹窗（是由JavaScript生成的），所以叫做原生对话框。因此，用F12选择元素的方法是选择不到的，也无法定位。</p><p>原生对话框有三种类型，分别是： Alert（警告信息）、confirm（确认信息）和prompt（提示输入）。</p><p>Selenium所提供的switch_to.alert方法可以定位到alert&#x2F;confirm&#x2F;prompt对话框。使用text&#x2F;accept&#x2F;dismiss&#x2F;send_keys函数进行相关操作。</p><p>（练习网址：<a href="https://cdn2.byhy.net/files/selenium/test4.html%EF%BC%89">https://cdn2.byhy.net/files/selenium/test4.html）</a></p><p>在网页中对弹出对话框进行操作时，需要知道界面中是否有弹窗。expected_conditions类（需要先导入：<code>from selenium.webdriver.support import expected_conditions as EC</code>）中包括判断页面上是否存在alert的函数： <code>alert_is_present()</code>。针对原生对话框的操作，就可以在先判断网页中存在弹出对话框后再执行。</p><p>一、 操作Alert（警告信息）：</p><p>Alert（警告信息）框中除了显示通知信息外，只含有一个OK按钮，当用户看完信息后，点击确定就可以了。如果我们不去点击，就不能操作页面中的其它元素。</p><ol><li><p>模拟用户点击 OK 按钮： <code>driver.switch_to.alert.accept()</code></p></li><li><p>获取弹出对话框中的信息内容： <code>driver.switch_to.alert.text</code></p></li></ol><p>二、 操作confirm（确认信息）：</p><p>confirm（确认信息）框用来向用户提示一个“是与否”问题，含有一个OK和一个Cancel按钮，主要是让用户确认是否要进行某个操作。</p><ol><li><p>模拟用户点击 OK 按钮： <code>driver.switch_to.alert.accept()</code></p></li><li><p>模拟用户点击 Cancel 按钮： <code>driver.switch_to.alert.dismiss()</code></p></li></ol><p>三、 操作prompt（提示输入）：</p><p>prompt（提示输入）框提供一个文本字段，用户可以在此字段输入一个答案来响应相关提示。含有一个OK和一个Cancel按钮。选择“确认”会响应对应的提示信息，选择“取消”会关闭对话框。由于prompt框中是要输入内容的，所以对prompt可以使用send_keys函数。</p><ol><li>模拟用户输入一些信息，提交上去： <code>driver.switch_to.alert.send_keys(上传文本)</code></li></ol><p>四、 文件上传操作：</p><p>文件上传是web页面上很常见的一个功能。要对这一功能进行测试，一般情况下，需要将准备好的文件放在预定的路径下，然后在Selenium自动化测试的脚本中，编写去预置的路径下获取文件的代码即可。</p><ol><li>标准控件（input）上传：</li></ol><p>被测产品的UI界面中存在可输入文件路径的input输入框（该input框元素可能是可见元素，也有可能是隐藏元素，它的type 属性通常为“file”），可以通过<code>send_keys(&#39;文件路径&#39;)</code>函数进行上传。</p><p>例如：访问 <a href="http://www.sahitest.com/demo/php/fileUpload.htm">http://www.sahitest.com/demo/php/fileUpload.htm</a> 网页，定位到第一个可输入文件路径的input输入框，调用send_keys()方法传入要上传的文件路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开学习网站</span></span><br><span class="line">wd.get(<span class="string">&#x27;http://www.sahitest.com/demo/php/fileUpload.htm&#x27;</span>)</span><br><span class="line"><span class="comment"># 定位input元素，使用send_keys() 方法传入要上传的文件路径</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#file&#x27;</span>).send_key(<span class="string">&#x27;D:\\file\\f1.txt&#x27;</span>)</span><br><span class="line"><span class="comment"># 点击提交按钮，上传文件</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;form[name=&quot;form1&quot;] input[value=&quot;Submit Single&quot;]&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>需要上传多个文件，可以多次调用send_keys方法。</p><ol start="2"><li>非标准控件（非input型）上传：</li></ol><p>如果被测系统界面中不存在可输入文件路径的input输入框，就要借用第三方手段来辅助完成上传文件的操作，这里我们介绍使用 win32gui完成文件的上传。</p><p>首先需要安装pywin32库，我们要在pycharm terminal 中输入安装语句：<code>pip install pypiwin32</code></p><p>然后要在测试脚本中导入 <code>import win32com.client</code></p><p>找到可通过点击上传的元素，执行点击，等待上传选择文件对话框打开。</p><p>在Windows环境中，运行的程序可以调用Wshshell（WScript.Shell）对象，对Windows的外壳程序进行访问，执行操作系统外壳常用的操作，比如运行程序、读写注册表、环境变量等。尤其，当这个Wshshell对象无法识别，又要在此对象内输入字符串时，可以调用Wshshell对象的SendKeys()方法，直接向当前的应用程序发送键盘消息。我们这里就是将完整的文件路径字符串发送输入到文件打开对话框的文件名文本框中，字符串末尾要加’\n’，表示回车确定（也可能是 ‘\r’ 或者 ‘\r\n’），实现非input型文件上传过程。</p><p>例如，访问 <a href="https://tinypng.com/">https://tinypng.com</a> 网页，演示非标准控件文件上传方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开在线图片网站</span></span><br><span class="line">wd.get(<span class="string">&#x27;https://tinypng.com&#x27;</span>)</span><br><span class="line">wd.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到点击上传的元素，点击</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.target .icon&#x27;</span>).click()</span><br><span class="line"><span class="comment"># 等待上传选择文件对话框打开</span></span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 获取当前活跃的应用程序 shell对象</span></span><br><span class="line">shell = win32com.client.Dispatch(<span class="string">&quot;wScript.Shell&quot;</span>)</span><br><span class="line"><span class="comment"># shell对象可以执行操作系统外壳常用的操作，比如运行程序，读写注册表，扩展环境变量等</span></span><br><span class="line"><span class="comment"># 当一个对象无法识别，又要在此对象内输入字符串时，调用shell对象的SendKeys方法</span></span><br><span class="line"><span class="comment"># 输入文件路径，回车确定直接发送键盘消息给 当前应用程序，</span></span><br><span class="line"><span class="comment"># 有的系统需要加&#x27;\r&#x27;,有的系统需要加&#x27;\r\n&#x27;</span></span><br><span class="line">shell.Sendkeys(<span class="string">r&#x27;D:\file\f2.png&#x27;</span>+<span class="string">&#x27;&#123;ENTER&#125;&#x27;</span>+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure><p>练习1： 打开<a href="https://cdn2.byhy.net/files/selenium/test4.html%E7%BD%91%E9%A1%B5%EF%BC%8C%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%8C%96%EF%BC%8C%E5%88%86%E5%88%AB%E7%82%B9%E5%87%BBalter%E6%8C%89%E9%92%AE%E3%80%81confirm%E6%8C%89%E9%92%AE%E5%8F%8Aprompt%E6%8C%89%E9%92%AE%EF%BC%8C%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%AF%B9%E5%BA%94%E7%9A%84%E5%BC%B9%E5%87%BA%E5%AF%B9%E8%AF%9D%E6%A1%86%EF%BC%8C%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%88%99%E6%89%93%E5%8D%B0%E2%80%9C%E6%9C%AA%E5%BC%B9%E5%87%BA%EF%BC%81%E2%80%9D%EF%BC%9B%E5%AD%98%E5%9C%A8%E5%88%99%E6%89%93%E5%8D%B0%E5%AF%B9%E8%AF%9D%E6%A1%86%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF%E6%96%87%E6%9C%AC%EF%BC%8C%E5%B9%B6%E5%88%86%E5%88%AB%E7%82%B9%E5%87%BBalter%E5%AF%B9%E8%AF%9D%E6%A1%86%E4%B8%AD%E2%80%9C%E7%A1%AE%E5%AE%9A%E2%80%9D%E6%8C%89%E9%92%AE%E3%80%81confirm%E5%AF%B9%E8%AF%9D%E6%A1%86%E4%B8%AD%E2%80%9C%E5%8F%96%E6%B6%88%E2%80%9D%E6%8C%89%E9%92%AE%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%9C%A8prompt%E5%AF%B9%E8%AF%9D%E6%A1%86%E7%9A%84%E8%BE%93%E5%85%A5%E6%A1%86%E5%86%85%E8%BE%93%E5%85%A5%E2%80%9Cpython%E4%B9%8Bselenium%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E2%80%9D%E6%96%87%E6%9C%AC%E4%B8%94%E7%82%B9%E5%87%BB%E2%80%9C%E7%A1%AE%E5%AE%9A%E2%80%9D%E6%8C%89%E9%92%AE%E3%80%82%E9%92%88%E5%AF%B9confirm%E5%AF%B9%E8%AF%9D%E6%A1%86%E5%92%8Cprompt%E5%AF%B9%E8%AF%9D%E6%A1%86%E7%9A%84%E6%93%8D%E4%BD%9C%E8%BF%9B%E8%A1%8C%E6%A3%80%E6%9F%A5%EF%BC%88%E8%BF%99%E4%B8%A4%E4%B8%AA%E6%93%8D%E4%BD%9C%E6%89%A7%E8%A1%8C%E5%90%8E%E9%A1%B5%E9%9D%A2%E4%B8%AD%E6%9C%89%E7%9B%B8%E5%BA%94%E6%96%87%E6%9C%AC%E6%8F%90%E7%A4%BA%EF%BC%89%E3%80%82%E5%89%8D%E9%9D%A2%E7%9A%84%E6%AF%8F%E4%B8%AA%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9A%82%E5%81%9C3%E7%A7%92%EF%BC%8C%E6%96%B9%E4%BE%BF%E8%A7%82%E5%AF%9F%E3%80%82%E5%85%B3%E9%97%AD%E6%B5%8F%E8%A7%88%E5%99%A8%E3%80%82">https://cdn2.byhy.net/files/selenium/test4.html网页，窗口最大化，分别点击alter按钮、confirm按钮及prompt按钮，检查是否存在对应的弹出对话框，不存在则打印“未弹出！”；存在则打印对话框提示信息文本，并分别点击alter对话框中“确定”按钮、confirm对话框中“取消”按钮，以及在prompt对话框的输入框内输入“python之selenium自动化测试”文本且点击“确定”按钮。针对confirm对话框和prompt对话框的操作进行检查（这两个操作执行后页面中有相应文本提示）。前面的每个操作后暂停3秒，方便观察。关闭浏览器。</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line">path = Service()</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://cdn2.byhy.net/files/selenium/test4.html&quot;</span>)</span><br><span class="line">driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;b1&#x27;</span>).click()</span><br><span class="line"><span class="keyword">if</span> EC.alert_is_present():</span><br><span class="line">    <span class="built_in">print</span>(driver.switch_to.alert.text)</span><br><span class="line">    sleep(<span class="number">3</span>)</span><br><span class="line">    driver.switch_to.alert.accept()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;未弹出！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;b2&#x27;</span>).click()</span><br><span class="line"><span class="keyword">if</span> EC.alert_is_present():</span><br><span class="line">    <span class="built_in">print</span>(driver.switch_to.alert.text)</span><br><span class="line">    sleep(<span class="number">3</span>)</span><br><span class="line">    driver.switch_to.alert.dismiss()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;未弹出！&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;#add&gt;li&#x27;</span>).text==<span class="string">&quot;取消操作&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;confirm框测试通过！&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;confirm框测试失败！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID,<span class="string">&#x27;b3&#x27;</span>).click()</span><br><span class="line"><span class="keyword">if</span> EC.alert_is_present():</span><br><span class="line">    <span class="built_in">print</span>(driver.switch_to.alert.text)</span><br><span class="line">    sleep(<span class="number">3</span>)</span><br><span class="line">    driver.switch_to.alert.send_keys(<span class="string">&quot;python之selenium自动化测试&quot;</span>)</span><br><span class="line">    sleep(<span class="number">3</span>)</span><br><span class="line">    driver.switch_to.alert.accept()</span><br><span class="line">    sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#add &gt; li:nth-child(2)&#x27;</span>).text==<span class="string">&quot;你想学习:python之selenium自动化测试&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;prompt按钮已确认被点击&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;prompt测试失败&#x27;</span>)</span><br></pre></td></tr></table></figure><p>练习2： 在浏览器中访问百度网站并将窗口最大化，进行实操练习。在百度搜索框中输入文本“Selenium”并搜索，点击“设置”菜单，打开“搜索设置”界面，在搜索语言范围中：设置“仅简体中文”，在搜索结果显示条数中：设置搜索结果“每页50条”，点击保存设置。此时应该会弹出alter类对话框，打印对话框内容，点击对话框中“确定”按钮，否则打印输出“未弹出！”。检查搜索结果是否每页50条（注意：有的搜索结果中有1条为“大家还在搜”，需把剔除此条记录），正确输出“每页显示50条设置通过！”，否则输出“设置失败！”。重新打开“搜索设置”界面，点击“恢复默认”按钮，此时仍会弹出alter类对话框，打印对话框内容，点击对话框中“确定”按钮。检查搜索结果是否每页10条，按上述过程输出测试结果。关闭浏览器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains, Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line">path = Service()</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line"><span class="comment">#1</span></span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.s_ipt&#x27;</span>).send_keys(<span class="string">&quot;Selenium&quot;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;#su&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> driver.window_handles:</span><br><span class="line">    driver.switch_to.window(handle)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;wd=Selenium&quot;</span> <span class="keyword">in</span> driver.current_url:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># print(driver.title)</span></span><br><span class="line">ac=ActionChains(driver)</span><br><span class="line">e1=driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.pf&#x27;</span>)</span><br><span class="line">ac.move_to_element(e1).pause(<span class="number">3</span>)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">ac.perform()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.bdpfmenu .set:nth-child(1)&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;#se-settting-2 span:nth-child(2) label&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;#se-setting-3 span:nth-child(3) label&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.bottom-btn-wrap .prefpanelgo&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">is_exist = EC.alert_is_present()(driver)</span><br><span class="line"><span class="keyword">if</span> is_exist!=<span class="literal">False</span>:</span><br><span class="line">    <span class="built_in">print</span>(driver.switch_to.alert.text)</span><br><span class="line">    driver.switch_to.alert.accept()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未弹出&quot;</span>)</span><br><span class="line">searcher_record=driver.find_elements(By.CSS_SELECTOR,<span class="string">&#x27;.c-container h3&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(searcher_record)==<span class="number">50</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;每页显示50条数据设置通过&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;设置失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">e1=driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.pf&#x27;</span>)</span><br><span class="line">ac.move_to_element(e1).pause(<span class="number">3</span>)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">ac.perform()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.bdpfmenu .set:nth-child(1)&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.prefpanelrestore&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> is_exist!=<span class="literal">False</span>:</span><br><span class="line">    <span class="built_in">print</span>(driver.switch_to.alert.text)</span><br><span class="line">    driver.switch_to.alert.accept()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未弹出&quot;</span>)</span><br><span class="line"></span><br><span class="line">searcher_record2=driver.find_elements(By.CSS_SELECTOR,<span class="string">&#x27;.c-container h3&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(searcher_record2)==<span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;每页显示10条数据设置通过&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;恢复默认设置失败&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>练习3：自己准备好两个png图片文件，仿照例题在<a href="https://tinypng.com网站中完成两种方式的文件上传.先定位到该网页中可输入文件路径的input输入框,上传文件1,完成后截屏保存为sp1.png.再利用pywin32库实现图片2的上传,完成后截屏保存为sp2.png.适当调整文件上传后的等待时间,使截屏图片能够反映成功上传后的完整信息.关闭浏览器./">https://tinypng.com网站中完成两种方式的文件上传。先定位到该网页中可输入文件路径的input输入框，上传文件1，完成后截屏保存为sp1.png。再利用pywin32库实现图片2的上传，完成后截屏保存为sp2.png。适当调整文件上传后的等待时间，使截屏图片能够反映成功上传后的完整信息。关闭浏览器。</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains, Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.actions.action_builder <span class="keyword">import</span> ActionBuilder</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.select <span class="keyword">import</span> Select</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">import</span> win32com.client</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://tinypng.com/&quot;</span>)</span><br><span class="line">driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">input1=driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.target input[type=&quot;file&quot;]&#x27;</span>)</span><br><span class="line">input1.send_keys(<span class="string">r&quot;D:\file\1.jpg&quot;</span>)</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line">driver.get_screenshot_as_file(<span class="string">r&quot;D:\file\sp1.png&quot;</span>)</span><br><span class="line"><span class="comment">#2</span></span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.target .icon&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">shell=win32com.client.Dispatch(<span class="string">&quot;WScript.Shell&quot;</span>)</span><br><span class="line">shell.SendKeys(<span class="string">r&quot;D:\file\2.jpg&quot;</span>+<span class="string">&#x27;&#123;ENTER&#125;&#x27;</span>+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line">driver.get_screenshot_as_file(<span class="string">r&quot;D:\file\sp2.png&quot;</span>)</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>鼠标键盘操作</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium07/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium07/</id>
    <published>2025-01-07T07:40:49.002Z</published>
    <updated>2025-01-07T07:43:27.001Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="鼠标键盘操作"><a href="#鼠标键盘操作" class="headerlink" title="鼠标键盘操作"></a><strong>鼠标键盘操作</strong></h2><p><strong>实验目的：</strong>了解Selenium 提供的 ActionChains 及Keys类，掌握鼠标点击、移动、拖拽、滚轮操作的方法，以及键盘常用操作，包括：全选、复制、剪切、粘贴、删除、退格、空格、回车、退出、shift键等操作方法。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>在进行Web自动化测试过程中，经常需要进行鼠标操作，包括鼠标的点击、双击、悬停、拖拽等。</p><p>Selenium 提供的 ActionChains 类包含一些特殊的动作的模拟方法，可以通过 ActionChains 类的代码查看。</p><p> <img src="D:\桌面\wps1.jpg" alt="wps1"></p><p>每次调用 ActionChains的方法时，会将各个操作按顺序存入队列，其中可以使用pause(sec)在鼠标操作链中设置等待时间，注意不是使用sleep方法。当调用 perform() 方法时，队列中的事件会依次执行。</p><p>无论是鼠标还是键盘操作，实现动作交互中都需要使用ActionChains方法：</p><p>首先导入ActionChains 类：<code>from selenium.webdriver import ActionChains</code></p><p>（或：<code>from selenium.webdriver.common.action_chains import ActionChains</code>）</p><p>再实例化ActionChains对象：<code>ac = ActionChains(driver)</code></p><p>一般执行时，要先获取操作的元素对象：<code>element = driver.find_element(定位方法,参数)</code> ，然后调用实例化后ActionChains对象的方法。</p><p>一、 鼠标点击操作：</p><ol><li><p>鼠标左键按下并保持（不抬起）：<code>ac.click_and_hold(element)</code></p></li><li><p>鼠标右键单击：<code>ac.context_click(element)</code></p></li><li><p>鼠标左键双击：<code>ac.double_click(element)</code></p></li></ol><p>二、 鼠标移动操作：</p><ol><li>鼠标移动到元素中心点悬停：<code>ac.move_to_element(element)</code></li></ol><p>鼠标放在某些网站元素上面，会动态弹出一些内容，想要查看这些动态内容的特征，需要使用上次课中介绍的冻结界面方法：在 开发者工具栏 控制台 里面执行js代码：<code>setTimeout(function()&#123;debugger&#125;, 5000)</code></p><ol start="2"><li>基于当前鼠标位置按照偏移量移动：<code>ac.move_by_offset(13,15）</code></li></ol><p>表示：向右移动13，向下移动15，若想向左、上移动，偏移量前加负号</p><p>三、 鼠标拖拽与滚轮操作：</p><ol><li>将源对象（需要移动的元素）拖拽到目标对象位置：</li></ol><p><code>drag_and_drop(source, target)</code></p><ol start="2"><li>滚动鼠标滚轮，直到指定元素element出现在屏幕中：</li></ol><p><code>ac.scroll_to_element(element)</code></p><p>注意，各项操作设置后，一定不要忘记调用 perform() 方法，完成操作的执行。</p><p>如果已经生成了动作链，但是没有进行perform操作，即使后面创建了新的动作类实例，鼠标依然处于先前的状态，所以需要释放已经生成但没有执行的动作链。</p><p>释放方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.actions.action_builder <span class="keyword">import</span> ActionBuilder</span><br><span class="line"><span class="comment"># 释放所有 actions</span></span><br><span class="line">ActionBuilder(driver).clear_action()</span><br></pre></td></tr></table></figure><p>自动化测试的过程中，键盘事件也是十分重要的，比如我们需要按下回车键，ctrl+c复制等操作，都离不开键盘事件。</p><p>在selenium中，提供了Keys类以及send_keys方法来供我们操作电脑键盘。</p><p><img src="D:\桌面\wps3.jpg" alt="wps3"></p><p>在使用键盘按键方法前需要先导入 Keys 包：</p><p><code>from selenium.webdriver import Keys</code></p><p>Keys作为类名，类属性名使用大写字母，该类的属性被赋予的值为对应的键盘的ue编码。在selenium中，所有的键盘操作可以通过 sent_keys() 里面改变参数来实现。我们知道，传入的参数为 String 类型的文本 时，主要是在输入框中输入文本内容时使用。当传入的参数为 Keys 类中的键盘按钮的ue编码值 时，则是在某一元素上执行键盘事件。</p><p>另外，某些键盘操作可以利用实例化的ActionChains对象来实现。</p><p>四、 向指定元素输入字符（或某个键）</p><p>先选择指定的元素，例如：</p><p><code>text_input = driver.find_element(By.ID, &quot;textInput&quot;)</code></p><p>将字符输入指定元素：</p><p><code>ac.send_keys_to_element(text_input, &quot;abc&quot;)</code></p><p>等价于：</p><p><code>driver.find_element(By.ID, &quot;textInput&quot;).send_keys(&quot;abc&quot;)</code></p><p>五、 shift键操作：</p><p>结合实例化的ActionChains对象所具有的按下key_down方法，实现shift键操作。例如：</p><p>按下shift键不放，输入字母，得到大写字母：</p><p><code>ac.key_down(Keys.SHIFT).send_keys(&quot;abc&quot;)</code></p><p>按下shift键输入大写A，松开shift键输入小写b：</p><p><code>ac.key_down(Keys.SHIFT).send_keys(&quot;a&quot;).key_up(Keys.SHIFT).send_keys(&quot;b&quot;)</code></p><p>针对指定的元素element，通过使用 sent_keys() 函数并改变不同参数来实现基本热键操作，以下为一些常用方法。</p><p>六、 全选、复制、剪切、粘贴操作：</p><p>Ctrl+a 全选：<code>element.send_keys(Keys.CONTROL, &#39;a&#39;)</code></p><p>Ctrl+c 复制：<code>element.send_keys(Keys.CONTROL, &#39;c&#39;)</code></p><p>Ctrl+x 剪切：<code>element.send_keys(Keys.CONTROL, &#39;x&#39;)</code></p><p>Ctrl+v 粘贴：<code>element.send_keys(Keys.CONTROL, &#39;v&#39;)</code></p><p>七、 删除、退格、空格、回车、退出操作：</p><p>Delete删除： <code>element.send_keys(Keys.DELETE)</code></p><p>Backspace退格：<code>element.send_keys(Keys.BACK_SPACE)</code></p><p>Space空格：<code>element.send_keys(Keys.SPACE)</code></p><p>Enter回车： <code>element.send_keys(Keys.ENTER)</code></p><p>Ese退出： <code>element.send_keys(Keys.ESCAPE)</code></p><p>八、 数字键及F1~F12功能键操作：</p><p>向元素输入数字键1：<code>element.send_keys(Keys.NUMPAD1)</code></p><p>向元素发送F4键： <code>element.send_keys(Keys.F4)</code></p><p>练习1：在浏览器中访问百度网站，将窗口最大化，鼠标置于顶部“地图”菜单项，右键单击，暂停3秒查看界面状态，使用move_by_offset函数将鼠标移动到界面中任何一个热搜超链接上（调试找到适合的偏移量），进行点击，等待5秒，在新打开网页中，应用鼠标滚轮使页面底部的“相关搜索”出现在屏幕中，等待5秒。关闭浏览器。</p><h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.actions.action_builder <span class="keyword">import</span> ActionBuilder</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.implicitly_wait(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 练习一</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line">ac = ActionChains(driver)</span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#s-top-left &gt; a:nth-child(3)&#x27;</span>)</span><br><span class="line">ac.context_click(element).perform()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">ActionBuilder(driver).clear_actions()</span><br><span class="line">ac.move_by_offset(<span class="number">501</span>, <span class="number">326</span>).click().perform()</span><br><span class="line">driver.implicitly_wait(<span class="number">5</span>)</span><br><span class="line">driver.switch_to.window(driver.window_handles[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#rs_new &gt; div&#x27;</span>)</span><br><span class="line">ac.scroll_to_element(element).perform()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>练习2：在浏览器中访问百度网站，将窗口最大化，鼠标悬停在顶部“设置”菜单项，暂停3秒，单击“关闭热搜”，查看界面状态变化；打开新网页“<a href="http://sahitest.com/demo/dragDropMooTools.htm%E2%80%9D">http://sahitest.com/demo/dragDropMooTools.htm”</a> ，拖拽“drag me”方块到“Item 3”上，查看是否出现了“dropped”文本，出现则测试通过，否则失败。关闭浏览器。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.implicitly_wait(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 练习二</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line">ac = ActionChains(driver)</span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#s-usersetting-top&#x27;</span>)</span><br><span class="line">ac.move_to_element(element).perform()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#s-user-setting-menu &gt; a.s-set-hotsearch.set-hide&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="comment"># driver.quit()</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;http://sahitest.com/demo/dragDropMooTools.htm&quot;</span>)</span><br><span class="line">driver.implicitly_wait(<span class="number">5</span>)</span><br><span class="line">ac = ActionChains(driver)</span><br><span class="line">source = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#dragger&#x27;</span>)</span><br><span class="line">target = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;body &gt; div:nth-child(6)&#x27;</span>)</span><br><span class="line">ac.drag_and_drop(source, target).perform()</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>练习3：在浏览器中访问百度网站，使用模拟键盘控制：在搜索输入框中输入大写的“S”，然后输入小写的“elenium!”，对当前输入框内容进行全选、复制操作。打开新网页“<a href="https://www.sogou.com”进入搜狗网站,在其搜索输入框中先执行粘贴,再输入“!”,暂停3秒,然后删除两个字符,执行回车操作,检查是否出现查询结果,是查询结果页测试通过,否则测试失败.关闭浏览器./">https://www.sogou.com”进入搜狗网站，在其搜索输入框中先执行粘贴，再输入“!”，暂停3秒，然后删除两个字符，执行回车操作，检查是否出现查询结果，是查询结果页测试通过，否则测试失败。关闭浏览器。</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.implicitly_wait(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 练习三</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">driver.maximize_window()</span><br><span class="line">ac = ActionChains(driver)</span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&quot;#kw&quot;</span>)</span><br><span class="line">ac.key_down(Keys.SHIFT).send_keys(<span class="string">&quot;S&quot;</span>).key_up(Keys.SHIFT).send_keys(<span class="string">&quot;elenium!&quot;</span>).perform()</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">element.send_keys(Keys.CONTROL, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">element.send_keys(Keys.CONTROL, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">driver.get(<span class="string">&quot;https://www.sogou.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#query&#x27;</span>)</span><br><span class="line">element.send_keys(Keys.CONTROL, <span class="string">&#x27;v&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">element.send_keys(<span class="string">&#x27;!&#x27;</span>)</span><br><span class="line"><span class="comment"># ac.send_keys_to_element(element, &#x27;!&#x27;)</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">element.send_keys(Keys.BACK_SPACE)</span><br><span class="line">element.send_keys(Keys.BACK_SPACE)</span><br><span class="line">element.send_keys(Keys.ENTER)</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"><span class="comment"># assert &quot;搜狗搜索&quot; in driver.title</span></span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> driver.window_handles:</span><br><span class="line">    <span class="comment"># 先切换到该窗口</span></span><br><span class="line">    driver.switch_to.window(handle)</span><br><span class="line">    <span class="comment"># 得到该窗口的标题栏字符串，判断是不是我们要操作的那个窗口</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;搜狗搜索&#x27;</span> <span class="keyword">in</span> driver.title:</span><br><span class="line">        <span class="comment"># 如果是，那么这时候WebDriver对象就是对应的该该窗口，正好，跳出循环，</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;测试通过&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;测试没通过&#x27;</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>选择框操作</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium06/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium06/</id>
    <published>2025-01-07T07:27:07.840Z</published>
    <updated>2025-01-07T07:35:37.868Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="选择框操作"><a href="#选择框操作" class="headerlink" title="选择框操作"></a><strong>选择框操作</strong></h2><p><strong>实验目的：</strong>了解网页中选择框的特性，掌握对radio框、checkbox框、select框的不同选择操作，包括单选、多选及对select框的去除选中元素和获取已选中元素的方法。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>在Html网页文件中，经常被操作的一种元素为选择框，常见的选择框包括： radio框、checkbox框、select框。</p><p>各选择框的特征属性不同，选取元素的方式也不一样。</p><p>一、 radio单选框——在一组备选项中进行单选</p><p>radio单选框的特征是：一组备选项的标签名均为input，具有type属性且值为“radio”，它的一组备选项中被默认选中的元素的checked属性值为“checked”。当点击某一备选项时，此选项被选中，其余选项均不被选中。</p><p>另外，:checked 是CSS伪类选择，对 radio（ 和 checkbox ）类型的input标签元素有效，表示被选中（ checked 状态）的元素。</p><p>例如：在如下单选框中，默认选中的元素为“小凯老师”。</p><p><img src="D:\桌面\wps1.jpg" alt="wps1"></p><p>想要先打印输出当前选中的老师名字，再选择“小雷老师”，操作脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取当前选中的元素</span></span><br><span class="line">element = wd.find_element(By.CSS_SELECTOR,</span><br><span class="line">                          <span class="string">&#x27;#s_radio input[name=&quot;teacher&quot;]:checked&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前选中的是：&#x27;</span>+element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点选 小雷老师</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#s_radio input[value=&quot;小雷老师&quot;]&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>二、 checkbox多选框——在一组备选项中进行多选</p><p>checkbox多选框的特征是：一组备选项的标签名均为input，具有type属性且值为“checkbox”，它的一组备选项中被默认选中的元素的checked属性值为“checked”。</p><p>在checkbox多选框中，点击操作表示选中和不选中两种状态之间的切换。所以要选中checkbox的一个选项，必须先获取当前该复选框的状态，如果该选项已经勾选了，点击就会取消选择。实际操作中，先把已经选中的选项全部点击一下，确保都是未选状态，再按照实际要求点击需要选择的选项。</p><p>例如：在如下多选框中，默认选中的元素为“小凯老师”。</p><p><img src="D:\桌面\wps3.jpg" alt="wps3"></p><p>想要只选择“小雷老师”，操作脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先把 已经选中的选项全部点击一下</span></span><br><span class="line">elements = wd.find_elements(By.CSS_SELECTOR, </span><br><span class="line">  <span class="string">&#x27;#s_checkbox input[name=&quot;teacher&quot;]:checked&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    element.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再点击 小雷老师</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, </span><br><span class="line">  <span class="string">&quot;#s_checkbox input[value=&#x27;小雷老师&#x27;]&quot;</span>).click()</span><br></pre></td></tr></table></figure><p>三、 select框——在一个（下拉）列表中进行选择：</p><p>select框的特征是：一组备选项的标签名不再是input，而是option，它的备选项中被默认选中的元素的selected属性值为“selected”。select框的选择可以是单选，也可以是多选，多选时具有multiple属性。</p><p>对于Select 选择框， Selenium 专门提供了一个 Select类 进行选择或去除操作。使用时需要先导入Select类：<code>from selenium.webdriver.support.ui import Select</code></p><p>Select类 具有多种选择元素的方法：</p><p>根据选项的 value属性值 选择元素：<code>select_by_value</code></p><p>根据选项的 可见文本选择元素：<code>select_by_visible_text</code></p><p>根据选项的 排列次序（从0开始）选择元素：<code>select_by_index</code></p><p>例如：在如下select框中，默认选中的元素为“小凯老师”。</p><p><img src="D:\桌面\图片1.png" alt="图片1"></p><p>想要选择“小雷老师”，操作脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入Select类</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建Select对象</span></span><br><span class="line">select = Select(wd.find_element(By.ID, <span class="string">&quot;ss_single&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 Select 对象选中小雷老师</span></span><br><span class="line">select.select_by_visible_text(<span class="string">&quot;小雷老师&quot;</span>)</span><br></pre></td></tr></table></figure><p>Select类 还具有多种去除选中元素的方法：</p><p>根据选项的 value属性值 去除元素：<code>deselect_by_value</code></p><p>根据选项的 可见文本去除元素：<code>deselect_by_visible_text</code></p><p>根据选项的 排列次序（从0开始）去除元素：<code>deselect_by_index</code></p><p>去除选中的所有元素：<code>deselect_all</code></p><p>对于select多选框，想要选中某几个选项，要注意去掉原来已经选中的选项，再进行选择才能保证正确性。</p><p>例如：想要选择“小雷老师”和“小凯老师”，需要先删除所有已选中的选项，然后再选择指定备选项，操作脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入Select类</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"><span class="comment"># 创建Select对象</span></span><br><span class="line">select = Select(wd.find_element(By.ID, <span class="string">&#x27;ss_multi&#x27;</span>))</span><br><span class="line"><span class="comment"># 清除所有 已经选中的选项</span></span><br><span class="line">select.deselect_all()</span><br><span class="line"><span class="comment"># 选择小雷老师 和 小凯老师</span></span><br><span class="line">select.select_by_visible_text(<span class="string">&#x27;小雷老师&#x27;</span>)</span><br><span class="line">select.select_by_visible_text(<span class="string">&#x27;小凯老师&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Select类 还提供了多种返回选项元素的方法：</p><p>返回select框中选中的第一个选项：<code>first_selected_option</code></p><p>返回select框中选中的所有选项：<code>all_selected_options</code></p><p>返回select框中的所有选项：<code>options</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建Select对象</span></span><br><span class="line">select = Select(wd.find_element(By.ID, <span class="string">&#x27;ss_multi&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前选中的元素并输出</span></span><br><span class="line"><span class="keyword">for</span> option <span class="keyword">in</span> select.all_selected_options:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;当前select多选框选中的是：&#x27;</span> + option.text)</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>四、 冻结界面</p><p>把鼠标放在有些网站的元素上时，会动态弹出一些内容。想要用 selenium 自动化 点击这些动态弹出内容，就需要用 F12 查看这个元素的特征。但是当鼠标从目标项移开，动态弹出内容就整个消失了，没法查看其对应的 HTML。</p><p>解决方法：</p><p>在开发者工具栏 console 里面执行如下js代码：</p><p><code>setTimeout(function()&#123;debugger&#125;, 5000)</code></p><p>表示在 5000毫秒后，执行 debugger 命令，即：使浏览器会进入debug状态。</p><p>debug状态有个特性，此状态下界面被冻住，不管我们怎么点击界面都不会触发事件。</p><p>操作方法：先输入上面代码并回车，执行后将鼠标立即放在能够动态弹出内容处。等待 5秒 到了以后，界面就会因为执行了 debugger 命令而被冻住。我们再点击 开发者工具栏的查看箭头，指向要查看的动态内容，就可以查看其属性了。</p><p>练习1：登录 <a href="https://cdn2.byhy.net/files/selenium/test2.html">https://cdn2.byhy.net/files/selenium/test2.html</a> </p><p>在radio框中选择“小江老师”；</p><p>在checkbox框中选择“小江老师”和“小雷老师”；</p><p>在select框的单选下拉列表中选择“小雷老师” ；</p><p>多选列表中选择全部选项；</p><p>要求：每完成一项上述操作，输出选中的元素。</p><h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 练习一</span></span><br><span class="line">driver.get(<span class="string">&quot;https://cdn2.byhy.net/files/selenium/test2.html&quot;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#s_radio input[value=&quot;小江老师&quot;]&#x27;</span>).click()</span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#s_radio input[name=&quot;teacher&quot;]:checked&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前选中的是: &#x27;</span> + element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elements = driver.find_elements(By.CSS_SELECTOR,<span class="string">&#x27;#s_checkbox input[name=&quot;teacher&quot;]:checked&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    element.click()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#s_checkbox input[value=&#x27;小江老师&#x27;]&quot;</span>).click()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#s_checkbox input[value=&#x27;小雷老师&#x27;]&quot;</span>).click()</span><br><span class="line">elements = driver.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;#s_checkbox input[name=&quot;teacher&quot;]:checked&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;当前选中的是: &#x27;</span> + element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select = Select(driver.find_element(By.ID, <span class="string">&quot;ss_single&quot;</span>))</span><br><span class="line">select.select_by_visible_text(<span class="string">&quot;小雷老师&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> option <span class="keyword">in</span> select.all_selected_options:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;当前选中的是: &#x27;</span>+ option.text)</span><br><span class="line"></span><br><span class="line">select = Select(driver.find_element(By.ID, <span class="string">&quot;ss_multi&quot;</span>))</span><br><span class="line">select.deselect_all()</span><br><span class="line">select.select_by_visible_text(<span class="string">&quot;小江老师&quot;</span>)</span><br><span class="line">select.select_by_visible_text(<span class="string">&quot;小雷老师&quot;</span>)</span><br><span class="line">select.select_by_visible_text(<span class="string">&quot;小凯老师&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> option <span class="keyword">in</span> select.all_selected_options:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;当前选中的是：&#x27;</span> + option.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>练习2：（先将selector.html文件放置在D盘根目录中）根据自己存放文件的路径，在谷歌浏览器中打开’D:\selector.html’网页，完成下列操作：按照自己的性别、爱好进行单选、多选（至少选择两项）按钮选择；对于目标城市选择框，先清除全部选项，再分别使用value属性值、可见文本、排列次序三种方法各选择一个城市，然后使用排列次序去除的方法去掉用value属性值选中的选项；最后打印输出选中的性别、爱好及目标城市中选中的第一个选项。</p><h4 id="提交代码-1"><a href="#提交代码-1" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;D:\桌面\selector.html&quot;</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR, <span class="string">&quot;input[name=&#x27;name&#x27;]&quot;</span>).send_keys(<span class="string">&#x27;王敖杰&#x27;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;input[name=&quot;pw&quot;]&#x27;</span>).send_keys(<span class="string">&#x27;20062218&#x27;</span>)</span><br><span class="line">element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#sexual input[value=&quot;男&quot;]&#x27;</span>)</span><br><span class="line">element.click()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#hobby input[value=&#x27;Java&#x27;]&quot;</span>).click()</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#hobby input[value=&#x27;PHP&#x27;]&quot;</span>).click()</span><br><span class="line">select1 = Select(driver.find_element(By.ID, <span class="string">&#x27;citys&#x27;</span>))</span><br><span class="line">select1.deselect_all()</span><br><span class="line">select1.select_by_value(<span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line">select1.select_by_visible_text(<span class="string">&quot;广州&quot;</span>)</span><br><span class="line">select1.select_by_index(<span class="number">3</span>)</span><br><span class="line">select1.deselect_by_index(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line">elements = driver.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;#hobby input[type=&quot;checkbox&quot;]:checked&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;当前选中的是: &#x27;</span> + element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(select1.all_selected_options[<span class="number">0</span>].text)</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>练习3：以管理员身份登录 <a href="http://127.0.0.1:8047/mgr/sign.html%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D">http://127.0.0.1:8047/mgr/sign.html，用户名</a> ：byhy 密码： 88888888。在系统中添加3种药品，依次为：‘头孢盒装1’,‘YP-20023524’,‘头孢他啶注射液，每支15ml，10支装’； ‘头孢盒装2’,‘YP-20023525’,‘头孢他啶注射液，每支15ml，20支装’； ‘头孢盒装3’,‘YP-20023526’,‘头孢他啶注射液，每支15ml，30支装’。在系统中添加3个客户，依次为：‘南京鼓楼区中医院1’,‘2583426507’,‘江苏省-南京市-鼓楼区-中山北路-253’； ‘南京鼓楼区中医院2’,‘2583426508’,‘江苏省-南京市-鼓楼区-中山北路-254’； ‘南京鼓楼区中医院3’,‘2583426509’,‘江苏省-南京市-鼓楼区-中山北路-255’ 。进入订单管理界面，添加一个订单，具体内容为：订单名称为 南京鼓楼中院头孢；客户选择 南京鼓楼区中医院2；药品选择头孢盒装1和头孢盒装2；每种药品数量填入 100盒。预期结果为：成功登录后，添加订单成功。</p><h4 id="提交代码-2"><a href="#提交代码-2" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment"># 导入Select类</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 WebDriver 实例对象，指明使用chrome浏览器驱动</span></span><br><span class="line">wd = webdriver.Chrome()</span><br><span class="line"><span class="comment"># WebDriver 实例对象的get方法 可以让浏览器打开指定网址</span></span><br><span class="line">wd.get(<span class="string">&#x27;http://127.0.0.1:8047/mgr/sign.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 设置最大等待时长为 10秒</span></span><br><span class="line">wd.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"><span class="comment">#最大化窗口</span></span><br><span class="line">wd.maximize_window()</span><br><span class="line"><span class="comment">#登录白月黑羽系统</span></span><br><span class="line">elementuser = wd.find_element(By.ID, <span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">elementuser.send_keys(<span class="string">&#x27;byhy&#x27;</span>)</span><br><span class="line">elementpass = wd.find_element(By.ID, <span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">elementpass.send_keys(<span class="string">&#x27;88888888&#x27;</span>)</span><br><span class="line">elementbutton=wd.find_element(By.TAG_NAME, <span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">elementbutton.click()</span><br><span class="line"><span class="comment">#在系统中添加3种药品</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;a[href=&quot;#/medicines&quot;]&gt; span&#x27;</span>).click()</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-12 button .glyphicon&#x27;</span>).click()</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(1) input&#x27;</span>).send_keys(<span class="string">&#x27;头孢盒装1&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(2) input&#x27;</span>).send_keys(<span class="string">&#x27;YP-20023524&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(3) textarea&#x27;</span>).send_keys(<span class="string">&#x27;头孢他啶注射液，每支15ml，10支装&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn-xs:nth-child(1)&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(1) input&#x27;</span>).send_keys(<span class="string">&#x27;头孢盒装2&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(2) input&#x27;</span>).send_keys(<span class="string">&#x27;YP-20023525&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(3) textarea&#x27;</span>).send_keys(<span class="string">&#x27;头孢他啶注射液，每支15ml，20支装&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn-xs:nth-child(1)&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(1) input&#x27;</span>).send_keys(<span class="string">&#x27;头孢盒装3&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(2) input&#x27;</span>).send_keys(<span class="string">&#x27;YP-20023526&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(3) textarea&#x27;</span>).send_keys(<span class="string">&#x27;头孢他啶注射液，每支15ml，30支装&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn-xs:nth-child(1)&#x27;</span>).click()</span><br><span class="line"><span class="comment">#添加3个客户</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;[href=&quot;#/customers&quot;] span&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-12&gt;button&#x27;</span>).click()</span><br><span class="line">infors=wd.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;input.form-control&#x27;</span>)</span><br><span class="line">infors[<span class="number">0</span>].send_keys(<span class="string">&#x27;南京鼓楼区中医院1&#x27;</span>)</span><br><span class="line">infors[<span class="number">1</span>].send_keys(<span class="string">&#x27;2583426507&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;textarea&#x27;</span>).send_keys(<span class="string">&#x27;江苏省-南京市-鼓楼区-中山北路-253&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn.btn-green.btn-outlined.btn-xs&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">infors[<span class="number">0</span>].send_keys(<span class="string">&#x27;南京鼓楼区中医院2&#x27;</span>)</span><br><span class="line">infors[<span class="number">1</span>].send_keys(<span class="string">&#x27;2583426508&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;textarea&#x27;</span>).send_keys(<span class="string">&#x27;江苏省-南京市-鼓楼区-中山北路-254&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn.btn-green.btn-outlined.btn-xs&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">infors[<span class="number">0</span>].send_keys(<span class="string">&#x27;南京鼓楼区中医院3&#x27;</span>)</span><br><span class="line">infors[<span class="number">1</span>].send_keys(<span class="string">&#x27;2583426509&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;textarea&#x27;</span>).send_keys(<span class="string">&#x27;江苏省-南京市-鼓楼区-中山北路-255&#x27;</span>)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn.btn-green.btn-outlined.btn-xs&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#添加订单</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;[href=&quot;#/orders&quot;] span&#x27;</span>).click()</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-12 span&#x27;</span>).click()</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.col-lg-8 div:nth-child(1) input&#x27;</span>).send_keys(<span class="string">&#x27;订单1&#x27;</span>)</span><br><span class="line"><span class="comment">#创建Select对象</span></span><br><span class="line">select1 = Select(wd.find_element(By.CSS_SELECTOR, <span class="string">&quot;.col-lg-8 div:nth-child(2) .xxx&quot;</span>))</span><br><span class="line"></span><br><span class="line">select1.select_by_visible_text(<span class="string">&#x27;南京鼓楼区中医院2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">select2 = Select(wd.find_element(By.CSS_SELECTOR, <span class="string">&quot;.col-lg-8 div:nth-child(3) .xxx&quot;</span>))</span><br><span class="line"></span><br><span class="line">select2.select_by_visible_text(<span class="string">&#x27;头孢盒装1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&quot;input[type=&#x27;number&#x27;]&quot;</span>).send_keys(<span class="string">&#x27;100&#x27;</span>)</span><br><span class="line"></span><br><span class="line">select3 = Select(wd.find_element(By.CSS_SELECTOR, <span class="string">&quot;.col-lg-8 div:nth-child(3) .xxx&quot;</span>))</span><br><span class="line">select3.select_by_visible_text(<span class="string">&#x27;头孢盒装2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&quot;.col-lg-8 div div:nth-child(2) input&quot;</span>).send_keys(<span class="string">&#x27;100&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;button.btn-xs:nth-child(1)&#x27;</span>).click()</span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>Frame及窗口切换</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium05/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium05/</id>
    <published>2025-01-07T07:07:12.560Z</published>
    <updated>2025-01-07T07:26:53.017Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Frame及窗口切换"><a href="#Frame及窗口切换" class="headerlink" title="Frame及窗口切换"></a><strong>Frame及窗口切换</strong></h2><p><strong>实验目的：</strong>了解Html中框架的概念，掌握使用WebDriver 对象的 switch_to 属性进行框架转换，方便在selenium中定位到框架中的元素进行操作。同时，明确窗口句柄的定义，掌握应用带有窗口句柄参数的switch_to 属性，够实现窗口间的跳转。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>一个浏览器文档窗口中一般只能显示一个网页文件，但是，使用框架标签就可以将一个浏览器文档窗口分割成多个子窗口，每个子窗口中都可以显示一个独立的网页文件。</p><p>框架元素非常的特殊，是由英文Frame翻译过来的，代表浏览器文档窗口中的一个子窗口。在html语法中，frame 元素或者 iframe元素的内部会包含一个被嵌入的另一份html文档。</p><p>每个框架都含有可以链接到其他多个网页的超链接条目，访问者单击这些超链接条目后，可以将超链接指向的网页文件显示在另一个指定的框架中。如果要求在单个应用窗口中显示一个以上的网页，就可以使用Frame（或iFrame）框架。iframe用来定义一个内联框架，在html文档里嵌入另一个html文档。iframe包含的内容和页面是一个整体，但是frame包含的内容是一个独立的区域。</p><p>在使用selenium打开一个网页时，我们的操作范围默认是当前的 html ，并不包含被嵌入的html文档里面的内容。如果我们要操作被嵌入的 html 文档 中的元素， 就必须把操作范围切换到被嵌入的文档中。</p><p>使用 WebDriver 对象的 switch_to 属性转换，形如：<code>driver.switch_to.frame(frame_reference)</code>，其中frame_reference 可以是 frame 元素的 name 或者 ID属性及 frame 所对应的 WebElement 对象。</p><p>一、 根据frame元素的id进行切换： </p><p>例如frame元素的 id 为‘frame1’，切换语句为： </p><p><code>driver.switch_to.frame(&#39;frame1&#39;)</code></p><p>二、 根据frame元素的name属性值进行切换：</p><p>例如frame元素的name属性值为‘innerFrame’ ，切换语句为：</p><p><code>driver.switch_to.frame(&#39;innerFrame&#39;)</code></p><p>三、 根据frame元素所对应的 WebElement 对象进行切换：</p><p>例如frame元素所对应的 WebElement 对象标签名是iframe，切换语句为：</p><p><code>driver.switch_to.frame(driver.find_element(By.TAG_NAME, &#39;iframe&#39;)</code></p><p>四、 将WebDriver 对象切换回默认区域：</p><p><code>driver.switch_to.default_content()</code></p><p>在针对网站的实际操作中，经常会点击一个链接或者按钮，在新窗口里面打开一个新网址，并操控新窗口里面的元素。用Selenium写的自动化程序，也要模拟实际操作，不能只在当前页面中执行，需要从 WebDriver对象对应的老窗口，切换到要进行自动化操作的新窗口中，转换语法为：<code>driver.switch_to.window(handle)</code>，其中参数handle传入的是指定窗口的句柄。</p><p>五、 窗口切换</p><p>WebDriver对象有window_handles 属性，这是一个列表对象，里面包括了当前浏览器里面所有的窗口句柄（相当于对应网页窗口的一个ID）。我们可以使用一个循环，依次获取 driver.window_handles 里面的所有句柄对象，并且调用 <code>driver.switch_to.window(handle)</code> 方法，切入到每个窗口中。然后根据 标题栏 之类的属性值判断是否为想要切换到的窗口。</p><p>从跳转后的新窗口，返回原窗口的简便方法是：开始处在原窗口时，保存原窗口句柄，在要切换回来时，仍然使用Webdriver对象的switch_to属性的 window方法，把原窗口句柄作为参数进行传递即可。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mainWindow变量保存当前窗口的句柄 </span></span><br><span class="line"></span><br><span class="line">mainWindow = driver.current_window_handle</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> driver.window_handles: </span><br><span class="line"></span><br><span class="line">  <span class="comment"># 先切换到一个窗口 </span></span><br><span class="line"></span><br><span class="line">  driver.switch_to.window(handle) </span><br><span class="line"></span><br><span class="line">  <span class="comment"># 得到该窗口的标题栏字符串，判断是不是我们要操作的那个窗口 </span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="string">&#x27;百度一下，你就知道&#x27;</span> <span class="keyword">in</span> driver.title: </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 如果是，那么这时候WebDriver对象就是对应的窗口，正好，跳出循环， </span></span><br><span class="line"></span><br><span class="line">   Break</span><br><span class="line">…………  <span class="comment"># 省略要在选定窗口中执行的操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过前面保存的原窗口句柄，切换回原窗口 </span></span><br><span class="line">driver.switch_to.window(mainWindow)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>练习1：登录 <a href="https://cdn2.byhy.net/files/selenium/sample2.html%EF%BC%8C">https://cdn2.byhy.net/files/selenium/sample2.html，</a></p><p>①切换进入iframe框架，在其中选择所有动物类型并输出动物名称，</p><p>②切换回外层默认部分，点击“外部按钮”，</p><p>③输出网页中新出现的“你点击了外部按钮”文本信息。关闭浏览器</p><p>练习2：在练习1主要操作过程和关闭浏览器操作之间，添加以下操控步骤：</p><p>①登录 <a href="https://cdn2.byhy.net/files/selenium/sample3.html%EF%BC%8C">https://cdn2.byhy.net/files/selenium/sample3.html，</a></p><p>②输出当前窗口的标题栏文本，点击打开新窗口的链接，</p><p>③切换到新窗口并输出新窗口的标题栏文本，</p><p>④返回原窗口，点击“功能按钮”，输出网页中新出现的“你点击了外部按钮”。</p><ol><li><p>完成练习1和练习2并提交代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 练习一</span></span><br><span class="line">driver.get(<span class="string">&quot;https://cdn2.byhy.net/files/selenium/sample2.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># frame1 =driver.switch_to.frame(driver.find_element(By.CSS_SELECTOR ,&#x27;.frame1&#x27;))</span></span><br><span class="line">driver.switch_to.frame(<span class="string">&#x27;innerFrame&#x27;</span>)</span><br><span class="line">elements = driver.find_elements(By.CLASS_NAME, <span class="string">&#x27;animal&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    <span class="built_in">print</span>(element.text)</span><br><span class="line"></span><br><span class="line">driver.switch_to.default_content()</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;outerbutton&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">show = driver.find_element(By.ID, <span class="string">&#x27;add&#x27;</span>)</span><br><span class="line">show1 = show.find_element(By.TAG_NAME, <span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(show1.text)</span><br><span class="line"><span class="comment"># driver.quit()</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 练习二</span></span><br><span class="line">driver.get(<span class="string">&#x27;https://cdn2.byhy.net/files/selenium/sample3.html&#x27;</span>)</span><br><span class="line">mainWindow = driver.current_window_handle</span><br><span class="line"><span class="built_in">print</span>(driver.title)</span><br><span class="line"></span><br><span class="line">link = driver.find_element(By.TAG_NAME, <span class="string">&#x27;a&#x27;</span>).click()</span><br><span class="line"><span class="comment"># driver.switch_to.window()</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> driver.window_handles:</span><br><span class="line">    <span class="comment"># 先切换到该窗口</span></span><br><span class="line">    driver.switch_to.window(handle)</span><br><span class="line">    <span class="comment"># 得到该窗口的标题栏字符串，判断是不是我们要操作的那个窗口</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Bing&#x27;</span> <span class="keyword">in</span> driver.title:</span><br><span class="line">        <span class="comment"># 如果是，那么这时候WebDriver对象就是对应的该该窗口，正好，跳出循环，</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(driver.title)</span><br><span class="line"></span><br><span class="line">driver.switch_to.window(mainWindow)</span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;outerbutton&#x27;</span>).click()</span><br><span class="line">show2 = driver.find_element(By.ID, <span class="string">&#x27;add&#x27;</span>)</span><br><span class="line">show3 = show2.find_element(By.TAG_NAME, <span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(show3.text)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>打开网易云音乐<a href="https://music.163.com/%E7%BD%91%E7%AB%99%EF%BC%8C%E7%82%B9%E5%87%BB%E2%80%9C%E6%8E%92%E8%A1%8C%E6%A6%9C%E2%80%9D%EF%BC%8C%E5%9C%A8%E5%B7%A6%E4%BE%A7%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%B8%AD%E7%82%B9%E5%87%BB%E2%80%9C%E6%96%B0%E6%AD%8C%E6%A6%9C%E2%80%9D%EF%BC%8C%E5%9C%A8%E6%AD%8C%E6%9B%B2%E5%88%97%E8%A1%A8%E4%B8%AD%E6%89%BE%E5%87%BA%E6%8E%92%E5%90%8D%E4%B8%8A%E5%8D%87%E6%9C%80%E5%A4%9A%E5%92%8C%E4%B8%8B%E9%99%8D%E6%9C%80%E5%A4%9A%E7%9A%84%E6%AD%8C%E6%9B%B2%E5%90%8D%E7%A7%B0%E5%8F%8A%E6%AD%8C%E6%89%8B%EF%BC%8C%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F%E4%B8%BA%EF%BC%9A">https://music.163.com/网站，点击“排行榜”，在左侧菜单栏中点击“新歌榜”，在歌曲列表中找出排名上升最多和下降最多的歌曲名称及歌手，输出格式为：</a></p></li></ol><p>​<code>排名上升最多：歌曲名：XXX  歌手：YYY（若有上升位次相同的换行列出）</code></p><p>​<code>排名下降最多：歌曲名：XXX  歌手：YYY（若有下降位次相同的换行列出）</code></p><h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#xml是XML和HTML的解析器，其主要功能是解析和提取XML和HTML中的数据</span></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法一</span></span><br><span class="line"><span class="comment"># driver = webdriver.Chrome()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># driver.get(&#x27;https://music.163.com/&#x27;)</span></span><br><span class="line"><span class="comment"># # 隐式等待 等待页面加载成功</span></span><br><span class="line"><span class="comment"># driver.implicitly_wait(3)</span></span><br><span class="line"><span class="comment"># # 点击排行榜</span></span><br><span class="line"><span class="comment"># rank_btn = driver.find_element(By.CSS_SELECTOR,&quot;body ul &gt;li+li&gt;a&quot;)</span></span><br><span class="line"><span class="comment"># rank_btn.click()</span></span><br><span class="line"><span class="comment"># #iframe标签定位</span></span><br><span class="line"><span class="comment"># driver.switch_to.frame(&#x27;g_iframe&#x27;)</span></span><br><span class="line"><span class="comment"># #点击新歌榜</span></span><br><span class="line"><span class="comment"># new_song_btn = driver.find_element(By.CSS_SELECTOR,&quot;.f-cb &gt; li+li&quot;).click()</span></span><br><span class="line"><span class="comment"># page_text = driver.execute_script(&quot;return document.documentElement.outerHTML&quot;)</span></span><br><span class="line"><span class="comment"># #获取页面</span></span><br><span class="line"><span class="comment"># html = etree.HTML(page_text)</span></span><br><span class="line"><span class="comment"># up_rank_list =[]</span></span><br><span class="line"><span class="comment"># down_rank_list =[]</span></span><br><span class="line"><span class="comment"># up_song_name_list=[]</span></span><br><span class="line"><span class="comment"># up_artist_list =[]</span></span><br><span class="line"><span class="comment"># down_song_name_list=[]</span></span><br><span class="line"><span class="comment"># down_artist_list=[]</span></span><br><span class="line"><span class="comment"># #获取每个列表</span></span><br><span class="line"><span class="comment"># song_rows = html.xpath(&#x27;//tbody/tr&#x27;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># #获取每个列表里的元素并添加到数组</span></span><br><span class="line"><span class="comment"># for row in song_rows:</span></span><br><span class="line"><span class="comment">#     up_rank = row.xpath(&#x27;.//span[@class=&quot;ico u-icn u-icn-73 s-fc9&quot;]/text()&#x27;)</span></span><br><span class="line"><span class="comment">#     down_rank = row.xpath(&#x27;.//span[@class=&quot;ico u-icn u-icn-74 s-fc10&quot;]/text()&#x27;)</span></span><br><span class="line"><span class="comment">#     song_name = row.xpath(&quot;.//b/@title&quot;)</span></span><br><span class="line"><span class="comment">#     span = row.xpath(&quot;.//td[@class=&#x27; s-fc3&#x27;]/span[@class=&#x27;u-dur &#x27;]/text()&quot;)</span></span><br><span class="line"><span class="comment">#     artist = row.xpath(&quot;.//div[@class=&#x27;text&#x27;]/span/@title&quot;)</span></span><br><span class="line"><span class="comment">#     if up_rank != []:</span></span><br><span class="line"><span class="comment">#         str1 = &#x27;&#x27;.join(up_rank)</span></span><br><span class="line"><span class="comment">#         up_rank_list.append(int(str1))   # 最大上升数组</span></span><br><span class="line"><span class="comment">#         song_name_str = &#x27;&#x27;.join(song_name)</span></span><br><span class="line"><span class="comment">#         up_song_name_list.append(song_name_str)</span></span><br><span class="line"><span class="comment">#         artist_str =&#x27;&#x27;.join(artist)</span></span><br><span class="line"><span class="comment">#         up_artist_list.append(artist_str)</span></span><br><span class="line"><span class="comment">#     if down_rank !=[]:</span></span><br><span class="line"><span class="comment">#         str2 = &#x27;&#x27;.join(down_rank)</span></span><br><span class="line"><span class="comment">#         down_rank_list.append(int(str2)) # 最大下降数组</span></span><br><span class="line"><span class="comment">#         song_name_str = &#x27;&#x27;.join(song_name)</span></span><br><span class="line"><span class="comment">#         down_song_name_list.append(song_name_str)</span></span><br><span class="line"><span class="comment">#         artist_str =&#x27;&#x27;.join(artist)</span></span><br><span class="line"><span class="comment">#         down_artist_list.append(artist_str)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># t1 = max(up_rank_list)</span></span><br><span class="line"><span class="comment"># num = len(up_rank_list)</span></span><br><span class="line"><span class="comment"># n=0</span></span><br><span class="line"><span class="comment"># for i in up_rank_list:</span></span><br><span class="line"><span class="comment">#     if i ==t1:</span></span><br><span class="line"><span class="comment">#         n=n+1</span></span><br><span class="line"><span class="comment"># if n!=1:</span></span><br><span class="line"><span class="comment">#     for j in range(num):</span></span><br><span class="line"><span class="comment">#         if up_rank_list[j] == t1:</span></span><br><span class="line"><span class="comment">#             print(&quot;排名上升最多：&quot;+up_song_name_list[j]+&quot; \t 歌手：&quot;+up_artist_list[j])</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     a1 = up_rank_list.index(t1)</span></span><br><span class="line"><span class="comment">#     print(&quot;排名上升最多：&quot;+up_song_name_list[a1]+&quot; \t 歌手：&quot;+up_artist_list[a1])</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># t2 = max(down_rank_list)</span></span><br><span class="line"><span class="comment"># num2 = len(down_rank_list)</span></span><br><span class="line"><span class="comment"># # print(num)</span></span><br><span class="line"><span class="comment"># n1=0</span></span><br><span class="line"><span class="comment"># for i1 in down_rank_list:</span></span><br><span class="line"><span class="comment">#     if i1 ==t1:</span></span><br><span class="line"><span class="comment">#         n1=n1+1</span></span><br><span class="line"><span class="comment"># if n1!=1:</span></span><br><span class="line"><span class="comment">#     for j1 in range(num2):</span></span><br><span class="line"><span class="comment">#         if down_rank_list[j1] == t2:</span></span><br><span class="line"><span class="comment">#             print(&quot;排名下降最多：&quot;+down_song_name_list[j1]+&quot; \t 歌手：&quot;+down_artist_list[j1])</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     a2 = down_rank_list.index(t2)</span></span><br><span class="line"><span class="comment">#     print(&quot;排名下降最多：&quot;+down_song_name_list[a2]+&quot; \t 歌手：&quot;+down_artist_list[a2])</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二</span></span><br><span class="line"><span class="comment"># driver = webdriver.Chrome()</span></span><br><span class="line"><span class="comment"># driver.get(&#x27;https://music.163.com/&#x27;)</span></span><br><span class="line"><span class="comment"># driver.find_element(By.CSS_SELECTOR, &quot;#g_nav2 li:nth-child(2) a&quot;).click()</span></span><br><span class="line"><span class="comment"># driver.switch_to.frame(driver.find_element(By.ID, &#x27;g_iframe&#x27;))</span></span><br><span class="line"><span class="comment"># driver.find_element(By.CSS_SELECTOR, &#x27;#toplist li:nth-child(2) a&#x27;).click()</span></span><br><span class="line"><span class="comment"># item = driver.find_element(By.CSS_SELECTOR, &#x27;#song-list-pre-cache table tbody&#x27;)</span></span><br><span class="line"><span class="comment"># up_table =[]</span></span><br><span class="line"><span class="comment"># lown_table =[]</span></span><br><span class="line"><span class="comment"># num=0</span></span><br><span class="line"><span class="comment"># sleep(1)</span></span><br><span class="line"><span class="comment"># for i in item.find_elements(By.TAG_NAME, &#x27;tr&#x27;):</span></span><br><span class="line"><span class="comment">#     ranking = i.find_element(By.CSS_SELECTOR, &#x27;.rk span&#x27;)</span></span><br><span class="line"><span class="comment">#     name = i.find_element(By.CSS_SELECTOR, &#x27;td:nth-child(2) .ttc a b&#x27;)</span></span><br><span class="line"><span class="comment">#     singer = i.find_element(By.CSS_SELECTOR, &#x27;td:nth-child(4) div&#x27;)</span></span><br><span class="line"><span class="comment">#     class_list = ranking.get_attribute(&#x27;class&#x27;).split(&quot; &quot;)</span></span><br><span class="line"><span class="comment">#     temp=[(ranking.text),name.get_attribute(&#x27;title&#x27;),singer.get_attribute(&#x27;title&#x27;)]</span></span><br><span class="line"><span class="comment">#     if &#x27;u-icn-73&#x27; in class_list:</span></span><br><span class="line"><span class="comment">#         up_table.append(temp)</span></span><br><span class="line"><span class="comment">#     elif &#x27;u-icn-74&#x27; in class_list:</span></span><br><span class="line"><span class="comment">#         lown_table.append(temp)</span></span><br><span class="line"><span class="comment"># up_table.sort(key=lambda x:int(x[0]), reverse=True)</span></span><br><span class="line"><span class="comment"># lown_table.sort(key=lambda x:int(x[0]), reverse=True)</span></span><br><span class="line"><span class="comment"># for table in [up_table, lown_table]:</span></span><br><span class="line"><span class="comment">#     for i in table:</span></span><br><span class="line"><span class="comment">#         if i[0] == table[0][0]:</span></span><br><span class="line"><span class="comment">#             print(f&quot;排名&#123;[&#x27;上升&#x27;,&#x27;下降&#x27;][num]&#125;最多： 歌曲名：&#123;i[1]&#125; 歌手：&#123;i[2]&#125;&quot;)</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             break</span></span><br><span class="line"><span class="comment">#         num +=1</span></span><br><span class="line"><span class="comment"># 方法三</span></span><br><span class="line"><span class="comment"># driver = webdriver.Chrome()</span></span><br><span class="line"><span class="comment"># driver.get(&#x27;https://music.163.com/&#x27;)</span></span><br><span class="line"><span class="comment"># driver.find_element(By.CSS_SELECTOR,&#x27;[href=&quot;/discover/toplist&quot;]&#x27;).click()</span></span><br><span class="line"><span class="comment"># driver.switch_to.frame(&#x27;contentFrame&#x27;)</span></span><br><span class="line"><span class="comment"># driver.find_element(By.CSS_SELECTOR, &#x27;[href=&quot;/discover/toplist?id=3779629&quot;]&#x27;).click()</span></span><br><span class="line"><span class="comment"># maxnum=[]</span></span><br><span class="line"><span class="comment"># minnum=[]</span></span><br><span class="line"><span class="comment"># count1 =[]</span></span><br><span class="line"><span class="comment"># count2=[]</span></span><br><span class="line"><span class="comment"># count =0</span></span><br><span class="line"><span class="comment"># list_all = driver.find_elements(By.CSS_SELECTOR, &#x27;.rk&gt;span&#x27;)</span></span><br><span class="line"><span class="comment"># for n in list_all:</span></span><br><span class="line"><span class="comment">#     count = count+1</span></span><br><span class="line"><span class="comment">#     txt = n.get_attribute(&quot;className&quot;).split(&quot; &quot;)[-1]</span></span><br><span class="line"><span class="comment">#     if txt == &quot;s-fc9&quot;:</span></span><br><span class="line"><span class="comment">#         maxnum.append(int(n.text))</span></span><br><span class="line"><span class="comment">#         count1.append(count)</span></span><br><span class="line"><span class="comment">#     elif txt == &quot;s-fc10&quot;:</span></span><br><span class="line"><span class="comment">#         minnum.append(int(n.text))</span></span><br><span class="line"><span class="comment">#         count2.append(count)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(max(maxnum))</span></span><br><span class="line"><span class="comment"># print(max(minnum))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># upnum = []</span></span><br><span class="line"><span class="comment"># for i in range(len(maxnum)):</span></span><br><span class="line"><span class="comment">#     if maxnum[i]== max(maxnum):</span></span><br><span class="line"><span class="comment">#         upnum.append(count1[i])</span></span><br><span class="line"><span class="comment"># # downnum用来记录下降最快的位于所有列表的哪个位置</span></span><br><span class="line"><span class="comment"># downnum = []</span></span><br><span class="line"><span class="comment"># for j in range(len(minnum)):</span></span><br><span class="line"><span class="comment">#     if minnum[j] == max(minnum):</span></span><br><span class="line"><span class="comment">#         downnum.append(count2[j])</span></span><br><span class="line"><span class="comment"># songname = driver.find_elements(By.CSS_SELECTOR, &#x27;.ttc&gt;.txt&gt;a&gt;b&#x27;)</span></span><br><span class="line"><span class="comment"># singer = driver.find_elements(By.CSS_SELECTOR, &#x27;.text&gt;span&#x27;)</span></span><br><span class="line"><span class="comment"># for m in upnum:</span></span><br><span class="line"><span class="comment">#     print(&quot;排名上升最多∶歌曲名: &quot;+songname[m-1].get_attribute(&quot;title&quot;)+&quot;歌手:&quot;+singer[m-1].get_attribute(&quot;title&quot;))</span></span><br><span class="line"><span class="comment"># for n in downnum:</span></span><br><span class="line"><span class="comment">#     print(&quot;排名下降最多∶歌曲名:&quot;+songname[n-1].get_attribute(&quot;title&quot;)+&quot;歌手: &quot;+singer[n-1].get_attribute(&quot;title&quot;))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>以管理员身份登录 <a href="http://127.0.0.1:8047/mgr/sign.html%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D">http://127.0.0.1:8047/mgr/sign.html，用户名</a> ：byhy 密码： 88888888。点击页脚处 链接 白月黑羽教学使用，点击访问官网；然后在新打开的 白月黑羽教学网页，获取页眉导航菜单中所有教程类目（可以调用webdriver对象的maximize_window()方法最大化窗口，以便显示所有菜单 ）；随后再回到 白月SMS系统网页，点击退出登录。预期结果为：成功登录后，完成上述操作，验证导航菜单名，依次为：Python基础、Python进阶、Qt图形界面、Django、自动化测试、性能测试、HTML&#x2F;CSS、JS语言、JS Web。验证回到登录界面（可以根据webdriver对象的current_url属性判断是否进入登录页面）。</li></ol><h4 id="提交代码-1"><a href="#提交代码-1" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 WebDriver 实例对象，指明使用chrome浏览器驱动</span></span><br><span class="line">wd = webdriver.Chrome()</span><br><span class="line"><span class="comment"># WebDriver 实例对象的get方法 可以让浏览器打开指定网址</span></span><br><span class="line">wd.get(<span class="string">&#x27;http://127.0.0.1:8047/mgr/sign.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 设置最大等待时长为 10秒</span></span><br><span class="line">wd.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"><span class="comment">#最大化窗口</span></span><br><span class="line">wd.maximize_window()</span><br><span class="line"><span class="comment">#登录白月黑羽系统</span></span><br><span class="line">elementuser = wd.find_element(By.ID,<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">elementuser.send_keys(<span class="string">&#x27;byhy&#x27;</span>)</span><br><span class="line">elementpass = wd.find_element(By.ID, <span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">elementpass.send_keys(<span class="string">&#x27;88888888&#x27;</span>)</span><br><span class="line">elementbutton=wd.find_element(By.TAG_NAME, <span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">elementbutton.click()</span><br><span class="line"><span class="comment">#点击外链之前先保存本页面句柄</span></span><br><span class="line">mainwindow=wd.current_window_handle</span><br><span class="line"><span class="comment">#点击外链</span></span><br><span class="line">wd.find_element(By.CSS_SELECTOR ,<span class="string">&#x27;.pull-right&gt;[href=&quot;http://www.python3.vip&quot;]&#x27;</span>).click()</span><br><span class="line"><span class="comment">#寻找所选外链</span></span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> wd.window_handles:</span><br><span class="line">    wd.switch_to.window(handle)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;白月黑羽教Python&#x27;</span> <span class="keyword">in</span> wd.title:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">wd.maximize_window()</span><br><span class="line">barelements=wd.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;li.nav-item span&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> barelement <span class="keyword">in</span> barelements:</span><br><span class="line">    <span class="built_in">print</span>(barelement.text)</span><br><span class="line">wd.switch_to.window(mainwindow)</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;span.hidden-xs&#x27;</span>).click()</span><br><span class="line">wd.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.pull-right a.btn&#x27;</span>).click()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> wd.current_url==<span class="string">&quot;http://127.0.0.1/mgr/sign.html&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功退出登录&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>Selenium的CSS层叠样式表选择器（一）</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium03/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium03/</id>
    <published>2025-01-07T06:54:54.239Z</published>
    <updated>2025-01-07T06:59:13.032Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Selenium的CSS层叠样式表选择器（一）"><a href="#Selenium的CSS层叠样式表选择器（一）" class="headerlink" title="Selenium的CSS层叠样式表选择器（一）"></a><strong>Selenium的CSS层叠样式表选择器（一）</strong></h2><p><strong>实验目的：</strong>了解在selenium中可以通过CSS Selector选择界面元素，重点掌握通过选择器根据id、class 、tag这三个常用属性选择元素的语法，以及通过父子元素进行选择的方法。了解CSS 选择器支持的通过任何属性来选择元素的用法。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>HTML中经常要为某些元素指定显示效果，比如：前景文字颜色是红色，背景颜色是黑色，字体是微软雅黑等。用来表现HTML样式的计算机语言就是CSS(Cascading Style Sheets)层叠样式表。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。于是，在执行WEB界面自动化测试开发时，除了前面讲的直接使用id、class属性、tag名来选择元素外，Selenium还专门提供了CSS Selector语法选择元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_element(By.CSS_SELECTOR, CSS Selector参数)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_elements(By.CSS_SELECTOR, CSS Selector参数)</span><br></pre></td></tr></table></figure><p>一、 根据tag名选择元素的语法：直接写tag名</p><p>如果要选择所有的tag名为div的元素，则应写为： </p><p><code>find_element(By.CSS_SELECTOR, &#39;div&#39;)</code></p><p>等价于  <code>find_element(By.TAG_NAME, &#39;div&#39;)</code></p><p>二、 根据id属性选择元素的语法：在id号前面加上一个#号（#id值）</p><p>例如：一个输入框的Html元素定义如下：</p><input id="kw" name="wd" class="s_ipt" value maxlength="255" autocomplete="off"><p>想要根据id属性选择这个输入框，则应写为：</p><p><code>find_element(By.CSS_SELECTOR, &#39;#kw&#39;)</code></p><p>等价于  <code>find_element(By.ID, &#39;kw&#39;)</code></p><p>三、 根据class属性选择元素的语法：在class值前面加上一个点（.class值）</p><p>想要根据class属性选择上面的输入框，则应写为：</p><p><code>find_element(By.CSS_SELECTOR, &#39;.s_ipt&#39;)</code></p><p>等价于  <code>find_element(By.CLASS_NAME, &#39;s_ipt&#39;)</code></p><p>四、 通过父子元素选择</p><p>HTML中，元素内部可以包含其他元素，具有层级关系。</p><p>如果元素2是元素1的直接子元素，要选择元素2时， CSS Selector 选择子元素的语法是：元素1 &gt;元素2（中间用大于号可理解为箭头）。</p><p>也支持更多层级的选择： 元素1 &gt;元素2 &gt;元素3 &gt;元素4 （选择的是元素4 ）</p><p>如果元素2是元素1的后代元素，要选择元素2时， CSS Selector 选择后代元素的语法是：  <code>元素1   元素2</code>（中间是一个或者多个空格隔开），同样支持更多层级的选择：</p><p><code>元素1   元素2   元素3   元素4</code></p><p>五、 通过任何属性来选择元素</p><p>语法是用一个方括号 [ ] 括起属性及取值，外部用单引号或双引号都可以，但要与方括号内部的引号区分开，多个属性时用多个 [ ] 连接在一起。</p><p>例如：一个超链接的Html元素定义如下：</p><p><a href="http://www.miitbeian.gov.cn">苏ICP备88885574号</a></p><p>想要利用href属性来选择a元素，应写为：</p><p><code>find_element(By.CSS_SELECTOR, &#39;[href]&#39;)</code></p><p>也可通过选择属性href值等于 <a href="http://www.miitbeian.gov.cn/">http://www.miitbeian.gov.cn</a> 找到与上面相同的元素，具体写作：  <code>find_element(By.CSS_SELECTOR, &#39;[href=&quot;http://www.miitbeian.gov.cn&quot;]&#39;)</code></p><p>CSS Selector可以选择属性值包含某个字符串的元素：语法（*&#x3D;）</p><p>选择上面的超链接元素可写为：<code>find_element(By.CSS_SELECTOR, &#39;[href*=&quot;miitbeian&quot;]&#39;)</code></p><p>CSS Selector可以选择属性值以某个字符串开头的元素：语法（^&#x3D;）</p><p>选择上面的超链接元素可写为：<code>find_element(By.CSS_SELECTOR, &#39;[href^=&quot;http&quot;]&#39;)</code></p><p>CSS Selector可以选择属性值以某个字符串结尾的元素：语法（$&#x3D;）</p><p>选择上面的超链接元素可写为：<code>find_element(By.CSS_SELECTOR, &#39;[href$=&quot;gov.cn&quot;]&#39;)</code></p><p>CSS Selector指定选择的元素要同时具有多个属性的限制时，要将属性连在一起写。</p><p>例如：某Html元素定义为：<code>&lt;div class=&quot;misc&quot; ctype=&quot;gun&quot;&gt;沙漠之鹰&lt;/div&gt;</code></p><p>想要选择此元素应写为：</p><p><code>find_element(By.CSS_SELECTOR, &#39;div[class=&quot;misc&quot;][ctype=&quot;gun&quot;]&#39;)</code></p><p>注意多个属性之间不能加空格，否则就变成了父子关系。</p><p>六、 验证 CSS Selector 语法的正确性</p><p>在python代码中使用print输出语句并运行，可以验证 CSS Selector 的语法是否正确选择了我们要选择的元素，但每次选择都进行这样的验证非常耗时。</p><p>由于 CSS Selector 是浏览器直接支持的，一个简便的方法是：在浏览器开发者工具栏中进行验证。在开发者工具栏，点击 Elements 元素标签后，同时按 Ctrl 键 和 F 键，就会出现一个查询框，在其中输入任何 CSS Selector 表达式，如果能选择到元素，输入框右边会显示出类似 1 of 1 （第几个of共选择到几个）这样的内容，且选中的元素高亮显示。若选择到的元素有多个，第一个被高亮显示。</p><p>同学们可以使用这个方法，加速编程。同时在熟练应用后，努力做到编写的CSS Selector 表达式简洁且选中的元素唯一。</p><p> 练习1：要求如下</p><p>在<a href="https://cdn2.byhy.net/files/selenium/sample1.html">https://cdn2.byhy.net/files/selenium/sample1.html</a> 网页中，使用CSS Selector ;</p><p>①根据tag名选择此页中的输入框并输入“查看完毕！”，</p><p>②根据id属性选择此页面底部的版权信息并输出，</p><p>③选择此页中所有class属性值为plant的元素并依次输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;https://cdn2.byhy.net/files/selenium/sample1.html&quot;</span>)</span><br><span class="line">searchtext = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#searchtext&#x27;</span>)</span><br><span class="line">searchtext.send_keys(<span class="string">&#x27;查看完毕!&#x27;</span>)</span><br><span class="line"><span class="comment"># time.sleep(2)</span></span><br><span class="line">copyright = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.copyright&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(copyright.text)</span><br><span class="line">date = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.date&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(date.text)</span><br><span class="line">banben = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#bottom &gt; div.footer2 &gt; span&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(banben.text)</span><br><span class="line">elements = driver.find_elements(By.CSS_SELECTOR,<span class="string">&#x27;.plant&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    <span class="built_in">print</span>(element.text)</span><br></pre></td></tr></table></figure><p> 练习2：要求如下</p><p>打开2345天气王网站<a href="https://tianqi.2345.com/%EF%BC%8C%E8%8E%B7%E5%8F%96%E7%BD%91%E9%A1%B5%E4%B8%AD%E5%BD%93%E5%89%8D%E5%9F%8E%E5%B8%82%E5%90%8D%E7%A7%B0%EF%BC%8C%E6%9F%A5%E7%9C%8B%E4%BB%8A%E5%A4%A9%E4%BB%A5%E5%8F%8A%E4%B9%8B%E5%90%8E%E4%B8%80%E5%91%A8%E5%86%85%E7%9A%84%E5%A4%A9%E6%B0%94%E6%83%85%E5%86%B5%EF%BC%8C%E8%BE%93%E5%87%BA%E5%BD%93%E5%89%8D%E5%9F%8E%E5%B8%82%E4%B8%80%E5%91%A8%E5%86%85%E7%9A%84%E6%9C%80%E9%AB%98%E6%B0%94%E6%B8%A9%E5%92%8C%E6%9C%80%E4%BD%8E%E6%B0%94%E6%B8%A9%EF%BC%8C%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F%E4%B8%BA%EF%BC%9A">https://tianqi.2345.com/，获取网页中当前城市名称，查看今天以及之后一周内的天气情况，输出当前城市一周内的最高气温和最低气温，输出格式为：</a></p><p><code>AAA（当前城市名称）一周内最高气温为XX摄氏度，最低气温为YY摄氏度。</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://tianqi.2345.com/&quot;</span>)</span><br><span class="line">didian = driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;body &gt; div.banner &gt; div.w1200.clearfix &gt; div &gt; div.banner-city &gt; div &gt; a:nth-child(1) &gt; span&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(didian.text)</span><br><span class="line"></span><br><span class="line">weather_list = driver.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;.banner-right-con-list-temp&#x27;</span>)</span><br><span class="line">arr1 = []</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> weather_list:</span><br><span class="line">    <span class="comment"># print(element.text)</span></span><br><span class="line">    element1 = re.sub(<span class="string">&#x27;([^\u0030-\u0039\&#x27;-])&#x27;</span>, <span class="string">&#x27; &#x27;</span>, element.text)</span><br><span class="line">    element3 = element1.rstrip()</span><br><span class="line">    <span class="comment"># print(element1)</span></span><br><span class="line">    str_list = element3.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> arr3 <span class="keyword">in</span> str_list:</span><br><span class="line">        arr1.append(arr3)</span><br><span class="line">arr2 = <span class="built_in">map</span>(<span class="built_in">int</span>, arr1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最高气温和最低气温</span></span><br><span class="line">high_temps = []</span><br><span class="line">low_temps = []</span><br><span class="line"><span class="keyword">for</span> element2 <span class="keyword">in</span> arr2:</span><br><span class="line">    high_temps.append(element2)</span><br><span class="line">    low_temps.append(element2)</span><br><span class="line">    <span class="comment"># print(element2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">max_temp = <span class="built_in">max</span>(high_temps)</span><br><span class="line">min_temp = <span class="built_in">min</span>(low_temps)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;didian.text&#125;</span>一周内最高气温为<span class="subst">&#123;max_temp&#125;</span>摄氏度，最低气温为<span class="subst">&#123;min_temp&#125;</span>摄氏度。&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>Selenium的CSS层叠样式表选择器（二）</title>
    <link href="http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium04/"/>
    <id>http://example.com/2025/01/07/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium04/</id>
    <published>2025-01-07T06:54:54.239Z</published>
    <updated>2025-01-07T07:03:09.821Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Selenium的CSS层叠样式表选择器（二）"><a href="#Selenium的CSS层叠样式表选择器（二）" class="headerlink" title="Selenium的CSS层叠样式表选择器（二）"></a><strong>Selenium的CSS层叠样式表选择器（二）</strong></h2><p><strong>实验目的：</strong>了解CSS Selector的选择语法的联合使用方法，掌握组选择、按顺序选择子节点和兄弟节点选择的方法。能够使用CSS 选择器选择语法的联合使用完成要求的元素定位。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>使用CSS选择器选择元素时，是具有很强的灵活性的。比如，要选择界面中的一个元素，既可以使用它的某个唯一的属性值，也可以根据父子关系按照层级定位它。CSS选择器除了具有灵活性外，另一个强大之处在于：选择语法可以联合使用。</p><p>一、 组选择：同时选择多个元素，各个选择条件用逗号（,）隔开，允许逗号两端的属性不一致</p><p>如果要同时选择所有class名 为 plant 和 animal 的元素，则应写为： </p><p><code>find_element(By.CSS_SELECTOR, &#39;.plant, .animal&#39;)</code></p><p>注意：通过组选择能够完成同时选择多个元素的工作，其选中元素不是按照组表达式的次序排序的，而是先选择出符合这些表达式的元素，然后按照它们在HTML文档中的出现的次序排列。</p><ol><li>在浏览器中打开百度新闻<a href="https://news.baidu.com/%E7%BD%91%E7%AB%99%EF%BC%8C%E9%80%89%E6%8B%A9%E2%80%9C%E7%83%AD%E7%82%B9%E8%A6%81%E9%97%BB%E2%80%9D%E6%A0%8F%E7%9B%AE%E4%B8%AD%E7%9A%84class%E5%90%8D">https://news.baidu.com/网站，选择“热点要闻”栏目中的class名</a> 为 focuslistnews 和 hotnews的元素，计算满足此条件的元素共有多少项，输出：“热点要闻栏目中有XX项焦点列表和热点新闻项”。使用<code>qiut()</code>关闭浏览器。</li></ol><p>二、 按次序选择子节点：（练习网页：<a href="https://cdn2.byhy.net/files/selenium/sample1b.html">https://cdn2.byhy.net/files/selenium/sample1b.html</a> ）</p><p><img src="/img/selenium/se03-00.jpg" alt="选择子节点">指定选择的元素是父元素的第几个子节点，语法为 :nth-child()，括号中填写第几个子节点的数字。</p><p>例如：要选择唐诗和宋词的第一个作者，也就是选择第2个子元素，且为span类型，CSS Selector表达式可写为：</p><p><code>span:nth-child(2)</code> </p><p>或 </p><p><code>\#t1  :nth-child(2) , #t2  :nth-child(2)</code></p><p>又或者</p><p><code>\#t1 &gt; :nth-child(2) , #t2 &gt; :nth-child(2)</code></p><p>指定选择的元素 是父元素的倒数第几个子节点，语法为 :<code>nth-last-child()</code>，括号中填写第几个子节点的数字。</p><p>例如：要选择最后一首唐诗和宋词的题目，CSS Selector表达式可写为：<code>p:nth-last-child(1)</code></p><p>指定选择的元素是父元素第几个某类型的子节点，语法为 :nth-of-type()，括号中填写第几个子节点的数字。</p><p>例如：要使用类型限定选择唐诗和宋词的第一个作者，由于它们是父元素下第一个span类型的子元素，所以CSS Selector表达式可写为： <code>span:nth-of-type(1)</code></p><p>指定选择的元素是父元素倒数第几个某类型的子节点，语法为 <code>:nth-last-of-type()</code>，括号中填写第几个子节点的数字。</p><p>例如：要选择唐诗和宋词的倒数第一个作者，CSS Selector表达式可写为： <code>span:nth-last-of-type(1)</code></p><p>指定选择的元素是父元素的奇数或偶数的子节点，语法为 <code>:nth-child(odd)</code> 及 <code>:nth-child(even)</code></p><p>例如：<code>#t1  :nth-child(odd)</code></p><p>指定选择的元素 是父元素某种类型的奇数或偶数的子节点，语法为 <code>:nth-of-type(odd)</code> 及 <code>:nth-of-type(even)</code></p><p>例如：<code>#t2  p:nth-of-type(even)</code></p><ol start="2"><li>在上个操作步骤的关闭浏览器之前，添加：按照次序选择子节点的任意两种不同的方式，完成对“热点要闻”栏目中的class名为hotnews的元素中的第四个新闻标题的获取，并输出显示文本信息。</li></ol><p>三、 兄弟节点选择：</p><p>相邻兄弟节点选择，就是选择一个元素平级的后面紧跟着的兄弟节点，相邻关系语法用加号+表示。</p><p>例如：要选择唐诗和宋词的第一个作者，因为唐诗和宋词的标签名都是h3，紧跟着它的平级兄弟节点span就是作者，所以CSS Selector表达式可以写为：<code>h3 + span</code></p><p>也就是选择紧跟 <code>&lt;h3&gt;</code> 元素的首个 <code>&lt;span&gt;</code> 元素</p><p>后续所有兄弟节点选择，用波浪线~表示。</p><p>例如：要选择唐诗和宋词的所有作者，CSS Selector表达式可以写为：<code>h3 ~ span</code></p><ol start="3"><li><p>在上个操作步骤的关闭浏览器之前，添加：按照兄弟节点选择方式，完成对“热点要闻”栏目中的class名为hotnews的元素的相邻兄弟节点的选择，并输出此兄弟节点的全部可见文本。</p></li><li><p>完成上述三个实验步骤(1，2，3)，提交代码</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 练习一</span></span><br><span class="line">driver.get(<span class="string">&quot;https://news.baidu.com/&quot;</span>)</span><br><span class="line">focuslistnews_items = driver.find_elements(By.CSS_SELECTOR,<span class="string">&#x27;.focuslistnews , .hotnews&#x27;</span>)</span><br><span class="line"><span class="comment"># 计算满足条件的元素数量</span></span><br><span class="line">total_items = <span class="built_in">len</span>(focuslistnews_items)</span><br><span class="line"><span class="comment"># 输出计算结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;热点要闻栏目中有<span class="subst">&#123;total_items&#125;</span>项焦点列表和热点新闻项&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;###################################&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习二</span></span><br><span class="line"><span class="comment">#1. 父元素的第几个子节点</span></span><br><span class="line">hotnews_items = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.hotnews&#x27;</span>)</span><br><span class="line">title4_text = hotnews_items.find_element(By.CSS_SELECTOR, <span class="string">&quot;ul&gt;li:nth-child(4)&quot;</span>).text</span><br><span class="line"><span class="comment"># 输出第四个标题的文本信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;热点要闻中第四个新闻标题为：<span class="subst">&#123;title4_text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.父元素第几个某类型的子节点</span></span><br><span class="line">hotnews_items = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.hotnews&#x27;</span>)</span><br><span class="line">title4_text = hotnews_items.find_element(By.CSS_SELECTOR, <span class="string">&quot;ul &gt; li:nth-of-type(4)&quot;</span>).text</span><br><span class="line"><span class="comment"># 输出第四个标题的文本信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;热点要闻中第四个新闻标题为：<span class="subst">&#123;title4_text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.通过子元素类型，父元素获取子元素的方法</span></span><br><span class="line">hotnews_items = driver.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;.hotnews&#x27;</span>)</span><br><span class="line">hotnews_element = hotnews_items[<span class="number">0</span>]</span><br><span class="line">hotnews_titles = hotnews_element.find_elements(By.TAG_NAME, <span class="string">&quot;li&quot;</span>)</span><br><span class="line">title4_text = hotnews_titles[<span class="number">3</span>].text</span><br><span class="line"><span class="comment"># 输出第四个标题的文本信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;热点要闻中第四个新闻标题为：<span class="subst">&#123;title4_text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.通过索引获取子元素的方法</span></span><br><span class="line">hotnews_element = hotnews_items[<span class="number">0</span>]</span><br><span class="line">title4_text = hotnews_element.find_element(By.XPATH, <span class="string">&quot;./ul/li[4]&quot;</span>).text</span><br><span class="line"><span class="comment"># 输出第四个标题的文本信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;热点要闻中第四个新闻标题为：<span class="subst">&#123;title4_text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;###################################&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习三</span></span><br><span class="line"><span class="comment"># 查找热点要闻元素的相邻兄弟元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用CSS选择器（元素+元素）</span></span><br><span class="line">sibling_element = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;.hotnews+ul&#x27;</span>)</span><br><span class="line"><span class="comment"># 输出相邻的兄弟元素的全部可见文本</span></span><br><span class="line"><span class="built_in">print</span>(sibling_element.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用XPATH</span></span><br><span class="line"><span class="comment"># hotnews_element = driver.find_element(By.CSS_SELECTOR, &#x27;.hotnews&#x27;)</span></span><br><span class="line"><span class="comment"># sibling_element = hotnews_element.find_element(By.XPATH, &quot;./following-sibling::*[1]&quot;)</span></span><br><span class="line"><span class="comment"># 输出相邻兄弟元素的全部可见文本</span></span><br><span class="line"><span class="comment"># print(f&quot;热点要闻元素的相邻兄弟元素的全部可见文本为：&#123;sibling_element.text&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>在浏览器中打开：京东商城网页<a href="https://www.jd.com/%EF%BC%8C%E5%BA%94%E7%94%A8%E6%8C%89%E7%85%A7%E6%AC%A1%E5%BA%8F%E9%80%89%E6%8B%A9%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95%E5%8E%BB%E6%A3%80%E6%9F%A5%E9%A1%B5%E9%9D%A2%E5%B7%A6%E4%BE%A7%E5%AF%BC%E8%88%AA%E6%A0%8F%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E5%A6%82%E4%B8%8B%E8%8F%9C%E5%8D%95%EF%BC%9A%E2%80%9C%E5%AE%B6%E7%94%A8%E7%94%B5%E5%99%A8|%E7%94%B5%E8%84%91">https://www.jd.com/，应用按照次序选择元素的方法去检查页面左侧导航栏中是否有如下菜单：“家用电器|电脑</a> &#x2F; 办公|男装 &#x2F; 女装 &#x2F; 童装 &#x2F; 内衣|女鞋 &#x2F; 箱包 &#x2F; 钟表 &#x2F; 珠宝|房产 &#x2F; 汽车 &#x2F; 汽车用品|食品 &#x2F; 酒类 &#x2F; 生鲜 &#x2F; 特产|医药保健 &#x2F; 计生情趣|机票 &#x2F; 酒店 &#x2F; 旅游 &#x2F; 生活|安装 &#x2F; 维修 &#x2F; 清洗 &#x2F; 二手”，再使用兄弟节点选择方法定位页面头部导航栏中“京东超市”后三项菜单是否为“秒杀”、“便宜包邮”、“京东生鲜”，输出检查结果。关闭浏览器。</li></ol><h4 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&#x27;https://www.jd.com/&#x27;</span>)</span><br><span class="line"><span class="comment"># 1：检查左侧导航栏中是否有指定菜单</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">menu_list = [<span class="string">&quot;家用电器&quot;</span>, <span class="string">&quot;电脑&quot;</span>, <span class="string">&quot;男装&quot;</span>, <span class="string">&quot;女装&quot;</span>, <span class="string">&quot;童装&quot;</span>, <span class="string">&quot;内衣&quot;</span>, <span class="string">&quot;女鞋&quot;</span>, <span class="string">&quot;箱包&quot;</span>, <span class="string">&quot;钟表&quot;</span>, <span class="string">&quot;珠宝&quot;</span>,</span><br><span class="line">             <span class="string">&quot;房产&quot;</span>, <span class="string">&quot;汽车&quot;</span>, <span class="string">&quot;汽车用品&quot;</span>, <span class="string">&quot;食品&quot;</span>, <span class="string">&quot;酒类&quot;</span>, <span class="string">&quot;生鲜&quot;</span>, <span class="string">&quot;特产&quot;</span>, <span class="string">&quot;医药保健&quot;</span>, <span class="string">&quot;计生情趣&quot;</span>, <span class="string">&quot;机票&quot;</span>,</span><br><span class="line">             <span class="string">&quot;酒店&quot;</span>, <span class="string">&quot;旅游&quot;</span>, <span class="string">&quot;生活&quot;</span>, <span class="string">&quot;安装&quot;</span>, <span class="string">&quot;维修&quot;</span>, <span class="string">&quot;清洗&quot;</span>, <span class="string">&quot;二手&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> menu_list:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        element = driver.find_elements(By.CSS_SELECTOR, <span class="string">f&quot;#J_cate &gt; ul&gt; li[title=&#x27;<span class="subst">&#123;item&#125;</span>&#x27;]&quot;</span>)</span><br><span class="line">        <span class="comment"># J_cate//*[@id=&quot;J_cate&quot;]/ul</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;找到菜单：<span class="subst">&#123;item&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;未找到菜单：<span class="subst">&#123;item&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;##############################################################&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2：检查头部导航栏中指定菜单后三项是否正确</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#CSS后兄弟节点选择</span></span><br><span class="line"></span><br><span class="line">brother_menus = [<span class="string">&quot;秒杀&quot;</span>, <span class="string">&quot;便宜包邮&quot;</span>, <span class="string">&quot;京东生鲜&quot;</span>]</span><br><span class="line">array=[]</span><br><span class="line"></span><br><span class="line">target_element = driver.find_elements(By.CSS_SELECTOR, <span class="string">&quot;#navitems-group1 &gt; li.fore1~li&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> target_element:</span><br><span class="line">    array.append(element.text)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">if</span> array[i] == brother_menus[i]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>个：<span class="subst">&#123;brother_menus[i]&#125;</span>检查通过！&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">     <span class="built_in">print</span>(<span class="string">&quot;检查未通过&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># XPATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># try:</span></span><br><span class="line"><span class="comment">#     target_element = driver.find_element(By.XPATH, &quot;//a[contains(text(), &#x27;京东超市&#x27;)]/following-sibling::a[1]&quot;)</span></span><br><span class="line"><span class="comment">#     for i in range(3):</span></span><br><span class="line"><span class="comment">#         element_text = target_element.get_attribute(&quot;text&quot;)</span></span><br><span class="line"><span class="comment">#         if element_text == brother_menus[i]:</span></span><br><span class="line"><span class="comment">#             print(f&quot;第&#123;i + 1&#125;个菜单：&#123;element_text&#125;，检查通过！&quot;)</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             print(f&quot;第&#123;i + 1&#125;个菜单：&#123;element_text&#125;，检查未通过！&quot;)</span></span><br><span class="line"><span class="comment">#         # target_element = target_element.find_element(By.CSS_SELECTOR, &quot;+ li&quot;)</span></span><br><span class="line"><span class="comment"># except:</span></span><br><span class="line"><span class="comment">#     print(&quot;找不到京东超市菜单！&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><ol start="3"><li><p>应用选择语法的联合使用方法编写测试用例：以管理员身份登录 <a href="http://127.0.0.1:8047/mgr/sign.html%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D">http://127.0.0.1:8047/mgr/sign.html，用户名</a> ：byhy 密码： 88888888。点击添加药品，输入正确格式的药品名、编号和描述，点击创建。预期结果为：成功登录后，检查药品列表第一项结果中 药品名、编号和描述都是正确的。 </p><h4 id="提交代码-1"><a href="#提交代码-1" class="headerlink" title="提交代码"></a>提交代码</h4></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 打开待测试环境</span></span><br><span class="line">driver.get(<span class="string">&#x27;http://127.0.0.1:8047/mgr/sign.html&#x27;</span>)</span><br><span class="line">elementuser = driver.find_element(By.ID, <span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">elementuser.send_keys(<span class="string">&#x27;byhy&#x27;</span>)</span><br><span class="line">elementpass = driver.find_element(By.ID, <span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">elementpass.send_keys(<span class="string">&#x27;88888888&#x27;</span>)</span><br><span class="line">elementbutton=driver.find_element(By.TAG_NAME, <span class="string">&#x27;button&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 创建药品</span></span><br><span class="line"><span class="comment"># 点击菜单栏药品，进入药品信息页面</span></span><br><span class="line">medicines_menu = driver.find_element(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul/li[3]/a&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到添加药品按钮并点击</span></span><br><span class="line">medicines_button = driver.find_element(By.CSS_SELECTOR, <span class="string">&#x27;#root &gt; div &gt; section.content.container-fluid &gt; div.col-lg-12.col-md-12.col-sm-12.add-one-area &gt; button&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入药品信息，药品名，编号，描述</span></span><br><span class="line">medicines_name = driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.col-lg-8&gt;:nth-child(1)&gt;input&#x27;</span>).send_keys(<span class="string">&#x27;阿莫西林&#x27;</span>)</span><br><span class="line">medicines_number = driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.col-lg-8&gt;:nth-child(2)&gt;input&#x27;</span>).send_keys(<span class="string">&#x27;CAS : 26787-78-0&#x27;</span>)</span><br><span class="line">medicines_describe = driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.col-lg-8&gt;:nth-child(3)&gt;textarea&#x27;</span>).send_keys(<span class="string">&#x27;阿莫西林片：0.125 g；0.25 g。&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击创建按钮</span></span><br><span class="line">create_button = driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;.col-lg-12&gt;.btn-xs:nth-child(1)&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击取消按钮</span></span><br><span class="line"><span class="comment"># sleep(1)</span></span><br><span class="line"><span class="comment"># create_button = driver.find_element(By.CSS_SELECTOR, &#x27;.content&gt;.col-lg-12&gt;.col-lg-12 button:nth-child(2)&#x27;)</span></span><br><span class="line"><span class="comment"># create_button.click()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实际结果</span></span><br><span class="line">actual_result = []</span><br><span class="line"><span class="comment"># actual_result = &#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位左侧菜单栏</span></span><br><span class="line">elements = driver.find_elements(By.CSS_SELECTOR, <span class="string">&#x27;#root &gt; div &gt; section.content.container-fluid &gt; div:nth-child(3)&gt; *&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    actual_result.append(element.text)</span><br><span class="line">actual_result.remove(actual_result[-<span class="number">1</span>])</span><br><span class="line">new_string_array = [s[<span class="number">3</span>:] <span class="keyword">for</span> s <span class="keyword">in</span> actual_result]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_string_array)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预期结果</span></span><br><span class="line">expected_result = [<span class="string">&#x27;阿莫西林&#x27;</span>,<span class="string">&#x27;CAS : 26787-78-0&#x27;</span>,<span class="string">&#x27;阿莫西林片：0.125 g；0.25 g。&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;预期结果为： &#x27;</span>, expected_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过try抛出异常进行断言判断</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">assert</span> expected_result == new_string_array</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;PASS,实际结果与预期结果一致!&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;FAIL,实际结果与预期结果不一致!&#x27;</span>, <span class="built_in">format</span>(e))</span><br><span class="line"></span><br><span class="line"><span class="comment"># sleep(1)</span></span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>前端收集</title>
    <link href="http://example.com/2025/01/07/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/HTML/html00/"/>
    <id>http://example.com/2025/01/07/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/HTML/html00/</id>
    <published>2025-01-07T05:50:36.277Z</published>
    <updated>2025-01-07T06:10:51.350Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前端收集"><a href="#前端收集" class="headerlink" title="前端收集"></a>前端收集</h1><p>在前端路上摸索前行，在这里分享自己长期关注的前端开发相关的优秀网站、博客、以及活跃开发者。欢迎更新。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;</p><p>####聚合&amp;&amp;周报订阅</p><table><thead><tr><th>名称</th><th>订阅地址</th><th>介绍</th></tr></thead><tbody><tr><td>Html5 Weekly</td><td><a href="http://html5weekly.com/">http://html5weekly.com/</a></td><td>Html 技术类</td></tr><tr><td>CSS Weekly</td><td><a href="http://css-weekly.com/">http://css-weekly.com/</a></td><td></td></tr><tr><td>Javascript Weekly</td><td><a href="http://javascriptweekly.com/">http://javascriptweekly.com/</a></td><td>JS相关，同样有 html,css 和工具相关</td></tr><tr><td>Web Design Weekly</td><td><a href="http://web-design-weekly.com/">http://web-design-weekly.com/</a></td><td>设计、技术、技巧、工具聚合</td></tr><tr><td>UX Weekly</td><td><a href="http://uxwkly.com/">http://uxwkly.com/</a></td><td>用户体验、网页设计推送</td></tr><tr><td>Web Tools Weekly</td><td><a href="http://webtoolsweekly.com/">http://webtoolsweekly.com/</a></td><td>Js，工具推送</td></tr><tr><td>RESPONSIVE DESIGN NEWSLETTER</td><td><a href="http://responsivedesignweekly.com/">http://responsivedesignweekly.com/</a></td><td>每周推送一次响应式设计相关</td></tr><tr><td>Tutorialzine</td><td><a href="http://tutorialzine.com/">http://tutorialzine.com/</a></td><td>精品教程和资源推送</td></tr><tr><td>Sidebar</td><td><a href="http://sidebar.io/">http://sidebar.io/</a></td><td>每天、每半周、每周推送5条设计相关</td></tr><tr><td>The Hacker News Newsletter</td><td><a href="http://www.hackernewsletter.com/">http://www.hackernewsletter.com/</a></td><td>HN 每周精选</td></tr><tr><td>Design News</td><td><a href="https://news.layervault.com/">https://news.layervault.com/</a></td><td>F2类资讯聚合</td></tr><tr><td>HACKDESIGN</td><td><a href="http://hackdesign.org/">http://hackdesign.org/</a></td><td>每周发布一个设计类课程</td></tr><tr><td>中文推送</td><td></td><td></td></tr><tr><td>SegmentFault精选</td><td><a href="http://segmentfault.com/">http://segmentfault.com/</a></td><td>国内开发者技术问答社区每周精选问答</td></tr><tr><td>FE Weekly</td><td><a href="http://www.feweekly.com/">http://www.feweekly.com/</a></td><td>每周一次，内容主要是英文的，不过有中文导读</td></tr><tr><td>EchoJs_News</td><td><a href="http://www.echojs.com/">http://www.echojs.com/</a></td><td>每天推送若干好文，都是英文的，JS技术类</td></tr></tbody></table><p>####专业博客</p><p>注:此处<code>活跃度</code>为博客更新频率，<code>原创度</code>指的是作者原创或者翻译的文章所占博文比例。请尊重原创，大量转载其他网站资讯的网站和聚合类网站不做推荐。</p><p>######中文博客</p><table><thead><tr><th>名称</th><th>活跃度</th><th>原创度</th><th>维护者</th><th>其他</th></tr></thead><tbody><tr><td><a href="http://www.w3cplus.com/">W3Cplus</a></td><td>★★★★★</td><td>★★★★★</td><td>携程 @大漠</td><td>国内最优秀的前端博客，原创居多</td></tr><tr><td><a href="http://www.qianduan.net/">前端观察</a></td><td>★★★★☆</td><td>★★★★☆</td><td>腾讯 ISUX @神飞</td><td>曾经最优秀，最近更新不频繁了</td></tr><tr><td><a href="http://www.alloyteam.com/">腾讯web前端 AlloyTeam 团队</a></td><td>★★★★</td><td>★★★★</td><td><a href="http://t.qq.com/AlloyTeam">@腾讯AlloyTeam</a></td><td>来自于腾讯SNG(社交网络事业群)</td></tr><tr><td><a href="http://www.zhangxinxu.com/wordpress/">张鑫旭-鑫空间-鑫生活</a></td><td>★★★★☆</td><td>★★★★★</td><td>张鑫旭</td><td>重构很厉害，不少经典文章经验</td></tr><tr><td><a href="http://www.36ria.com/">ria之家</a></td><td>★★★★☆</td><td>★★★★☆</td><td>淘宝 @明河</td><td>#</td></tr><tr><td><a href="http://www.daqianduan.com/">大前端</a></td><td>★★★★☆</td><td>★★★★☆</td><td><a href="http://www.cssforest.org/blog/index.php?s=about">#</a></td><td>#</td></tr><tr><td><a href="http://www.cssforest.org/blog/">CSS森林</a></td><td>★★★★☆</td><td>★★★★☆</td><td><a href="http://www.cssforest.org/blog/index.php?s=about">关于</a></td><td>#</td></tr><tr><td><a href="http://www.shejidaren.com/">设计达人</a></td><td>★★★★☆</td><td>★★★☆☆</td><td><a href="http://www.cssforest.org/blog/index.php?s=about">#</a></td><td>更新较频繁，但转载也较多</td></tr><tr><td><a href="http://beforweb.com/">Be For Web - 为网而生 - 原创译文博客</a></td><td>★★★★☆</td><td>★★★★☆</td><td><a href="http://weibo.com/c7210">@C7210</a></td><td>关注移动应用及互联网产品、用户体验设计、前端开发</td></tr></tbody></table><p>######国外博客</p><table><thead><tr><th>名称</th><th>活跃度</th><th>原创度</th><th>维护者</th><th>其他</th></tr></thead><tbody><tr><td><a href="http://www.smashingmagazine.com/">Smashing Magazine</a></td><td>★★★★★</td><td>★★★★★</td><td>#</td><td>业界权威，web 设计很赞</td></tr><tr><td><a href="http://hub.tutsplus.com/">Tuts</a></td><td>★★★★★</td><td>★★★★★</td><td>-</td><td>国外知名开发者网站</td></tr><tr><td><a href="http://www.developerdrive.com/">DeveloperDrive</a></td><td>★★★★★</td><td>★★★★★</td><td>-</td><td>优质前端技术信息</td></tr><tr><td><a href="http://css-tricks.com/">CSS-TRICKS</a></td><td>★★★★★</td><td>★★★★★</td><td>Chris Coyier</td><td>左边这位是大神</td></tr><tr><td><a href="http://webdesignerwall.com/">Web Designer Wall</a></td><td>★★★★★</td><td>★★★★★</td><td>Nick La.</td><td>优质 Html5,CSS3等教程</td></tr><tr><td><a href="http://tutorialzine.com/">Tutorialzine</a></td><td>★★★★★</td><td>★★★★★</td><td>#</td><td>大量 web 教程和资源</td></tr><tr><td><a href="http://inspectelement.com/">Inspect Element</a></td><td>★★★★★</td><td>★★★★★</td><td>#</td><td>CSS,wordpress 相关教程挺多</td></tr><tr><td><a href="http://tympanus.net/codrops/">Codrops</a></td><td>★★★★★</td><td>★★★★★</td><td>#</td><td>设计、交互、CSS</td></tr><tr><td><a href="http://www.onerutter.com/">Jake Rutter</a></td><td>★★★★★</td><td>★★★★★</td><td>Jake Rutter</td><td>Jquery 作者，不解释了</td></tr><tr><td><a href="http://www.paulirish.com/">Paul Irish</a></td><td>★★★★★</td><td>★★★★★</td><td>Paul Irish</td><td>大神,Google Chrome团队,Yeoman</td></tr><tr><td><a href="http://krasimirtsonev.com/blog">Krasimir Tsonev</a></td><td>★★★★★</td><td>★★★★★</td><td>Krasimir Tsonev</td><td>html5,ccs3,javascript</td></tr><tr><td><a href="http://hakim.se/">hakim</a></td><td>★★★★★</td><td>★★★★★</td><td>HAKIM EL HATTAB</td><td>ccs3,javascript</td></tr><tr><td><a href="http://dailyjs.com/">DailyJS</a></td><td>★★★★★</td><td>★★★★★</td><td>#</td><td>javascript</td></tr></tbody></table><p>#####活跃微博</p><table><thead><tr><th>ID</th><th>公司</th><th>简介</th></tr></thead><tbody><tr><td><a href="http://weibo.com/w3cchina">@w3c中国</a></td><td>#</td><td>万维网联盟中国办事处官方微博</td></tr><tr><td><a href="http://weibo.com/javascriptdev">@TheFrontEnd</a></td><td>#</td><td>JavaScript技术资讯、新闻、教程、深度文章。</td></tr><tr><td><a href="http://weibo.com/fekb">@前端快爆</a></td><td>阿里巴巴</td><td>有HTML5、CSS3、JS</td></tr><tr><td><a href="http://e.weibo.com/html5cn">@HTML5中国</a></td><td>#</td><td>中国<a href="http://www.html5cn.org官方微博/">www.html5cn.org官方微博</a></td></tr><tr><td><a href="http://weibo.com/developerworks">@developerWorks</a></td><td>#</td><td>#</td></tr></tbody></table><p>####开发者博客</p><p>微博微信流行后，明显感觉到写博客的人还是越来越少了，下面推荐的这些开发者属于在网上比较活跃的，或者博客积累了大量优质资源的。</p><p>######国内开发者</p><p>国内开发者一块欢迎大家 <code>Fork</code>提交推荐，最好能推荐一些在前端界较活跃的的开发者。</p><table><thead><tr><th>ID</th><th>博客</th><th>微博</th><th>Github</th><th>Twitter</th><th>公司</th><th>关键字</th></tr></thead><tbody><tr><td>阮一峰</td><td><a href="http://www.ruanyifeng.com/blog/">阮一峰博客</a></td><td><a href="http://weibo.com/ruanyf">@ruanyf</a></td><td>#</td><td><a href="https://twitter.com/ruanyf">@ruanyf</a></td><td>上海金融学院国际金融学院</td><td>教师，博客写作人，翻译人，《黑客与画家》的译者</td></tr><tr><td>老赵</td><td><a href="http://blog.zhaojie.me/">http://blog.zhaojie.me/</a></td><td><a href="http://weibo.com/jeffz">@老赵</a></td><td>#</td><td><a href="">#</a></td><td>摩根大通（香港）</td><td>资深码农</td></tr><tr><td>玉伯</td><td><a href="http://lifesinger.wordpress.com/">岁月如歌</a></td><td><a href="http://weibo.com/lifesinger">@玉伯也叫射雕</a></td><td><a href="https://github.com/lifesinger">@lifesinger</a></td><td><a href="https://twitter.com/lifesinger">@lifesinger</a></td><td>支付宝</td><td>大牛</td></tr><tr><td>kejun</td><td><a href="http://hikejun.com/">http://hikejun.com/</a></td><td><a href="http://weibo.com/kejunz">@kejunz</a></td><td>#</td><td><a href="https://github.com/kejun">@kejunz</a></td><td>豆瓣</td><td>前端大神</td></tr><tr><td>寒冬winter</td><td><a href="http://winter-cn.cnblogs.com/">winter-cn</a></td><td><a href="http://weibo.com/wintercn">@寒冬winter</a></td><td>#</td><td>#</td><td>#</td><td>#</td></tr><tr><td>左耳朵耗子</td><td><a href="http://coolshell.cn/">酷壳</a></td><td><a href="http://weibo.com/haoel">@左耳朵耗子</a></td><td>#</td><td><a href="https://twitter.com/haoel">@haoel</a></td><td>淘宝</td><td>#</td></tr><tr><td>fool2fish</td><td>#</td><td><a href="http://weibo.com/fool2fish">@fool2fish</a></td><td>#</td><td>#</td><td>支付宝</td><td>#</td></tr><tr><td>朴灵</td><td><a href="http://html5ify.com/">Html5fiy</a></td><td><a href="http://weibo.com/shyvo">@朴灵</a></td><td><a href="https://github.com/JacksonTian">JacksonTian</a></td><td>#</td><td>阿里巴巴</td><td>《深入浅出Node.js》作者,大牛</td></tr><tr><td>Cat Chen</td><td><a href="http://catchen.biz/home.zh-CN.html">陈广琛</a></td><td><a href="http://weibo.com/u/1640352230">@CatChen</a></td><td><a href="https://github.com/CatChen">@CatChen</a></td><td><a href="https://twitter.com/CatChen">@CatChen</a></td><td>Facebook</td><td>大牛</td></tr><tr><td>BYVod</td><td><a href="https://www.byvoid.com/">Beyond the Void</a></td><td><a href="http://weibo.com/byvoid">@BYVoid</a></td><td><a href="https://github.com/BYVoid">@byvoid</a></td><td><a href="https://twitter.com/byvoid">@BYVoid</a></td><td>Facebook 英国</td><td>《Node.js 开发指南》作者,大牛</td></tr><tr><td>郭宇</td><td><a href="http://blog.guoyu.me/">Einmal ist keinmal</a></td><td><a href="http://weibo.com/137601206">@郭宇</a></td><td><a href="https://github.com/turingou">@turingou</a></td><td><a href="https://twitter.com/turingou">@turingou</a></td><td>糗事百科,原支付宝</td><td>Node.js</td></tr><tr><td>勾三股四</td><td>#</td><td><a href="http://weibo.com/mx006">@勾三股四</a></td><td>#</td><td>#</td><td>淘宝</td><td>#</td></tr><tr><td>cnberg</td><td><a href="http://cnberg.com/">冰山一角</a></td><td><a href="http://weibo.com/berg">@berg</a></td><td>@cnberg</td><td><a href="">@cnberg</a></td><td>百度</td><td>骑行</td></tr><tr><td>大猫</td><td><a href="http://bigc.at/">意淫笔记</a></td><td><a href="http://weibo.com/daemao">@daemao</a></td><td><a href="https://github.com/Damao">@Damao</a></td><td><a href="https://twitter.com/13igcat">@13igcat</a></td><td>腾讯</td><td><a href="http://www.zhihu.com/people/13igcat">知乎</a></td></tr><tr><td>hzlzh</td><td><a href="https://zlz.im/">自力博客</a></td><td><a href="http://weibo.com/hzlzh">@hzlzh</a></td><td><a href="http://github.com/hzlzh">@hzlzh</a></td><td><a href="http://twitter.com/hzlzh">@hzlzh</a></td><td>腾讯</td><td>前端开发</td></tr><tr><td>C7210</td><td>beforweb.com&#x2F;</td><td><a href="http://weibo.com/c7210">@C7210</a></td><td><a href="http://twittercom/hzlzh">@C7210</a></td><td><a href="http://github.com/hzlzh">@C7210</a></td><td>#</td><td>UX、交互设计师、视觉与前端</td></tr><tr><td>kejun</td><td><a href="http://hikejun.com/">http://hikejun.com/</a></td><td><a href="http://weibo.com/kejun">#</a></td><td><a href="http://twittercom/kejun">#</a></td><td><a href="http://github.com/hzlzh">#</a></td><td>腾讯</td><td>前端开发</td></tr><tr><td>张鑫旭</td><td><a href="http://www.zhangxinxu.com/wordpress/">张鑫旭博客</a></td><td><a href="http://weibo.com/zhangxinxu">@张鑫旭</a></td><td><a href="https://github.com/zhangxinxu">@zhangxinxu</a></td><td><a href="https://twitter.com/zhangxinxu">@zhangxinxu</a></td><td>腾讯 上海 ISUX</td><td>前端开发</td></tr><tr><td>lucifr</td><td><a href="http://lucifr.com/">http://lucifr.com/</a></td><td><a href="http://weibo.com/lucifr">@lucifr</a></td><td><a href="http://twittercom/lucifr">@lucifr</a></td><td><a href="http://github.com/lucifr">@lucifr</a></td><td>#</td><td>Mac,ios</td></tr><tr><td>smallni</td><td><a href="http://www.smallni.com/">http://www.smallni.com/</a></td><td><a href="http://weibo.com/hzlzh">#</a></td><td><a href="https://twitter.com/smallniding/">@Smallni</a></td><td><a href="http://github.com/hzlzh">#</a></td><td>腾讯</td><td>前端开发</td></tr><tr><td>TQ</td><td><a href="http://targetkiller.net/">http://targetkiller.net/</a></td><td><a href="http://weibo.com/targetkiller">@Piser-TQ</a></td><td><a href="https://twitter.com/tqtan/">@tqtan</a></td><td><a href="https://github.com/targetkiller">@targetkiller</a></td><td>腾讯 ISUX</td><td>网页重构</td></tr><tr><td>LOO2K</td><td><a href="http://loo2k.com/blog/">LOO2K</a></td><td><a href="http://weibo.com/loo2k">@LOO2K</a></td><td><a href="https://github.com/loo2k">LOO2K</a></td><td><a href="https://twitter.com/loo2k/">LOO2K</a></td><td>墨筹网</td><td>少年才俊</td></tr><tr><td>qiqiboy</td><td><a href="http://www.qiqiboy.com/">qiqiboy</a></td><td><a href="http://weibo.com/qiqiboy">@qiqiboy</a></td><td>#</td><td>#</td><td>金山网络 UX</td><td>吐槽清理大师开发者</td></tr><tr><td>foru17</td><td><a href="http://luolei.org/">罗磊的独立博客</a></td><td><a href="http://weibo.com/foru17">@罗罗磊磊</a></td><td><a href="https://github.com/foru17">@foru17</a></td><td><a href="https://twitter.com/foru17">@foru17</a></td><td>金山网络 UX</td><td>打酱油的</td></tr><tr><td>余弦</td><td><a href="http://evilcos.me/">EVILCOS</a></td><td><a href="http://weibo.com/evilcos">余弦</a></td><td><a href="https://github.com/evilcos">evilcos</a></td><td>#</td><td><a href="http://www.knownsec.com/">知道创宇</a></td><td>安全（黑客）、架构、团队的各种观点与分享</td></tr><tr><td>汤姆大叔</td><td><a href="http://www.cnblogs.com/TomXu/">汤姆大叔的博客</a></td><td>#</td><td>#</td><td>#</td><td>#</td><td>《深入理解Bootstrap》、《JavaScript启示录》、《JavaScript设计模式》等多本前端书籍翻译作者</td></tr></tbody></table><p>####一些社区</p><table><thead><tr><th>名称</th><th>地址</th><th>介绍</th></tr></thead><tbody><tr><td>V2EX</td><td><a href="http://v2ex.com/">http://v2ex.com/</a></td><td>小众活跃社区</td></tr><tr><td>Ruby</td><td><a href="http://ruby-china.org/">http://ruby-china.org/</a></td><td>同 V2EX 氛围类似，不局限于Ruby</td></tr><tr><td>Node.js 中文社区</td><td><a href="http://cnodejs.org/">http://cnodejs.org/</a></td><td>Node.js 国内最活跃的社区</td></tr><tr><td>Code Wall</td><td><a href="https://coderwall.com/">https://coderwall.com/</a></td><td>国外技术社区</td></tr><tr><td>前端乱炖</td><td><a href="http://www.html-js.com/">http://www.html-js.com/</a></td><td>国内前端技术社区</td></tr><tr><td>DIV.IO</td><td><a href="http://div.io/">http://div.io/</a></td><td>国内前端技术社区</td></tr></tbody></table><p>#####企业官方博客</p><p>在开头我的 Feedly 订阅 opml 文件里比较全面。</p><table><thead><tr><th>名称</th><th>公司</th><th>部门</th><th>活跃度</th><th>简介</th><th>微博</th></tr></thead><tbody><tr><td><a href="http://isux.tencent.com/">ISUX 社交用户体验设计</a></td><td>腾讯</td><td>ISUX</td><td>★★★★☆</td><td>负责腾讯的社交网络相关产品的用户体验设计与研究。</td><td>#</td></tr><tr><td><a href="http://cdc.tencent.com/">腾讯 CDC</a></td><td>腾讯</td><td>CDC</td><td>★★★★☆</td><td>简介</td><td>#</td></tr><tr><td><a href="http://www.alloyteam.com/">腾讯Web前端 Alloy 团队 Blog</a></td><td>腾讯</td><td>SNG</td><td>★★★★☆</td><td>主要负责手机QQ、QQ互联、腾讯Q+、WebQQ项目的团队。</td><td><a href="http://weibo.com/alloyteam">alloyteam</a></td></tr><tr><td><a href="http://tid.tenpay.com/">TID-财付通设计中心</a></td><td>腾讯</td><td>TID</td><td>★★★★☆</td><td>简介</td><td>#</td></tr><tr><td><a href="http://mxd.tencent.com/">腾讯MXD移动互联网设计中心</a></td><td>腾讯</td><td>MXD</td><td>★★★★☆</td><td>简介</td><td><a href="http://e.t.qq.com/tencent_mxd">@腾讯MXD</a></td></tr><tr><td><a href="http://tid.tenpay.com/">人人网FED Team</a></td><td>人人网</td><td>FED</td><td>★★★★☆</td><td>简介</td><td>#</td></tr><tr><td><a href="http://udc.weibo.com/">微博UDC</a></td><td>新浪</td><td>UDC</td><td>★★★★☆</td><td>简介</td><td><a href="http://weibo.com/sudc">@微博UDC设计中心</a></td></tr><tr><td><a href="http://ued.sina.com.cn/">新浪UED</a></td><td>新浪</td><td>UED</td><td>★★★★☆</td><td>简介</td><td><a href="http://weibo.com/sudc">#</a></td></tr><tr><td><a href="http://uedc.163.com/">网易用户体验设计中心</a></td><td>网易</td><td>UED</td><td>★★★★☆</td><td>简介</td><td><a href="http://weibo.com/sudc">#</a></td></tr><tr><td><a href="http://www.aliued.cn/">阿里巴巴（中国站）用户体验设计部博客</a></td><td>阿里巴巴</td><td>UED</td><td>★★★★☆</td><td>简介</td><td><a href="http://weibo.com/aliued">@Alibaba-UED</a></td></tr><tr><td><a href="http://ued.taobao.org/blog/">淘宝UED</a></td><td>淘宝网</td><td>UED</td><td>★★★★☆</td><td>用户体验、交互设计、视觉设计、前端技术博客</td><td><a href="http://weibo.com/taobaoued">@淘宝UED</a></td></tr></tbody></table><p>##书籍</p><table><thead><tr><th>名称</th><th>作者</th><th>价格</th><th>出版社</th><th>简评</th></tr></thead><tbody><tr><td><a href="http://book.douban.com/subject/3327829/">Web标准设计</a></td><td>刘杰（嗷嗷）</td><td>RMB 60.00</td><td>清华大学出版社</td><td>基础入门</td></tr><tr><td><a href="http://book.douban.com/subject/4914146/">大巧不工 : Web前端设计修炼之道</a></td><td>赖定清 &#x2F; 林坚</td><td>RMB 59.00</td><td>机械工业出版社</td><td>适合入门，了解前端全局</td></tr><tr><td><a href="http://book.douban.com/subject/3132277/">高性能网站建设指南:前端工程师技能精髓</a></td><td>Steve Souders</td><td>RMB 35.00</td><td>电子工业出版社</td><td>能从原理层理解各种方法</td></tr><tr><td><a href="http://book.douban.com/subject/4719162/">高性能网站建设指南:Web开发者性能优化最佳实践</a></td><td>Steve Souders</td><td>RMB 49.80</td><td>电子工业出版社</td><td>#</td></tr><tr><td><a href="http://book.douban.com/subject/4124141/">Web站点优化 : Web站点优化</a></td><td>金</td><td>RMB 55.00</td><td>#</td><td>#</td></tr><tr><td><a href="http://book.douban.com/subject/10789820/">Node.js开发指南</a></td><td>郭家寶</td><td>RMB 45.00</td><td>#</td><td>作者很牛</td></tr><tr><td><a href="http://book.douban.com/subject/10546125/">JavaScript高级程序设计</a></td><td>Nicholas C. Zakas</td><td>RMB 99.00</td><td>人民邮电出版社</td><td>适合没事就翻翻</td></tr><tr><td><a href="http://book.douban.com/subject/2228378/">JavaScript权威指南</a></td><td>弗拉纳根</td><td>RMB 109.00</td><td>机械工业出版社</td><td>犀牛书</td></tr><tr><td><a href="http://book.douban.com/subject/6038371/">JavaScript DOM编程艺术</a></td><td>Jeremy Keith &#x2F;Jeffrey Sambells</td><td>RMB 49.00</td><td>人民邮电出版社</td><td>适合Javascript入门看</td></tr><tr><td><a href="http://book.douban.com/subject/25768396/">深入浅出node.js</a></td><td>朴灵</td><td>RMB 69.00</td><td>人民邮电出版社</td><td>一本从前端通往全端的好书</td></tr><tr><td><a href="http://book.douban.com/subject/3137282/">CSS开发王</a></td><td>张亚飞</td><td>RMB 49.00</td><td>电子工业出版社</td><td>适合有一定基础后CSS进阶用</td></tr><tr><td>####线上的一些翻译版好书</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>书名</th><th>地址</th><th>作者</th><th>译者</th><th>介绍</th></tr></thead><tbody><tr><td>JavaScript秘密花园</td><td><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/">http://bonsaiden.github.io/JavaScript-Garden/zh/</a></td><td>伊沃·韦特泽尔&amp;张易江</td><td><a href="http://sanshi.me/">三生石上</a></td><td>完整书籍，界面美观，有详细demo</td></tr><tr><td>Material Design 中文版</td><td><a href="http://design.1sters.com/">http://design.1sters.com/</a></td><td>Google设计手册</td><td>协同翻译</td><td>Google I&#x2F;O 2014 发布的 Material Design 官方手册的中文翻译</td></tr></tbody></table><h1 id="关于"><a href="#关于" class="headerlink" title="##关于"></a>##关于</h1><p>本 repo 会 不断更新，感谢推荐和分享新资源的朋友。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="前端笔记" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="前端笔记" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>初识Selenium和设置被测系统</title>
    <link href="http://example.com/2024/12/15/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium00/"/>
    <id>http://example.com/2024/12/15/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium00/</id>
    <published>2024-12-15T07:39:24.305Z</published>
    <updated>2024-12-15T10:54:31.373Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="初识Selenium和设置被测系统"><a href="#初识Selenium和设置被测系统" class="headerlink" title="初识Selenium和设置被测系统"></a><strong>初识Selenium和设置被测系统</strong></h2><p><strong>实验目的：</strong>了解Web功能测试的基本操作过程，掌握按照运行selenium的方法，能在PyCharm环境下使用selenium操纵浏览器执行简单操作，安装并熟悉被测系统软件.</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 .</p><p><strong>实验条件：</strong>win10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>Selenium是一个用于Web<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/5985445?fromModule=lemma_inlink">应用程序</a>测试的工具。Selenium测试直接运行在浏览器中，就像真正的用户在操作一样。支持的浏览器包括<a href="https://baike.baidu.com/item/IE/69103?fromModule=lemma_inlink">IE</a>（7, 8, 9, 10, 11），[Mozilla Firefox](<a href="https://baike.baidu.com/item/Mozilla">https://baike.baidu.com/item/Mozilla</a> Firefox&#x2F;3504923?fromModule&#x3D;lemma_inlink)，<a href="https://baike.baidu.com/item/Safari/597?fromModule=lemma_inlink">Safari</a>，<a href="https://baike.baidu.com/item/Google/86964?fromModule=lemma_inlink">Google</a> <a href="https://baike.baidu.com/item/Chrome/5633839?fromModule=lemma_inlink">Chrome</a>，<a href="https://baike.baidu.com/item/Opera/25140?fromModule=lemma_inlink">Opera</a>，<a href="https://baike.baidu.com/item/Edge/16194485?fromModule=lemma_inlink">Edge</a>等。这个工具的主要功能包括：测试与浏览器的<a href="https://baike.baidu.com/item/%E5%85%BC%E5%AE%B9%E6%80%A7/1446869?fromModule=lemma_inlink">兼容性</a>——测试应用程序看是否能够很好得工作在不同浏览器和操作系统之上。测试<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD/10394740?fromModule=lemma_inlink">系统功能</a>——创建回归测试检验软件功能和<a href="https://baike.baidu.com/item/%E7%94%A8%E6%88%B7%E9%9C%80%E6%B1%82/56497046?fromModule=lemma_inlink">用户需求</a>。支持自动录制动作和自动生成.Net、<a href="https://baike.baidu.com/item/Java/85979?fromModule=lemma_inlink">Java</a>、<a href="https://baike.baidu.com/item/Perl/851577?fromModule=lemma_inlink">Perl</a>等不同语言的<a href="https://baike.baidu.com/item/%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC/10921546?fromModule=lemma_inlink">测试脚本</a>。</p><p>一、 Selenium环境配置步骤：</p><ol><li>正常配置Python环境 Pycharm</li><li>安装selenium → 在Pycharm中新建一个虚拟项目，在Terminal中输入<code>pip install selenium==4.4.0</code> 实现selenium的安装，使用pip show selenium 验证安装是否成功。</li><li>浏览器驱动的下载与配置 → 以谷歌浏览器为例：</li></ol><p>下载谷歌浏览器： <a href="https://www.google.cn/chrome/">https://www.google.cn/chrome/</a></p><p>下载谷歌浏览器驱动： <a href="https://chromedriver.storage.googleapis.com/index.html">https://chromedriver.storage.googleapis.com/index.html</a></p><p>注意：下载的浏览器驱动一定要与浏览器版本号（最近似）匹配，记录浏览器驱动文件的存放地址（可以放到磁盘根目录中，方便在脚本中输入完整路径）。</p><ol start="4"><li>在代码中import 对应的依赖</li></ol><p>二、 Selenium对浏览器的操控：</p><ol><li>在pycharm已建立的项目中新建一个webauto.py文件，并运行观察selenium对浏览器的控制</li></ol><p><img src="/img/selenium/se00-00.png" alt="Selenium对浏览器的操控"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 selenium 包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个webdriver对象，即将Chromedriver 实例化。</span></span><br><span class="line"><span class="comment"># Chrome() 函数将按照指定的内容寻找浏览器驱动</span></span><br><span class="line">driver = webdriver.Chrome(<span class="string">&quot;D:\\chromedriver.exe&quot;</span>)</span><br><span class="line"><span class="comment"># 上面改成你的chromedriver.exe的存放路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开指定网页 比如打开百度网页</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭 driver</span></span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>运行其它webdriver对象可执行的浏览器窗口操作及导航操作：</li></ol><p>获取当前页面的url：<code>driver.current_url</code></p><p>获取当前页面的title：<code>driver.title</code></p><p>窗口操作：设置窗口大小 <code>driver.set_window_size(1920,1080)</code></p><p>​窗口最小化 <code>driver.minimize_window()</code></p><p>​窗口最大化 <code>driver.maximize_window()</code></p><p>​全屏窗口 <code>driver.fullscreen_window()</code></p><p>导航操作：页面返回 <code>driver.back()</code></p><p>​页面前进 <code>driver.forward()</code></p><p>​页面刷新 <code>driver.refresh()</code></p><p>窗口位置操作：设置窗口位置坐标 <code>driver.set_window_position(x=500, y=400)</code></p><p>​ 设置窗口坐标及宽度和高度  <code>driver.set_window_rect(x=30, y=30, width=450, height=450)</code></p><p>​ 获取当前窗口位置坐标 <code>driver.get_window_position()</code></p><p>​ 获取当前窗口的长和宽 <code>driver.get_window_size()</code></p><p>关闭窗口操作：<code>driver.close()</code>  关闭当前窗口，或最后打开的窗口</p><p>​ <code>driver.quit()</code>  关闭所有关联窗口，并且安全关闭session</p><p>三、 安装并熟悉被测系统软件</p><ol><li><p>解压 bysms.zip 后，进入 bysms目录，双击运行 runserver.bat 即可启动。</p></li><li><p>浏览器访问 登录页面 <a href="http://127.0.0.1:8047/mgr/sign.html">http://127.0.0.1:8047/mgr/sign.html</a></p></li><li><p>输入管理员账号登录——用户名 ：byhy 密码： 88888888</p></li></ol><p>练习：Selenium对浏览器的操控</p><h6 id="提交代码："><a href="#提交代码：" class="headerlink" title="提交代码："></a>提交代码：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"></span><br><span class="line">path = Service(<span class="string">r&quot;C:\\chromedriver.exe&quot;</span>)</span><br><span class="line">driver = webdriver.Chrome(service=path)</span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line">driver.set_window_size(<span class="number">1920</span> ,<span class="number">1080</span>)</span><br><span class="line">driver.minimize_window()</span><br><span class="line">driver.maximize_window()</span><br><span class="line">driver.fullscreen_window()</span><br><span class="line">driver.back()</span><br><span class="line">driver.forward()</span><br><span class="line">driver.refresh()</span><br><span class="line">driver.set_window_position(x=<span class="number">500</span>, y=<span class="number">400</span>)</span><br><span class="line">driver.set_window_rect(x=<span class="number">30</span>, y=<span class="number">30</span>, width=<span class="number">450</span>, height=<span class="number">450</span>)</span><br><span class="line">driver.get_window_position()</span><br><span class="line">driver.get_window_size()</span><br><span class="line">driver.close()</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>选择元素基础与同步测试问题的解决</title>
    <link href="http://example.com/2024/12/15/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium01/"/>
    <id>http://example.com/2024/12/15/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium01/</id>
    <published>2024-12-15T07:29:50.467Z</published>
    <updated>2025-01-07T06:59:33.387Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="选择元素基础与同步测试问题的解决"><a href="#选择元素基础与同步测试问题的解决" class="headerlink" title="选择元素基础与同步测试问题的解决"></a><strong>选择元素基础与同步测试问题的解决</strong></h2><p><strong>实验目的：</strong>了解在selenium中选择界面元素的基础方法，能在PyCharm环境下使用selenium操纵相关元素执行点击、输入数据操作；了解何时需要同步测试，掌握解决同步测试的三种方法。</p><p><strong>实验要求：</strong>在pycharm 环境下完成实验目的中所述各项任务 </p><p><strong>实验条件：</strong>win7&#x2F;10、pycharm、selenium4.4.0 </p><p><strong>实验内容及步骤：</strong></p><p>在执行WEB界面自动化测试时，要操控网页上的元素，首先需要选择界面元素，或者说定位界面元素。也就是先要告诉浏览器，你要操作哪个界面元素，让它找到你要操作的对象。因此，我们做测试时要让浏览器找到元素，一般使用元素的特征来确定一个Web元素，也就是用什么属性能够识别出指定的元素与其它元素的区别。</p><p>Selenium中的WebDriver对象和WebElement对象都提供了<code>find_element（find_elements）</code>函数，使用添加不同参数的方法帮助我们定位元素。</p><p>使用前先要导入By方法：<code>from selenium.webdriver.common.by import By</code></p><p>练习网页：<a href="https://cdn2.byhy.net/files/selenium/sample1.html">https://cdn2.byhy.net/files/selenium/sample1.html</a></p><p>一、 WebDriver对象的<code>find_element（find_elements）</code>函数：</p><ol><li><p>根据 id 属性 选择元素： <code>driver.find_element(By.ID, &#39;id值&#39;)</code>  ，此语句返回对应id值的元素，若没有符合条件的元素，则返回NoSuchElementException 异常。由于id值是唯一的，所以它是最高效的定位元素方法。</p></li><li><p>根据 类别名称 class属性 选择元素：由于相关类别名称的元素可能有多个，一般选择时会有多个返回值，保存在一个列表中，所以使用find_elements函数执行类别选择，例如我们常写为： <code>driver.find_elements(By.CLASS_NAME, &#39;class值&#39;)</code>  。对于find_elements函数执行时，若没有符合条件的元素，则返回空列表。</p></li></ol><p>注意，当一个元素有多个class 类型时，可以使用其中任何一个class属性值来选择此元素，而不能同时列出多个class 类型值。</p><ol start="3"><li><p>根据 tag标签名选择元素：与上面的class属性类似，一般任意打开一个页面，都会发现大量的tag标签，选择时会有多个返回值，保存在一个列表中，常常使用find_elements函数执行选择，例如：<code>driver.find_elements(By.TAG_NAME, &#39;tag值&#39;)</code>，由于重复率高，应尽量少用。</p></li><li><p>根据name属性选择元素：例如：<code>find_element(By.NAME, &#39;name值&#39;)</code></p></li><li><p>根据link_text链接标签选择元素（a标签，专门用来定位超链接文本，精确匹配）：例如：<code>find_element(By.LINK_TEXT, &#39;超链接文本值&#39;)</code></p></li><li><p>根据partial_link_text链接标签选择元素（通过传入a标签局部文本或全部文本来定位元素，模糊匹配）：它是对link_text定位的一种补充，当链接上的文本内容比较长的时候，可以取文本的一部分进行定位，当然这部分可以唯一地标识这个链接。例如：<code>find_element(By.PARTIAL_LINK_TEXT, &#39;超链接部分文本值&#39;)</code></p></li></ol><p>选中元素后的操作函数：鼠标左键点击操作click() 与 传入文本操作sent_keys(str)，其中str为String类型的文本。</p><p>二、 WebElement对象的find_element（find_elements）函数：让我们在元素内部再选择元素</p><p><code>element = driver.find_element(By.ID,&#39;container&#39;)</code></p><p><code>spans = element.find_elements(By.TAG_NAME, &#39;span&#39;)</code></p><p> <img src="D:\桌面\wps2.jpg" alt="wps2"></p><p>当我们运行测试时，应用程序可能不会和我们输入操作同步给出反应。比如：当我们从数据库中查询信息、一个新窗口的弹出、一个进程条到达100%、显示一个状态信息等都需要占用几秒钟的时间。这种由于应用程序反应时间过慢，界面元素尚未出现我们就执行了针对该元素的操作，这会导致测试失败。这就是测试与程序运行不同步的问题。</p><p>练习网页：<a href="https://www.byhy.net/_files/stock1.html">https://www.byhy.net/_files/stock1.html</a></p><p>三、 测试同步问题的解决：</p><ol><li>强制等待：sleep 直接设置等待时间。</li></ol><p>首先导入time 包使用sleep方法：</p><p><code>from time import sleep</code></p><p>sleep(秒数)</p><p>这种方法过于固化，假如一个自动化程序里面某个测试过程设置等待时间过小，测试依然会失败，如果加大等待时间，而此时服务器反映很快，根本不需要你设定的很大的等待时间，就会造成大量的时间浪费。</p><ol start="2"><li>隐式等待： <code>implicitly_wait</code></li></ol><p>这是Webdriver 对象的一个方法，应用时直接使用实例化的Webdriver 对象来调用：</p><p><code>driver.implicitly_wait(秒数)</code></p><p>使用该方法时，如果发现元素没有找到，并不立即返回找不到元素的错误，而是通过设定一个最大等待时间的参数，使测试程序周期性（每隔半秒钟）重新寻找该元素，直到该元素找到，或者超出指定最大等待时长，这时才抛出异常。</p><ol start="3"><li>显式等待： <code>WebDriverWait</code></li></ol><p>有一些更复杂的情况：操作引起了页面的变化，而接下来要操作变化的元素的时候，就需要使用显式等待。</p><p>首先导入显式等待：</p><p><code>from selenium.webdriver.support.wait import WebDriverWait</code></p><p><code>WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=None)</code></p><p>其中，driver：浏览器驱动； timeout：等待上限，单位是秒； poll_frequency：检测的轮询间隔，默认值是0.5秒；ignored_exceptions：超时后抛出的异常信息，默认抛出NoSuchElementExeception异常。</p><p>在使用显式等待 WebDriverWait 时要明确，条件是选择的元素必须可见。这就往往需要结合until()或者until_not()和expected_conditions类来使用。</p><p>这时需要先导入期望条件：</p><p><code>from selenium.webdriver.support import expected_conditions as EC</code></p><p>再使用显式等待，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义Chrom浏览器驱动的路径地址</span></span><br><span class="line">path = <span class="string">&#x27;D:\\chromedriver.exe&#x27;</span></span><br><span class="line">driver = webdriver.Chrome(service=Service(path))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开百度网页</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位登录按钮并点击</span></span><br><span class="line">driver.find_element(By.LINK_TEXT, <span class="string">&#x27;登录&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置显示等待</span></span><br><span class="line"><span class="comment"># 等待元素 id = &#x27;TANGRAM__PSP_11__changeSmsCodeItem&#x27; 加载到DOM树中，</span></span><br><span class="line"><span class="comment"># 等待上限是10秒，每0.8秒去验证一下条件是否成立</span></span><br><span class="line">WebDriverWait(driver, <span class="number">10</span>, <span class="number">0.8</span>).until(EC.presence_of_element_located(By.ID, <span class="string">&#x27;TANGRAM__PSP_11__changeSmsCodeItem&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击短信登录选项卡</span></span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;TANGRAM__PSP_11__changeSmsCodeItem&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>练习：要求如下</p><ol><li><p>以管理员身份登录 <a href="http://127.0.0.1:8047/mgr/sign.html%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D">http://127.0.0.1:8047/mgr/sign.html，用户名</a> ：byhy 密码： 88888888</p></li><li><p>检查左侧菜单，预期结果为：前三项菜单名称分别为：客户、药品、订单</p></li><li><p>注意，必须输出测试结果：若是预期结果的三项菜单，则输出“测试通过”，否则输出“测试不通过”</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本程序 在个人电脑 使用 anaconda 集成环境创建了虚拟环境，</span></span><br><span class="line"><span class="comment"># 已将chromedriver 放置于虚拟环境目录下 即无需声明驱动器路径</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;http://127.0.0.1:8047/mgr/sign.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">username = driver.find_element(By.ID, <span class="string">&quot;username&quot;</span>)</span><br><span class="line">username.send_keys(<span class="string">&quot;byhy&quot;</span>)</span><br><span class="line">username.click()</span><br><span class="line">password = driver.find_element(By.ID, <span class="string">&quot;password&quot;</span>)</span><br><span class="line">password.send_keys(<span class="string">&quot;88888888&quot;</span>)</span><br><span class="line">password.click()</span><br><span class="line">driver.find_element(By.XPATH, <span class="string">&quot;/html/body/div/div[2]/div[1]/div[3]/div/button&quot;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">Menubar = driver.find_elements(By.XPATH, <span class="string">&#x27;//*[@id=&quot;root&quot;]/aside/section/ul&#x27;</span>)</span><br><span class="line"><span class="comment"># print(Menubar.find_element(By.TAG_NAME,&quot;span&quot;))</span></span><br><span class="line">barElemetnList = Menubar[<span class="number">0</span>].find_elements(By.TAG_NAME, <span class="string">&quot;span&quot;</span>)</span><br><span class="line">barList = []</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> barElemetnList:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(barList) &lt; <span class="number">3</span>:</span><br><span class="line">        barList.append(item.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">targetList = [<span class="string">&quot;客户&quot;</span>, <span class="string">&quot;药品&quot;</span>, <span class="string">&quot;订单&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> barList == targetList:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;测试通过&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试不通过&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>操控元素的基本方法</title>
    <link href="http://example.com/2024/12/15/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium02/"/>
    <id>http://example.com/2024/12/15/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/selenium/selenium02/</id>
    <published>2024-12-15T07:29:50.467Z</published>
    <updated>2025-01-07T06:59:36.036Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="selenium操控元素的基本方法"><a href="#selenium操控元素的基本方法" class="headerlink" title="selenium操控元素的基本方法"></a><strong>selenium操控元素的基本方法</strong></h2><p>**实验目的:**了解在 selenium中选择界面元素后操控的基础方法，能在PyCharm环境下使用sclenium 中 WebElement的相关函数实现元紊的.<br>**基本操控:**元素鼠标左键点击、输入框传入文本及清空文本、获取元素文本内容、获取元素各种属性值.</p><p>**实验要求:**在pycharm环境下完成实验目的中所述各项任务.</p><p><strong>实验条件</strong>: win7&#x2F;10、pycharm. selenium4.4.0 .</p><p>操控元素通常包括：</p><ul><li><code>点击元素</code></li><li><code>在元素中输入字符串，通常是对输入框这样的元素</code></li><li><code>获取元素包含的信息，比如文本内容，元素的属性</code></li></ul><h4 id="点击元素"><a href="#点击元素" class="headerlink" title="点击元素"></a>点击元素</h4><p><code>点击元素</code> 顾名思义，通过调用元素WebElement对象的click()方法，来实现点击这个动作。在调用方法的时候，浏览器收到自动化命令，默认点击所选元素的中间位置</p><!-- ![selenium选择元素](/img/selenium01.jpg) --><p><img src="/img/selenium/se01-00.png" alt="selenium选择元素"></p><p>我们要点击 <code>更多</code> 这个按钮，相当于点击右边这条相关链接。</p><h4 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a>输入框</h4><p>要在输入框中输入字符串，需要调用元素WebElement对象的<code>send_keys()</code>方法。如果输入框中存在字符串，可以使用WebElement对象的clear()方法来将内容清除。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.clear() <span class="comment"># 清除已有字符串</span></span><br><span class="line">element.send_keys(<span class="string">&#x27;新字符串&#x27;</span>) <span class="comment"># 输入新字符串</span></span><br></pre></td></tr></table></figure><h4 id="获取元素的信息"><a href="#获取元素的信息" class="headerlink" title="获取元素的信息"></a>获取元素的信息</h4><ul><li><code>获取元素的文本内容</code></li><li><code>获取元素属性</code></li><li><code>获取整个元素对应的HTML</code></li><li><code>获取输入框里面的文字</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过WebElement对象的text属性获取文本内容</span></span><br><span class="line">element = wd.find_element(By.ID, <span class="string">&#x27;ID值&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(element.text)</span><br><span class="line"><span class="comment"># 若文本内容没有完全展示在界面上，可以使用下面两种方式</span></span><br><span class="line">element.get_attribute(<span class="string">&#x27;innerText&#x27;</span>)</span><br><span class="line">element.get_attribute(<span class="string">&#x27;textContent&#x27;</span>)</span><br><span class="line"><span class="comment"># 区别在于 innerText只显示元素可见文本内容，textContent显示所有内容</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过WebElement对象的get_attribute方法来获取元素的属性值</span></span><br><span class="line">element = wd.find_element(By.ID. <span class="string">&#x27;ID值&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(element.get_attribute(<span class="string">&#x27;class&#x27;</span>))</span><br><span class="line"><span class="comment"># 执行完自动化代码后，可以使用WebDriver对象的quit()方法关闭浏览器窗口</span></span><br><span class="line">wd.quit()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要获取整个元素对应的HTML文本内容，可以使用 </span></span><br><span class="line">element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果，只是想获取某个元素 内部 的HTML文本内容，可以使用 </span></span><br><span class="line">element.get_attribute(<span class="string">&#x27;innerHTML&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取输入框里面的文字</span></span><br><span class="line">element = wd.find_element(By.ID, <span class="string">&#x27;ID值&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(element.get_attribute(<span class="string">&#x27;value&#x27;</span>)) </span><br></pre></td></tr></table></figure><p><strong>实验内容及步骤:</strong></p><p>在执行WEB界面自动化测试开发中，元素的定位与操作是基础，也可以说学习元素选择方法的目的就是来操控网页上的元素，最基本的操控从鼠标点击操作开始。</p><p>一、对元素执行鼠标左键点击操作: <code>click()</code>方法。</p><p>​1.在 <a href="https://www.51job.com/">https://www.51job.com/</a> 网站中，点击搜索栏中的添加工作地点的元素，将会弹出选择地区的新界面，在此界面中，检查是否有已被选中的地区，如果有，依次进行删除操作，然后点击“上海”，确定选择．使用<code>qiut()</code>关闭浏览器。</p><p>二、对元素执行获取在界面上显示的文本内容: text属性。</p><p>text属性只能获取元素展示在界面上的文本内容，即处于一对标签之间的文本。</p><p>​2．在上个操作步骤的关闭浏览器之前，添加: 获取网站显示语言的元素的文本内容，如果为“简”则输出:“本网站现以简体中文版显示”，如果为“EN”需输出:“ 本网站现以英文版显示 ”。</p><p>三、对元素执行输入框中传入文本、清空文本操作: <code>sent _keys(str)</code>方法和 <code>clear()</code>方法。</p><p>​调用元素WebElement对象的 <code>send_keys(str)</code>方法完成字符串的输入，输入前可以使用WebElement对象的<code>clear()</code>方法清除输入框中己经有的内容，其中 str为String类型的文本。</p><p>​3．在上个操作步骤的关闭浏览器之前，添加: 清空搜索输入框，再向输入框中传入“python”文本。</p><p>四、对元紊执行获取元素的多种属性值: <code>get_attribute()</code>方法。</p><ul><li><p>获取元素的某种属性值时，设置<code>get _attribute()</code>方法的参数为属性名称，注意以字符串方式传参(如:’ style’) 。</p></li><li><p>获取输入框元素的文本时，没置<code>get_attribute()</code>方法的参数为’value’。</p></li><li><p>获取整个元素对应的HTML文本内容，设置get_attribute()方法的参数为’<code>outerHTML</code>‘，获取某个元素内部的HTML文本内容，设置<code>get _ attribute()</code>方法的参数为’<code>innerHTML</code>‘。</p></li><li><p>对于没有展示在界面上，或者没有完全展示在界面上的元素文本内容，用WebElement对象的 text属性，获取文本内容，就会有问题。这时，需要尝试使用<code>element.get_ attribute(&#39;innerText&#39;)</code>，或者 <code>element.get_attribute(&#39;textContent&#39;)</code>来完成元素文本内容的获取。其中，<code>innerText</code>只显示元可见文本内容，<code>textContent</code>显示元素中所有文本内容(包括display属性为none的部分)。</p></li></ul><p>​4、在上个操作步骤的关闭浏览器之前，添加:</p><ul><li>获取并输出“扫码登录”的二维码资源(src)信息;</li><li>获取输入框中的文本信息,判定是否为“python”，并输出检查结果;</li><li>点击搜索按钮，将搜索到的第一条信息对应的全部HTML文本内容抓取并输出;</li><li>点击“最新优先”选项卡，将此时搜索到的第一条信息对应的可见文本内容抓取并输出；</li><li>点击“薪资优先”选项卡，将此时搜索到的第一条信息对应的所有文本内容抓取并输出；</li></ul><p>本课要求:编写以下测试用例</p><p>1．完成上述四个实验步骤（1，2，3，4）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&#x27;https://www.51job.com&#x27;</span>)</span><br><span class="line">driver.find_element(By.CLASS_NAME, <span class="string">&#x27;fltr.radius_5&#x27;</span>).find_element(By.ID, <span class="string">&#x27;work_position_click&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">address_element = driver.find_element(By.ID, <span class="string">&#x27;work_position_click_multiple&#x27;</span>)</span><br><span class="line">spans = address_element.find_elements(By.TAG_NAME, <span class="string">&#x27;span&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> span <span class="keyword">in</span> spans:</span><br><span class="line">    span.click()</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;work_position_click_center_right_list_category_000000_020000&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID, <span class="string">&#x27;work_position_click_bottom_save&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">showtext = driver.find_element(By.ID, <span class="string">&#x27;languagelist&#x27;</span>).find_element(By.CLASS_NAME, <span class="string">&#x27;tle&#x27;</span>).text</span><br><span class="line"><span class="keyword">if</span> showtext == <span class="string">&quot;简&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;本网站现以简体中文版显示\n&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> showtext == <span class="string">&quot;EN&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;本网站现以英文版显示\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">input_element = driver.find_element(By.ID, <span class="string">&#x27;kwdselectid&#x27;</span>)</span><br><span class="line">input_element.clear()</span><br><span class="line">input_element.send_keys(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二维码资源为：\n&quot;</span>+driver.find_element(By.ID, <span class="string">&#x27;qrimg&#x27;</span>).get_attribute(<span class="string">&#x27;src&#x27;</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">input_text = driver.find_element(By.ID, <span class="string">&#x27;kwdselectid&#x27;</span>).get_attribute(<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> input_text != <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入查询内容有误！\n&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入查询内容正确！\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.CLASS_NAME, <span class="string">&#x27;top_wrap&#x27;</span>).find_element(By.TAG_NAME, <span class="string">&#x27;button&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(driver.find_element(By.CLASS_NAME, <span class="string">&#x27;j_result&#x27;</span>).find_element(By.TAG_NAME, <span class="string">&#x27;div&#x27;</span>).get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">elements = driver.find_element(By.CLASS_NAME, <span class="string">&#x27;j_tlc&#x27;</span>).find_elements(By.TAG_NAME, <span class="string">&#x27;span&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    <span class="keyword">if</span> element.text == <span class="string">&#x27;最新优先&#x27;</span>:</span><br><span class="line">        element.click()</span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            driver.find_element(By.CLASS_NAME, <span class="string">&#x27;j_result&#x27;</span>).find_element(By.TAG_NAME, <span class="string">&#x27;div&#x27;</span>).get_attribute(<span class="string">&#x27;innerText&#x27;</span>))</span><br><span class="line">    <span class="keyword">elif</span> element.text == <span class="string">&#x27;薪资优先&#x27;</span>:</span><br><span class="line">        element.click()</span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            driver.find_element(By.CLASS_NAME, <span class="string">&#x27;j_result&#x27;</span>).find_element(By.TAG_NAME, <span class="string">&#x27;div&#x27;</span>).get_attribute(<span class="string">&#x27;textContent&#x27;</span>))</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2．以管理员身份登录http:1&#x2F;127.0.0.1:8047&#x2F;mgr&#x2F;sign.html，用户名 :byhy 密码:88888888。点击添加客户，输入客户名为“南京中医院”的客户，填写客户基本信息。预期结果为:成功登录后，检查客户列表第一项结果中客户名、电话、地址信息, 都是正确的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;http://127.0.0.1:8047/mgr/sign.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;username&quot;]&#x27;</span>).send_keys(<span class="string">&quot;byhy&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;password&quot;]&#x27;</span>).send_keys(<span class="string">&quot;88888888&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;/html/body/div/div[2]/div[1]/div[3]/div/button&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/button&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[1]/input&#x27;</span>).send_keys(<span class="string">&quot;南京中医院&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[2]/input&#x27;</span>).send_keys(<span class="string">&quot;13888888888&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/textarea&#x27;</span>).send_keys(<span class="string">&quot;南京市&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[2]/button[1]&#x27;</span>).click()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;通过&quot;</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3．以管理员身份登录htp:1&#x2F;127.0.0.1:8047&#x2F;mgr&#x2F;sign.html，用户名: byhy密码:88888888。点击添加客户，输入客户名为“南京中医院”的客户，填写客户基本信息;然后再点击编辑，修改客户名为:“南京省中医院”。预期结果为:成功登录后,检查客户列表第一项结果中客户名、电话、地址信息都是正确的(修改后的结果)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;http://127.0.0.1:8047/mgr/sign.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;username&quot;]&#x27;</span>).send_keys(<span class="string">&quot;byhy&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;password&quot;]&#x27;</span>).send_keys(<span class="string">&quot;88888888&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;/html/body/div/div[2]/div[1]/div[3]/div/button&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/button&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[1]/input&#x27;</span>).send_keys(<span class="string">&quot;南京中医院&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[2]/input&#x27;</span>).send_keys(<span class="string">&quot;13888888888&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[1]/div[3]/textarea&#x27;</span>).send_keys(<span class="string">&quot;南京市&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[1]/div[2]/button[1]&#x27;</span>).click()</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[2]/div/input&#x27;</span>).send_keys(<span class="string">&quot;南京中医院&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[4]/div/label[1]&#x27;</span>).click()</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[1]/div[1]/input&#x27;</span>).send_keys(<span class="string">&quot;南京省中医院&quot;</span>)</span><br><span class="line">driver.find_element(By.XPATH,<span class="string">&#x27;//*[@id=&quot;root&quot;]/div/section[2]/div[3]/div[2]/div/label[1]&#x27;</span>).click()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;通过&quot;</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="selenium" scheme="http://example.com/categories/selenium/"/>
    
    
  </entry>
  
  <entry>
    <title>音乐页面</title>
    <link href="http://example.com/2024/12/13/%E5%85%B6%E4%BB%96/playlist/"/>
    <id>http://example.com/2024/12/13/%E5%85%B6%E4%BB%96/playlist/</id>
    <published>2024-12-13T13:05:44.000Z</published>
    <updated>2024-12-15T07:28:29.084Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 简单示例 (id, server, type)  --><link rel="stylesheet" href="https://unpkg.com/aplayer@1.10.1/dist/APlayer.min.css"><!--APlayer的样式--><script src="https://unpkg.com/aplayer@1.10.1/dist/APlayer.min.js"></script><!--APlayer的依赖--><script src="https://unpkg.com/meting@2/dist/Meting.min.js"></script><!--Meting的依赖--><meting-js    server="netease"    type="playlist"    autoplay=false     lrc-type=3    id="7893371839"> </meting-js> ]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音乐" scheme="http://example.com/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="音乐页面" scheme="http://example.com/tags/%E9%9F%B3%E4%B9%90%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>第一篇文章</title>
    <link href="http://example.com/2024/12/09/first-title/"/>
    <id>http://example.com/2024/12/09/first-title/</id>
    <published>2024-12-09T13:36:46.000Z</published>
    <updated>2025-01-09T01:18:12.060Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><h4 id="标题四"><a href="#标题四" class="headerlink" title="标题四"></a>标题四</h4><h5 id="标题五"><a href="#标题五" class="headerlink" title="标题五"></a>标题五</h5><p><strong>这是加粗</strong></p><p><em>这是斜体</em></p><ul><li>无序列表</li></ul><ol><li>有序列表</li></ol><p><code>内嵌代码</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码块</span><br></pre></td></tr></table></figure><blockquote><p>引用</p></blockquote><style>body, div, h1,h2, form, fieldset, footer,p {    margin: 0; padding: 0; border: 0; outline: none;}body {    color: #7c7873;    font-family: 'YanoneKaffeesatzRegular';    background-color: #D7D7D7;}p {text-shadow:0 1px 0 #fff;}#wrap {width:530px; margin:20px auto 0; }h1 {margin-bottom:20px; text-align:center;font-size:48px; text-shadow:0 1px 0 #ede8d9; }    #form_wrap { overflow:hidden; height:446px; position:relative; top:0px;        -webkit-transition: all 1s ease-in-out .3s;        -moz-transition: all 1s ease-in-out .3s;        -o-transition: all 1s ease-in-out .3s;        transition: all 1s ease-in-out .3s;}    #form_wrap:before {content:"";        position:absolute;        bottom:128px;left:0px;        background:url('https://uipv4.zywvvd.com:33030/HexoFiles/images/before.png');        width:530px;height: 316px;}    #form_wrap:after {content:"";position:absolute;        bottom:0px;left:0;        background:url('https://uipv4.zywvvd.com:33030/HexoFiles/images/after.png');        width:530px;height: 260px; }    #form_wrap.hide:after, #form_wrap.hide:before {display:none; }    #form_wrap:hover {height:806px;top:-30px;}    form {background:#f7f2ec url('https://uipv4.zywvvd.com:33030/HexoFiles/images/letter_bg.png');         position:relative;top:200px;overflow:hidden;        height:200px;width:400px;margin:0px auto;padding:20px;         border: 1px solid #fff;        border-radius: 3px;         -moz-border-radius: 3px; -webkit-border-radius: 3px;        box-shadow: 0px 0px 3px #9d9d9d, inset 0px 0px 27px #fff;        -moz-box-shadow: 0px 0px 3px #9d9d9d, inset 0px 0px 14px #fff;        -webkit-box-shadow: 0px 0px 3px #9d9d9d, inset 0px 0px 27px #fff;        -webkit-transition: all 1s ease-in-out .3s;        -moz-transition: all 1s ease-in-out .3s;        -o-transition: all 1s ease-in-out .3s;        transition: all 1s ease-in-out .3s;}        #form_wrap:hover form {height:530px;}        label {            margin: 11px 20px 0 0;             font-size: 16px; color: #b3aba1;            text-transform: uppercase;             text-shadow: 0px 1px 0px #fff;        }        #form_wrap input[type=submit] {            position:relative;font-family: 'YanoneKaffeesatzRegular';             font-size:24px; color: #7c7873;text-shadow:0 1px 0 #fff;            width:100%; text-align:center;opacity:0;            background:none;            cursor: pointer;            -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px;             -webkit-transition: opacity .6s ease-in-out 0s;            -moz-transition: opacity .6s ease-in-out 0s;            -o-transition: opacity .6s ease-in-out 0s;            transition: opacity .6s ease-in-out 0s;        }        #form_wrap:hover input[type=submit] {z-index:1;opacity:1;            -webkit-transition: opacity .5s ease-in-out 1.3s;            -moz-transition: opacity .5s ease-in-out 1.3s;            -o-transition: opacity .5s ease-in-out 1.3s;            transition: opacity .5s ease-in-out 1.3s;}            #form_wrap:hover input:hover[type=submit] {color:#435c70;}  .top-banner {    background-color: #555;  }</style><div style="margin-top: -10px">    <div id="wrap">        <div id='form_wrap'>            <form>                <img src='https://uipv4.zywvvd.com:33030/HexoFiles/images/violet.jpg' height=245px/>                <p >Hello ,</p>                <label for="email"> </label>                一起见证奇迹吧！！！        </div>    </div></div><script src="http://www.jq22.com/jquery/1.7.2/jquery.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="test" scheme="http://example.com/categories/test/"/>
    
    
    <category term="第一篇文章" scheme="http://example.com/tags/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 使用指南</title>
    <link href="http://example.com/2024/12/09/hello-world/"/>
    <id>http://example.com/2024/12/09/hello-world/</id>
    <published>2024-12-09T13:28:54.024Z</published>
    <updated>2025-01-09T01:48:24.036Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
